openapi: 3.0.3
info:
  title: Exerp API
  version: '6'
  description: >-
    API for integrating client systems with the Exerp platform. This version of
    the API uses JSON-RPC style. It contains the same services as version 5 but
    aimed at a modern technical stack. The API is designed to make migration
    from version 5 easy. Each service in version 5 maps straightforwardly to one
    in version 6. See [this page](https://clublead.atlassian.net/wiki/x/NwMDRQ)
    for an overview of both API versions.
servers:
  - url: https://lmr.exerp.qa/api/v6
paths:
  /access/accessGate:
    post:
      description: >-
        [AccessAPI accessGate v5
        documentation](https://clublead.atlassian.net/wiki/x/ggSaH)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                memberCard:
                  $ref: '#/components/schemas/MemberCard'
                usagePointSourceKey:
                  $ref: '#/components/schemas/ApiUsagePointSourceKey'
              required:
                - usagePointSourceKey
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  person:
                    $ref: '#/components/schemas/PersonSimple'
                  usagePointName:
                    type: string
                  usagePointKey:
                    $ref: '#/components/schemas/CompositeKey'
                  actionKey:
                    $ref: '#/components/schemas/CompositeKey'
                  actionName:
                    type: string
                  gateCommandData:
                    $ref: '#/components/schemas/GateCommandData'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /access/assignCard:
    post:
      description: >-
        [AccessAPI assignCard v5
        documentation](https://clublead.atlassian.net/wiki/x/koGJFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                card:
                  $ref: '#/components/schemas/MemberCard'
                blockExisting:
                  type: boolean
                blockExistingCardStatus:
                  $ref: '#/components/schemas/MemberCardStatus'
              required:
                - personKey
                - card
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /access/attendResource:
    post:
      description: >-
        [AccessAPI attendResource v5
        documentation](https://clublead.atlassian.net/wiki/x/hICGFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                roomResourceKey:
                  $ref: '#/components/schemas/CompositeKey'
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /access/checkAccess:
    post:
      description: >-
        [AccessAPI checkAccess v5
        documentation](https://clublead.atlassian.net/wiki/x/kgCHFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                roomResourceKey:
                  $ref: '#/components/schemas/CompositeKey'
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: boolean
                nullable: false
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /access/checkInPerson:
    post:
      description: >-
        [AccessAPI checkInPerson v5
        documentation](https://clublead.atlassian.net/wiki/x/f4CHFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                center:
                  type: integer
                  nullable: false
                  format: int32
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: boolean
                nullable: false
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /access/deactivateMemberCard:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                card:
                  $ref: '#/components/schemas/MemberCard'
                blockingCardStatus:
                  $ref: '#/components/schemas/MemberCardStatus'
              required:
                - personKey
                - card
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeactivateMemberCardResponse'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /access/getAttendableResources:
    post:
      description: >-
        [AccessAPI getAttendableResources v5
        documentation](https://clublead.atlassian.net/wiki/x/_YCIFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                centerId:
                  type: integer
                  nullable: false
                  format: int32
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                resourceExternalId:
                  type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AttendableResource'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /access/getPersonAttends:
    post:
      description: >-
        [AccessAPI getPersonAttends v5
        documentation](https://clublead.atlassian.net/wiki/x/jICGFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                fromDate:
                  type: string
                toDate:
                  type: string
                attends:
                  type: boolean
                  nullable: false
                checkIns:
                  type: boolean
                  nullable: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CenterPresence'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /access/getTemporaryQRCode:
    post:
      description: >-
        [AccessAPI getTemporaryQRCode v5
        documentation](https://clublead.atlassian.net/wiki/x/h4CHFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
              required:
                - personKey
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /access/getUsageSource:
    get:
      description: >-
        [AccessAPI getUsageSource v5
        documentation](https://clublead.atlassian.net/wiki/x/A4A7H)
      parameters:
        - name: centerId
          in: query
          schema:
            type: integer
            nullable: false
            format: int32
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUsagePointSourceResponse'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
    post:
      description: >-
        [AccessAPI getUsageSource v5
        documentation](https://clublead.atlassian.net/wiki/x/A4A7H)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                centerId:
                  type: integer
                  nullable: false
                  format: int32
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUsagePointSourceResponse'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /access/registerAttendByAccessCard:
    post:
      description: >-
        [AccessAPI registerAttendByAccessCard v5
        documentation](https://clublead.atlassian.net/wiki/x/owKKFg)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                usagePointSourceKey:
                  $ref: '#/components/schemas/ApiUsagePointSourceKey'
                centerId:
                  type: integer
                  nullable: false
                  format: int32
                resourceExternalId:
                  type: string
                cardId:
                  type: string
                cardType:
                  $ref: '#/components/schemas/AccessCardType'
                date:
                  type: string
                startTime:
                  type: string
              required:
                - centerId
                - resourceExternalId
                - cardId
                - cardType
                - date
                - startTime
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /access/registerAttendByAccessCardNoPrivilege:
    post:
      description: >-
        [AccessAPI registerAttendByAccessCardNoPrivilege v5
        documentation](https://clublead.atlassian.net/wiki/x/xwKKFg)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                centerId:
                  type: integer
                  nullable: false
                  format: int32
                resourceExternalId:
                  type: string
                cardId:
                  type: string
                cardType:
                  $ref: '#/components/schemas/AccessCardType'
                date:
                  type: string
                startTime:
                  type: string
              required:
                - centerId
                - resourceExternalId
                - cardId
                - cardType
                - date
                - startTime
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /access/registerAttendNoPrivilege:
    post:
      description: >-
        [AccessAPI registerAttendNoPrivilege v5
        documentation](https://clublead.atlassian.net/wiki/x/ZIOHFg)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                roomResourceKey:
                  $ref: '#/components/schemas/CompositeKey'
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                date:
                  type: string
                startTime:
                  type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /access/registerMultipleAttendByAccessCardNoPrivilege:
    post:
      description: >-
        [AccessAPI registerMultipleAttendByAccessCardNoPrivilege v5
        documentation](https://clublead.atlassian.net/wiki/x/joCHFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  centerId:
                    type: integer
                    nullable: false
                    format: int32
                  resourceExternalId:
                    type: string
                  cardId:
                    type: string
                  cardType:
                    $ref: '#/components/schemas/AccessCardType'
                  date:
                    type: string
                  startTime:
                    type: string
                required:
                  - centerId
                  - resourceExternalId
                  - cardId
                  - cardType
                  - date
                  - startTime
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /account-receivables/changeIndividualDeductionday:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personId:
                  $ref: '#/components/schemas/ApiPersonKey'
                paymentAgreementKey:
                  $ref: '#/components/schemas/CompositeSubKey'
                deductionDay:
                  type: integer
                  format: int32
              required:
                - personId
                - paymentAgreementKey
                - deductionDay
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  personId:
                    $ref: '#/components/schemas/ApiPersonKey'
                  paymentAgreementKey:
                    $ref: '#/components/schemas/CompositeSubKey'
                  deductionDay:
                    type: integer
                    format: int32
                  oldDeductionDay:
                    type: integer
                    format: int32
                  errors:
                    $ref: '#/components/schemas/List'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /account-receivables/createAccountReceivableTransaction:
    post:
      description: >-
        [AccountReceivableAPI createAccountReceivableTransaction v5
        documentation](https://clublead.atlassian.net/wiki/x/-4CIFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                accountReceivableType:
                  $ref: '#/components/schemas/AccountReceivableType'
                amount:
                  type: string
                comment:
                  type: string
                accountGlobalId:
                  type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /account-receivables/createCreditCardPaymentAgreement:
    post:
      description: >-
        [AccountReceivableAPI createCreditCardPaymentAgreement v5
        documentation](https://clublead.atlassian.net/wiki/x/lACGFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                reference:
                  type: string
                maskedCreditCardNumber:
                  type: string
                expirationDate:
                  type: string
                replacePaymentAgreementKey:
                  $ref: '#/components/schemas/CompositeSubKey'
                individualDeductionDay:
                  type: integer
                  format: int32
                paymentCycleId:
                  type: integer
                  format: int32
                clearingHouseExternalId:
                  type: string
                initialReference:
                  type: string
                enableInShop:
                  type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /account-receivables/createPaymentAgreement:
    post:
      description: >-
        [AccountReceivableAPI createPaymentAgreement v5
        documentation](https://clublead.atlassian.net/wiki/x/ngCGFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                bankInfo:
                  $ref: '#/components/schemas/BankInfo'
                paymentType:
                  $ref: '#/components/schemas/PersonPaymentType'
                payerGivesAuthorizationExternally:
                  type: boolean
                generateDocument:
                  type: boolean
                individualDeductionDay:
                  type: integer
                  format: int32
                notifyPayment:
                  type: boolean
                replacePaymentAgreementKey:
                  $ref: '#/components/schemas/CompositeSubKey'
                paymentCycleId:
                  type: integer
                  format: int32
              required:
                - personKey
                - paymentType
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /account-receivables/createPaymentRequest:
    post:
      description: >-
        [AccountReceivableAPI createPaymentRequest v5
        documentation](https://clublead.atlassian.net/wiki/x/n4CHFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                customerId:
                  $ref: '#/components/schemas/ApiPersonKey'
                dueDate:
                  type: string
                deductionDate:
                  type: string
                paymentAgreementKeyForCollection:
                  $ref: '#/components/schemas/CompositeSubKey'
              required:
                - customerId
                - dueDate
                - deductionDate
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompositeSubKey'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /account-receivables/createThirdPartyPaymentAgreement:
    post:
      description: >-
        [AccountReceivableAPI createThirdPartyPaymentAgreement v5
        documentation](https://clublead.atlassian.net/wiki/x/tICbIw)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                initialReference:
                  type: string
                reference:
                  type: string
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                replacePaymentAgreementKey:
                  $ref: '#/components/schemas/CompositeSubKey'
                individualDeductionDay:
                  type: integer
                  format: int32
                paymentCycleId:
                  type: integer
                  format: int32
                clearingHouseExternalId:
                  type: string
              required:
                - initialReference
                - reference
                - personKey
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateThirdPartyPaymentAgreementResponse'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /account-receivables/getAccountOverview:
    post:
      description: >-
        [AccountReceivableAPI getAccountOverview v5
        documentation](https://clublead.atlassian.net/wiki/x/wQCKFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personId:
                  $ref: '#/components/schemas/ApiPersonKey'
              required:
                - personId
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountOverview'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /account-receivables/getAvailableClearingHouses:
    get:
      description: >-
        [AccountReceivableAPI getAvailableClearingHouses v5
        documentation](https://clublead.atlassian.net/wiki/x/yQCKFQ)
      parameters:
        - name: centerId
          in: query
          schema:
            type: integer
            nullable: false
            format: int32
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClearingHouse'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
    post:
      description: >-
        [AccountReceivableAPI getAvailableClearingHouses v5
        documentation](https://clublead.atlassian.net/wiki/x/yQCKFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                centerId:
                  type: integer
                  nullable: false
                  format: int32
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClearingHouse'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /account-receivables/getIndividualDeductionDaysValidity:
    post:
      description: >-
        [AccountReceivableAPI getIndividualDeductionDaysValidity v5
        documentation](https://clublead.atlassian.net/wiki/x/iYCFFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personId:
                  $ref: '#/components/schemas/ApiPersonKey'
                paymentAgreementKey:
                  $ref: '#/components/schemas/CompositeSubKey'
              required:
                - personId
                - paymentAgreementKey
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IndividualDeductionDaysValidity'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /account-receivables/getPaymentAgreementInfo:
    post:
      description: >-
        [AccountReceivableAPI getPaymentAgreementInfo v5
        documentation](https://clublead.atlassian.net/wiki/x/kICFFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                onlyActive:
                  type: boolean
                  nullable: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentAgreementInfo'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /account-receivables/getPaymentRequest:
    get:
      description: >-
        [AccountReceivableAPI getPaymentRequest v5
        documentation](https://clublead.atlassian.net/wiki/x/O4K2Fg)
      parameters:
        - name: subId
          in: query
          schema:
            type: integer
            nullable: false
            format: int32
        - name: center
          in: query
          schema:
            type: integer
            nullable: false
            format: int32
        - name: id
          in: query
          schema:
            type: integer
            nullable: false
            format: int32
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRequest'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
    post:
      description: >-
        [AccountReceivableAPI getPaymentRequest v5
        documentation](https://clublead.atlassian.net/wiki/x/O4K2Fg)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompositeSubKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRequest'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /account-receivables/getPaymentRequestDocument:
    get:
      description: >-
        [AccountReceivableAPI getPaymentRequestDocument v5
        documentation](https://clublead.atlassian.net/wiki/x/m4CFFQ)
      parameters:
        - name: subId
          in: query
          schema:
            type: integer
            nullable: false
            format: int32
        - name: center
          in: query
          schema:
            type: integer
            nullable: false
            format: int32
        - name: id
          in: query
          schema:
            type: integer
            nullable: false
            format: int32
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MIMEDocument'
            '*/*':
              schema:
                type: string
                format: binary
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
    post:
      description: >-
        [AccountReceivableAPI getPaymentRequestDocument v5
        documentation](https://clublead.atlassian.net/wiki/x/m4CFFQ)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompositeSubKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MIMEDocument'
            '*/*':
              schema:
                type: string
                format: binary
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /account-receivables/getPaymentRequests:
    post:
      description: >-
        [AccountReceivableAPI getPaymentRequests v5
        documentation](https://clublead.atlassian.net/wiki/x/9QCIFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personKey:
                  $ref: '#/components/schemas/CompositeKey'
                dateFrom:
                  type: string
                dateTo:
                  type: string
                includeCredits:
                  type: boolean
                includeTypes:
                  type: array
                  items:
                    $ref: '#/components/schemas/PaymentRequestType'
                includeNew:
                  type: boolean
              required:
                - personKey
                - dateFrom
                - dateTo
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PaymentRequest'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /account-receivables/getTransactions:
    post:
      description: >-
        [AccountReceivableAPI getTransactions v5
        documentation](https://clublead.atlassian.net/wiki/x/wACHFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                accountReceivableTypeId:
                  type: integer
                  format: int32
                dateFrom:
                  type: string
                dateTo:
                  type: string
              required:
                - personKey
                - accountReceivableTypeId
                - dateFrom
                - dateTo
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ARTransactionTableRecord'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /account-receivables/registerDebtCollectionPayment:
    post:
      description: >-
        [AccountReceivableAPI registerDebtCollectionPayment v5
        documentation](https://clublead.atlassian.net/wiki/x/TQB-Fg)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                amount:
                  type: number
                date:
                  type: string
                textReference:
                  type: string
              required:
                - personKey
                - amount
                - date
                - textReference
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /account-receivables/registerPayment:
    post:
      description: >-
        [AccountReceivableAPI registerPayment v5
        documentation](https://clublead.atlassian.net/wiki/x/lICGFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                amount:
                  type: number
                consolidatedInvoicesKey:
                  type: array
                  items:
                    $ref: '#/components/schemas/CompositeSubKey'
                encryptedCardDetails:
                  type: string
                creditCardTransactionReference:
                  type: string
                customPaymentMethodId:
                  type: integer
                  format: int32
                paymentText:
                  type: string
                paymentSessionKey:
                  type: integer
                  format: int32
              required:
                - personKey
                - amount
      responses:
        '200':
          content:
            application/json:
              schema:
                type: boolean
                nullable: false
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /account-receivables/registerPaymentOnPaymentRequestUsingInvoiceKey:
    post:
      description: >-
        [AccountReceivableAPI registerPaymentOnPaymentRequestUsingInvoiceKey v5
        documentation](https://clublead.atlassian.net/wiki/x/GIGIFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                invoiceKey:
                  $ref: '#/components/schemas/CompositeSubKey'
                personKey:
                  $ref: '#/components/schemas/CompositeKey'
                amount:
                  type: string
                comment:
                  type: string
                globalAccountName:
                  type: string
              required:
                - invoiceKey
                - personKey
                - amount
                - comment
                - globalAccountName
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /account-receivables/registerPaymentOnPaymentRequestUsingInvoiceRef:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                invoiceRef:
                  type: string
                personKey:
                  $ref: '#/components/schemas/CompositeKey'
                amount:
                  type: string
                comment:
                  type: string
                globalAccountName:
                  type: string
              required:
                - invoiceRef
                - personKey
                - amount
                - comment
                - globalAccountName
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /account-receivables/reversePaymentRequest:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompositeSubKey'
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /account-receivables/setOtherPayer:
    post:
      description: >-
        [AccountReceivableAPI setOtherPayer v5
        documentation](https://clublead.atlassian.net/wiki/x/AQGIFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                payerKey:
                  $ref: '#/components/schemas/ApiPersonKey'
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /account-receivables/transferAccountBalance:
    post:
      description: >-
        [AccountReceivableAPI transferAccountBalance v5
        documentation](https://clublead.atlassian.net/wiki/x/nIMxMQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                fromPersonKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                fromAccountReceivableType:
                  $ref: '#/components/schemas/AccountReceivableType'
                toPersonKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                toAccountReceivableType:
                  $ref: '#/components/schemas/AccountReceivableType'
                transactionTextPrefix:
                  type: string
              required:
                - fromPersonKey
                - fromAccountReceivableType
                - toPersonKey
                - toAccountReceivableType
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferAccountBalanceResponse'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /account-receivables/updateAgreementReference:
    post:
      description: >-
        [AccountReceivableAPI updateAgreementReference v5
        documentation](https://clublead.atlassian.net/wiki/x/EYGgIw)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                paymentAgreementKey:
                  $ref: '#/components/schemas/CompositeSubKey'
                initialReference:
                  type: string
                reference:
                  type: string
              required:
                - paymentAgreementKey
                - initialReference
                - reference
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAgreementReferenceResponse'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /account-receivables/validateBankInfo:
    post:
      description: >-
        [AccountReceivableAPI validateBankInfo v5
        documentation](https://clublead.atlassian.net/wiki/x/noGJFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                countryId:
                  type: string
                bankInfo:
                  $ref: '#/components/schemas/BankInfo'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankInfo'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /account-receivables/validateBankInfoExternal:
    post:
      description: >-
        [AccountReceivableAPI validateBankInfoExternal v5
        documentation](https://clublead.atlassian.net/wiki/x/0gCJFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                centerId:
                  type: integer
                  format: int32
                bankInfo:
                  $ref: '#/components/schemas/BankInfo'
              required:
                - centerId
                - bankInfo
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankInfo'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /apply-step/executeApplyStep:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                applyStepId:
                  type: integer
                  nullable: false
                  format: int32
                entities:
                  type: array
                  items:
                    type: string
                parameters:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                      value:
                        type: string
                    required:
                      - name
                      - value
              required:
                - applyStepId
                - entities
      responses:
        '200':
          content:
            application/json:
              schema:
                type: integer
                nullable: false
                format: int32
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /apply-step/getAvailableApplySteps:
    get:
      parameters:
        - name: centerId
          in: query
          schema:
            type: integer
            format: int32
        - name: targetType
          in: query
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AvailableApplyStep'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                centerId:
                  type: integer
                  format: int32
                targetType:
                  type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AvailableApplyStep'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /bookings/cancelBooking:
    post:
      description: >-
        [BookingAPI cancelBooking v5
        documentation](https://clublead.atlassian.net/wiki/x/2QCJFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                bookingKey:
                  $ref: '#/components/schemas/CompositeKey'
                notifyParticipants:
                  type: boolean
                notifyStaff:
                  type: boolean
                message:
                  type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /bookings/cancelPersonParticipation:
    post:
      description: >-
        [BookingAPI cancelPersonParticipation v5
        documentation](https://clublead.atlassian.net/wiki/x/oICGFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                participationId:
                  $ref: '#/components/schemas/CompositeKey'
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                userInterfaceType:
                  $ref: '#/components/schemas/UserInterfaceType'
                sendCancelMessage:
                  type: boolean
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /bookings/changeClassActivity:
    post:
      description: >-
        [BookingAPI changeClassActivity v5
        documentation](https://clublead.atlassian.net/wiki/x/JgW7H)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                bookingKey:
                  $ref: '#/components/schemas/CompositeKey'
                activityId:
                  type: integer
                  format: int32
                name:
                  type: string
                date:
                  type: string
                time:
                  type: string
                duration:
                  type: integer
                  format: int32
                description:
                  type: string
                staffPersonKeys:
                  type: array
                  items:
                    $ref: '#/components/schemas/ApiPersonKey'
                resourceKeys:
                  type: array
                  items:
                    $ref: '#/components/schemas/CompositeKey'
                maxCapacity:
                  type: integer
                  format: int32
                sendChangeMessage:
                  type: boolean
                  nullable: false
                sendCancelMessage:
                  type: boolean
                  nullable: false
                externalId:
                  type: string
              required:
                - bookingKey
                - activityId
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  booking:
                    $ref: '#/components/schemas/Booking'
                  movedParticipations:
                    $ref: '#/components/schemas/List'
                  cancelledParticipations:
                    $ref: '#/components/schemas/List'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /bookings/changeClassActivitySimple:
    post:
      description: >-
        [BookingAPI changeClassActivitySimple v5
        documentation](https://clublead.atlassian.net/wiki/x/SYIXKQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                bookingKey:
                  $ref: '#/components/schemas/CompositeKey'
                activityId:
                  type: integer
                  format: int32
              required:
                - bookingKey
                - activityId
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  booking:
                    $ref: '#/components/schemas/Booking'
                required:
                  - booking
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /bookings/checkPrivilegeForActivity:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                centerId:
                  type: integer
                  nullable: false
                  format: int32
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                activityId:
                  type: integer
                  nullable: false
                  format: int32
                includeTentative:
                  type: boolean
                date:
                  type: string
                timeInterval:
                  $ref: '#/components/schemas/Interval'
              required:
                - centerId
                - personKey
                - activityId
                - date
                - timeInterval
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  validPrivilege:
                    type: boolean
                required:
                  - validPrivilege
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /bookings/checkPrivilegeForBooking:
    post:
      description: >-
        [BookingAPI checkPrivilegeForBooking v5
        documentation](https://clublead.atlassian.net/wiki/x/HIKRK)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personId:
                  $ref: '#/components/schemas/ApiPersonKey'
                bookingId:
                  $ref: '#/components/schemas/CompositeKey'
                includeTentative:
                  type: boolean
                productKey:
                  $ref: '#/components/schemas/ApiProductKey'
              required:
                - personId
                - bookingId
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  validPrivilege:
                    type: boolean
                required:
                  - validPrivilege
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /bookings/createClass:
    post:
      description: >-
        [BookingAPI createClass v5
        documentation](https://clublead.atlassian.net/wiki/x/1gCKFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                centerId:
                  type: integer
                  format: int32
                date:
                  type: string
                time:
                  type: string
                duration:
                  type: integer
                  nullable: false
                  format: int32
                activityKey:
                  type: integer
                  nullable: false
                  format: int32
                resourceKeys:
                  type: array
                  items:
                    $ref: '#/components/schemas/CompositeKey'
                staffPersonKeys:
                  type: array
                  items:
                    $ref: '#/components/schemas/ApiPersonKey'
                maxCapacity:
                  type: integer
                  format: int32
                name:
                  type: string
                color:
                  $ref: '#/components/schemas/ColorGroup'
                description:
                  type: string
                externalId:
                  type: string
                minAge:
                  type: integer
                  format: int32
                maxAge:
                  type: integer
                  format: int32
              required:
                - centerId
                - date
                - time
                - duration
                - activityKey
                - resourceKeys
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booking'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /bookings/createOrUpdateParticipation:
    post:
      description: >-
        [BookingAPI createOrUpdateParticipation v5
        documentation](https://clublead.atlassian.net/wiki/x/5ACKFQ)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateParticipationParams'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  participations:
                    type: array
                    items:
                      $ref: '#/components/schemas/Participation'
                  invoiceKey:
                    $ref: '#/components/schemas/CompositeKey'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /bookings/createOrUpdateParticipationTentative:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateParticipationTentativeParams'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  participations:
                    type: array
                    items:
                      $ref: '#/components/schemas/Participation'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /bookings/createParticipationAndSendMessage:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                bookingId:
                  $ref: '#/components/schemas/CompositeKey'
                userInterfaceType:
                  $ref: '#/components/schemas/UserInterfaceType'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Participation'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /bookings/findClasses:
    post:
      description: >-
        [BookingAPI findClasses v5
        documentation](https://clublead.atlassian.net/wiki/x/q4CGFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                centers:
                  type: array
                  items:
                    type: integer
                    format: int32
                weekdays:
                  type: array
                  items:
                    $ref: '#/components/schemas/WeekDay'
                timeIntervals:
                  type: array
                  items:
                    $ref: '#/components/schemas/Interval'
                dateInterval:
                  $ref: '#/components/schemas/Interval'
                instructor:
                  type: string
                colorGroups:
                  type: array
                  items:
                    $ref: '#/components/schemas/ColorGroup'
                activityIds:
                  type: array
                  items:
                    type: integer
                    format: int32
                activityGroupIds:
                  type: array
                  items:
                    type: integer
                    format: int32
                externalIds:
                  type: array
                  items:
                    type: string
                bookableViaAPI:
                  type: boolean
              required:
                - dateInterval
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Booking'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /bookings/findPersonParticipations:
    post:
      description: >-
        [BookingAPI findPersonParticipations v5
        documentation](https://clublead.atlassian.net/wiki/x/qICHFQ)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiPersonKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participation'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /bookings/getActivityGroups:
    get:
      description: >-
        [BookingAPI getActivityGroups v5
        documentation](https://clublead.atlassian.net/wiki/x/ugCGFQ)
      parameters:
        - name: centerId
          in: query
          schema:
            type: integer
            format: int32
        - name: bookableViaAPI
          in: query
          schema:
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActivityGroup'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
    post:
      description: >-
        [BookingAPI getActivityGroups v5
        documentation](https://clublead.atlassian.net/wiki/x/ugCGFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                centerId:
                  type: integer
                  format: int32
                bookableViaAPI:
                  type: boolean
              required:
                - centerId
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActivityGroup'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /bookings/getAllAvailableActivities:
    get:
      description: >-
        [BookingAPI getAllAvailableActivities v5
        documentation](https://clublead.atlassian.net/wiki/x/VIHowg)
      parameters:
        - name: centers
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AvailableActivity'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
    post:
      description: >-
        [BookingAPI getAllAvailableActivities v5
        documentation](https://clublead.atlassian.net/wiki/x/VIHowg)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                centers:
                  type: array
                  items:
                    type: integer
                    format: int32
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AvailableActivity'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /bookings/getAvailableActivities:
    get:
      description: >-
        [BookingAPI getAvailableActivities v5
        documentation](https://clublead.atlassian.net/wiki/x/p4CFFQ)
      parameters:
        - name: centers
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AvailableActivity'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
    post:
      description: >-
        [BookingAPI getAvailableActivities v5
        documentation](https://clublead.atlassian.net/wiki/x/p4CFFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                centers:
                  type: array
                  items:
                    type: integer
                    format: int32
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AvailableActivity'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /bookings/getAvailableAgeGroups:
    get:
      description: >-
        [BookingAPI getAvailableAgeGroups v5
        documentation](https://clublead.atlassian.net/wiki/x/v4DYFg)
      parameters:
        - name: scopeType
          in: query
          schema:
            type: string
            enum:
              - Global
              - Tree
              - Area
              - Center
        - name: scopeId
          in: query
          schema:
            type: integer
            nullable: false
            format: int32
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  ageGroups:
                    $ref: '#/components/schemas/Collection'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
    post:
      description: >-
        [BookingAPI getAvailableAgeGroups v5
        documentation](https://clublead.atlassian.net/wiki/x/v4DYFg)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                scopeType:
                  $ref: '#/components/schemas/ScopeType'
                scopeId:
                  type: integer
                  nullable: false
                  format: int32
              required:
                - scopeType
                - scopeId
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  ageGroups:
                    $ref: '#/components/schemas/Collection'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /bookings/getAvailableSeats:
    post:
      description: >-
        [BookingAPI getAvailableSeats v5
        documentation](https://clublead.atlassian.net/wiki/x/tICHFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personId:
                  $ref: '#/components/schemas/ApiPersonKey'
                bookingKey:
                  $ref: '#/components/schemas/CompositeKey'
                personType:
                  $ref: '#/components/schemas/PersonType'
                centerId:
                  type: integer
                  format: int32
              required:
                - bookingKey
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  seats:
                    type: array
                    items:
                      $ref: '#/components/schemas/Seat'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /bookings/getBookingDetails:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                bookingKey:
                  $ref: '#/components/schemas/CompositeKey'
                includeParticipations:
                  type: boolean
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
              required:
                - bookingKey
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingDetails'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /bookings/getBookingRestrictions:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                periods:
                  $ref: '#/components/schemas/Collection'
              required:
                - personKey
                - periods
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  bookingRestrictions:
                    $ref: '#/components/schemas/Collection'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /bookings/getClass:
    get:
      description: >-
        [BookingAPI getClass v5
        documentation](https://clublead.atlassian.net/wiki/x/wQCGFQ)
      parameters:
        - name: center
          in: query
          schema:
            type: integer
            nullable: false
            format: int32
        - name: id
          in: query
          schema:
            type: integer
            nullable: false
            format: int32
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booking'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
    post:
      description: >-
        [BookingAPI getClass v5
        documentation](https://clublead.atlassian.net/wiki/x/wQCGFQ)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompositeKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booking'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /bookings/getClassParticipations:
    get:
      description: >-
        [BookingAPI getClassParticipations v5
        documentation](https://clublead.atlassian.net/wiki/x/vYCHFQ)
      parameters:
        - name: center
          in: query
          schema:
            type: integer
            nullable: false
            format: int32
        - name: id
          in: query
          schema:
            type: integer
            nullable: false
            format: int32
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participation'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
    post:
      description: >-
        [BookingAPI getClassParticipations v5
        documentation](https://clublead.atlassian.net/wiki/x/vYCHFQ)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompositeKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participation'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /bookings/getMemberSanctionStatus:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                fromDate:
                  type: string
              required:
                - personKey
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  sanctions:
                    $ref: '#/components/schemas/Collection'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /bookings/getParticipationQRCode:
    get:
      description: >-
        [BookingAPI getParticipationQRCode v5
        documentation](https://clublead.atlassian.net/wiki/x/4ACJFQ)
      parameters:
        - name: center
          in: query
          schema:
            type: integer
            nullable: false
            format: int32
        - name: id
          in: query
          schema:
            type: integer
            nullable: false
            format: int32
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MIMEDocument'
            '*/*':
              schema:
                type: string
                format: binary
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
    post:
      description: >-
        [BookingAPI getParticipationQRCode v5
        documentation](https://clublead.atlassian.net/wiki/x/4ACJFQ)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompositeKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MIMEDocument'
            '*/*':
              schema:
                type: string
                format: binary
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /bookings/getPersonParticipations:
    post:
      description: >-
        [BookingAPI getPersonParticipations v5
        documentation](https://clublead.atlassian.net/wiki/x/9ACKFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                fromDate:
                  type: string
                toDate:
                  type: string
                personalBookingType:
                  $ref: '#/components/schemas/PersonalBookingType'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participation'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /bookings/getProductsForBooking:
    post:
      description: >-
        [BookingAPI getProductsForBooking v5
        documentation](https://clublead.atlassian.net/wiki/x/9IVaKg)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                bookingKey:
                  $ref: '#/components/schemas/CompositeKey'
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                productType:
                  $ref: '#/components/schemas/ProductType'
                productGroupId:
                  type: integer
                  format: int32
                onlyAvailableOnWeb:
                  type: boolean
              required:
                - bookingKey
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  products:
                    $ref: '#/components/schemas/Collection'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /bookings/getResources:
    get:
      description: >-
        [BookingAPI getResources v5
        documentation](https://clublead.atlassian.net/wiki/x/r4CFFQ)
      parameters:
        - name: center
          in: query
          schema:
            type: integer
            format: int32
        - name: activityKey
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Resource'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
    post:
      description: >-
        [BookingAPI getResources v5
        documentation](https://clublead.atlassian.net/wiki/x/r4CFFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                center:
                  type: integer
                  format: int32
                activityKey:
                  type: integer
                  format: int32
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Resource'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /bookings/getWeekSchedulePDF:
    get:
      description: >-
        [BookingAPI getWeekSchedulePDF v5
        documentation](https://clublead.atlassian.net/wiki/x/-ACKFQ)
      parameters:
        - name: centerId
          in: query
          schema:
            type: integer
            format: int32
        - name: startDate
          in: query
          schema:
            type: string
        - name: activityGroupId
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MIMEDocument'
            '*/*':
              schema:
                type: string
                format: binary
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
    post:
      description: >-
        [BookingAPI getWeekSchedulePDF v5
        documentation](https://clublead.atlassian.net/wiki/x/-ACKFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                centerId:
                  type: integer
                  format: int32
                startDate:
                  type: string
                activityGroupId:
                  type: integer
                  format: int32
              required:
                - centerId
                - startDate
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MIMEDocument'
            '*/*':
              schema:
                type: string
                format: binary
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /bookings/removeBookingRestriction:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                bookingRestrictionKeys:
                  $ref: '#/components/schemas/List'
              required:
                - bookingRestrictionKeys
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveBookingRestrictionResponse'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /bookings/showup:
    post:
      description: >-
        [BookingAPI showup v5
        documentation](https://clublead.atlassian.net/wiki/x/JIGIFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                participationId:
                  $ref: '#/components/schemas/CompositeKey'
                userInterfaceType:
                  $ref: '#/components/schemas/UserInterfaceType'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Participation'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /bookings/updateClass:
    post:
      description: >-
        [BookingAPI updateClass v5
        documentation](https://clublead.atlassian.net/wiki/x/AwGKFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                bookingKey:
                  $ref: '#/components/schemas/CompositeKey'
                date:
                  type: string
                time:
                  type: string
                duration:
                  type: integer
                  nullable: false
                  format: int32
                resourceKeys:
                  type: array
                  items:
                    $ref: '#/components/schemas/CompositeKey'
                staffPersonKeys:
                  type: array
                  items:
                    $ref: '#/components/schemas/ApiPersonKey'
                maxCapacity:
                  type: integer
                  format: int32
                name:
                  type: string
                description:
                  type: string
                externalId:
                  type: string
                color:
                  $ref: '#/components/schemas/ColorGroup'
              required:
                - bookingKey
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booking'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /camps/bookCampTentatively:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                bookingProgramId:
                  type: integer
                  format: int32
                ownerKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                participants:
                  type: array
                  items:
                    $ref: '#/components/schemas/CampBookingParticipant'
              required:
                - bookingProgramId
                - ownerKey
                - participants
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /camps/getCampParticipationsInShoppingBasket:
    get:
      parameters:
        - name: shoppingBasketKey
          in: query
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  campParticipations:
                    $ref: '#/components/schemas/Collection'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                shoppingBasketKey:
                  type: string
              required:
                - shoppingBasketKey
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  campParticipations:
                    $ref: '#/components/schemas/Collection'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /camps/getCampTypes:
    get:
      parameters:
        - name: scopeType
          in: query
          schema:
            type: string
            enum:
              - Global
              - Tree
              - Area
              - Center
        - name: scopeId
          in: query
          schema:
            type: integer
            nullable: false
            format: int32
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  campTypes:
                    $ref: '#/components/schemas/Collection'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                scopeType:
                  $ref: '#/components/schemas/ScopeType'
                scopeId:
                  type: integer
                  nullable: false
                  format: int32
              required:
                - scopeType
                - scopeId
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  campTypes:
                    $ref: '#/components/schemas/Collection'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /camps/getCampsDetails:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                bookingProgramIds:
                  type: array
                  items:
                    type: integer
                    format: int32
                participantKey:
                  $ref: '#/components/schemas/ApiPersonKey'
              required:
                - bookingProgramIds
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  camps:
                    $ref: '#/components/schemas/Collection'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /camps/getOrderSummary:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                ownerKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                participations:
                  type: array
                  items:
                    $ref: '#/components/schemas/CampParticipation'
                includePaymentOptions:
                  type: boolean
              required:
                - ownerKey
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  ownerKey:
                    $ref: '#/components/schemas/ApiPersonKey'
                  orders:
                    $ref: '#/components/schemas/Collection'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /camps/getSemesters:
    get:
      parameters:
        - name: scopeType
          in: query
          schema:
            type: string
            enum:
              - Global
              - Tree
              - Area
              - Center
        - name: scopeId
          in: query
          schema:
            type: integer
            nullable: false
            format: int32
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  semesters:
                    $ref: '#/components/schemas/Collection'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                scopeType:
                  $ref: '#/components/schemas/ScopeType'
                scopeId:
                  type: integer
                  nullable: false
                  format: int32
              required:
                - scopeType
                - scopeId
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  semesters:
                    $ref: '#/components/schemas/Collection'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /camps/removeTentativeParticipations:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                bookingProgramId:
                  type: integer
                  format: int32
                userInterfaceType:
                  $ref: '#/components/schemas/UserInterfaceType'
              required:
                - personKey
                - bookingProgramId
                - userInterfaceType
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /camps/searchCamps:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                centerId:
                  type: integer
                  nullable: false
                  format: int32
                startDateFrom:
                  type: string
                startDateTo:
                  type: string
                campTypeId:
                  type: integer
                  format: int32
                ageGroupId:
                  type: integer
                  format: int32
                semesterId:
                  type: integer
                  format: int32
                participationState:
                  $ref: '#/components/schemas/BookingProgramParticipationState'
              required:
                - centerId
                - startDateFrom
                - startDateTo
                - participationState
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  camps:
                    $ref: '#/components/schemas/Collection'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /centers/getCenterCapacityInfo:
    get:
      description: >-
        [CenterAPI getCenterCapacityInfo v5
        documentation](https://clublead.atlassian.net/wiki/x/WQEPNg)
      parameters:
        - name: centerId
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CenterCapacityInfo'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
    post:
      description: >-
        [CenterAPI getCenterCapacityInfo v5
        documentation](https://clublead.atlassian.net/wiki/x/WQEPNg)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                centerId:
                  type: integer
                  format: int32
              required:
                - centerId
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CenterCapacityInfo'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /centers/getCenters:
    get:
      description: >-
        [CenterAPI getCenters v5
        documentation](https://clublead.atlassian.net/wiki/x/EQGIFQ)
      parameters:
        - name: country
          in: query
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Center'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
    post:
      description: >-
        [CenterAPI getCenters v5
        documentation](https://clublead.atlassian.net/wiki/x/EQGIFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                country:
                  type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Center'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /centers/getCentersInArea:
    get:
      description: >-
        [CenterAPI getCentersInArea v5
        documentation](https://clublead.atlassian.net/wiki/x/ygCGFQ)
      parameters:
        - name: areaId
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Center'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
    post:
      description: >-
        [CenterAPI getCentersInArea v5
        documentation](https://clublead.atlassian.net/wiki/x/ygCGFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                areaId:
                  type: integer
                  format: int32
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Center'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /centers/getDefaultWebAppsConfigurations:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PropertyConfiguration'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PropertyConfiguration'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /centers/getDetailForCenter:
    get:
      description: >-
        [CenterAPI getDetailForCenter v5
        documentation](https://clublead.atlassian.net/wiki/x/DgGKFQ)
      parameters:
        - name: centerId
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CenterDetail'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
    post:
      description: >-
        [CenterAPI getDetailForCenter v5
        documentation](https://clublead.atlassian.net/wiki/x/DgGKFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                centerId:
                  type: integer
                  format: int32
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CenterDetail'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /centers/getDetailForCenters:
    get:
      description: >-
        [CenterAPI getDetailForCenters v5
        documentation](https://clublead.atlassian.net/wiki/x/6QCJFQ)
      parameters:
        - name: country
          in: query
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CenterDetail'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
    post:
      description: >-
        [CenterAPI getDetailForCenters v5
        documentation](https://clublead.atlassian.net/wiki/x/6QCJFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                country:
                  type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CenterDetail'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /centers/getDetailForCentersInArea:
    get:
      description: >-
        [CenterAPI getDetailForCentersInArea v5
        documentation](https://clublead.atlassian.net/wiki/x/FwGIFQ)
      parameters:
        - name: areaId
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CenterDetail'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
    post:
      description: >-
        [CenterAPI getDetailForCentersInArea v5
        documentation](https://clublead.atlassian.net/wiki/x/FwGIFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                areaId:
                  type: integer
                  format: int32
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CenterDetail'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /centers/getWebAppsConfigurations:
    get:
      parameters:
        - name: scopeType
          in: query
          schema:
            $ref: '#/components/schemas/ScopeType'
        - name: scopeId
          in: query
          schema:
            type: integer
            nullable: false
            format: int32
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PropertyConfiguration'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                scopeType:
                  $ref: '#/components/schemas/ScopeType'
                scopeId:
                  type: integer
                  nullable: false
                  format: int32
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PropertyConfiguration'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /centers/updateCenterAttributes:
    post:
      description: >-
        [CenterAPI updateCenterAttributes v5
        documentation](https://clublead.atlassian.net/wiki/x/toGJFQ)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCenterAttributesParams'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CenterDetail'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /child-care/cancelChildCareBooking:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompositeKey'
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /child-care/createChild:
    post:
      description: >-
        [ChildCareAPI createChild v5
        documentation](https://clublead.atlassian.net/wiki/x/-QKKFg)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                parentKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                child:
                  $ref: '#/components/schemas/Child'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Child'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /child-care/createChildCareBooking:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                childKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                activityKey:
                  type: integer
                  format: int32
                parentKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                date:
                  type: string
                startTime:
                  type: string
                endTime:
                  type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChildCareBooking'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /child-care/getChildCareAvailabilities:
    get:
      parameters:
        - name: date
          in: query
          schema:
            type: string
        - name: centerKey
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChildCareAvailability'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                date:
                  type: string
                centerKey:
                  type: integer
                  format: int32
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChildCareAvailability'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /child-care/getChildCareBookings:
    get:
      parameters:
        - name: externalId
          in: query
          schema:
            type: string
        - name: center
          in: query
          schema:
            type: integer
            nullable: false
            format: int32
        - name: id
          in: query
          schema:
            type: integer
            nullable: false
            format: int32
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChildCareBooking'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiPersonKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChildCareBooking'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /child-care/getChildren:
    get:
      description: >-
        [ChildCareAPI getChildren v5
        documentation](https://clublead.atlassian.net/wiki/x/e4OHFg)
      parameters:
        - name: externalId
          in: query
          schema:
            type: string
        - name: center
          in: query
          schema:
            type: integer
            nullable: false
            format: int32
        - name: id
          in: query
          schema:
            type: integer
            nullable: false
            format: int32
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Child'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
    post:
      description: >-
        [ChildCareAPI getChildren v5
        documentation](https://clublead.atlassian.net/wiki/x/e4OHFg)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiPersonKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Child'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /clipcards/adjustClipsOnClipcard:
    post:
      description: >-
        [ClipcardAPI adjustClipsOnClipcard v5
        documentation](https://clublead.atlassian.net/wiki/x/jgGKFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                clipcardKey:
                  $ref: '#/components/schemas/CompositeSubKey'
                numberOfClips:
                  type: integer
                  nullable: false
                  format: int32
                comment:
                  type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: integer
                nullable: false
                format: int32
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /clipcards/creditClipsOnClipcard:
    post:
      description: >-
        [ClipcardAPI creditClipsOnClipcard v5
        documentation](https://clublead.atlassian.net/wiki/x/GwG2Gw)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                clipcardId:
                  $ref: '#/components/schemas/CompositeSubKey'
                reason:
                  type: string
                buyoutFeeOverride:
                  type: string
                amountRefundedExternally:
                  type: boolean
                  nullable: false
                transactionRef:
                  type: string
              required:
                - clipcardId
                - reason
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /clipcards/getAvailableClipcardsForActivity:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                centerId:
                  type: integer
                  nullable: false
                  format: int32
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                activityId:
                  type: integer
                  nullable: false
                  format: int32
                date:
                  type: string
                timeInterval:
                  $ref: '#/components/schemas/Interval'
                minimumClips:
                  type: integer
                  format: int32
              required:
                - centerId
                - personKey
                - activityId
                - date
                - timeInterval
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAvailableClipcardsForActivityResponse'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /clipcards/getAvailableClipcardsForAnonymous:
    post:
      description: >-
        [ClipcardAPI getAvailableClipcardsForAnonymous v5
        documentation](https://clublead.atlassian.net/wiki/x/WAGGFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                centerId:
                  type: integer
                  nullable: false
                  format: int32
                personType:
                  $ref: '#/components/schemas/PersonType'
                companyAgreementId:
                  $ref: '#/components/schemas/CompositeSubKey'
                onlyAvailableOnWeb:
                  type: boolean
                  nullable: false
                campaignCode:
                  type: string
              required:
                - centerId
                - personType
                - onlyAvailableOnWeb
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAvailableClipcardsForAnonymousResponse'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /clipcards/getAvailableClipcardsForBooking:
    post:
      description: >-
        [ClipcardAPI getAvailableClipcardsForBooking v5
        documentation](https://clublead.atlassian.net/wiki/x/KoGFFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                bookingKey:
                  $ref: '#/components/schemas/CompositeKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AvailableClipcard'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /clipcards/getAvailableClipcardsForBookingAndFriends:
    post:
      description: >-
        [ClipcardAPI getAvailableClipcardsForBookingAndFriends v5
        documentation](https://clublead.atlassian.net/wiki/x/RgGHFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                bookingId:
                  $ref: '#/components/schemas/CompositeKey'
                minimumClips:
                  type: integer
                  nullable: false
                  format: int32
              required:
                - personKey
                - bookingId
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AvailableClipcard'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /clipcards/getAvailableClipcardsForPerson:
    post:
      description: >-
        [ClipcardAPI getAvailableClipcardsForPerson v5
        documentation](https://clublead.atlassian.net/wiki/x/poGIFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                center:
                  type: integer
                  format: int32
                onlyAvailableOnWeb:
                  type: boolean
                  nullable: false
                campaignCode:
                  type: string
              required:
                - personKey
                - center
                - onlyAvailableOnWeb
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AvailableClipcard'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /clipcards/getClipcardDetails:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                clipcardKey:
                  $ref: '#/components/schemas/CompositeSubKey'
              required:
                - clipcardKey
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Clipcard'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /clipcards/getClipcardPriceList:
    get:
      description: >-
        [ClipcardAPI getClipcardPriceList v5
        documentation](https://clublead.atlassian.net/wiki/x/cQCWFg)
      parameters:
        - name: centerId
          in: query
          schema:
            type: integer
            format: int32
        - name: productGroupKey
          in: query
          schema:
            type: integer
            format: int32
        - name: onlyAvailableOnWeb
          in: query
          schema:
            type: boolean
        - name: onlyWithPrivileges
          in: query
          schema:
            type: boolean
        - name: targetGroupKeys
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - name: companyAgreementRef
          in: query
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AvailableClipcard'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
    post:
      description: >-
        [ClipcardAPI getClipcardPriceList v5
        documentation](https://clublead.atlassian.net/wiki/x/cQCWFg)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                centerId:
                  type: integer
                  format: int32
                productGroupKey:
                  type: integer
                  format: int32
                onlyAvailableOnWeb:
                  type: boolean
                onlyWithPrivileges:
                  type: boolean
                targetGroupKeys:
                  type: array
                  items:
                    type: integer
                    format: int32
                companyAgreementRef:
                  type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AvailableClipcard'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /clipcards/getCreditClipsOnClipcardDetails:
    post:
      description: >-
        [ClipcardAPI getCreditClipsOnClipcardDetails v5
        documentation](https://clublead.atlassian.net/wiki/x/pgC1Gw)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                clipcardId:
                  $ref: '#/components/schemas/CompositeSubKey'
              required:
                - clipcardId
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClipcardCreditDetails'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /clipcards/getInvoicePreviewForClipcardSale:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personId:
                  $ref: '#/components/schemas/ApiPersonKey'
                productId:
                  $ref: '#/components/schemas/ApiProductKey'
                paymentInfo:
                  $ref: '#/components/schemas/PaymentInfo'
                clipcardPriceOverride:
                  type: string
                campaignCode:
                  type: string
                clipSize:
                  type: integer
                  format: int32
              required:
                - personId
                - productId
                - paymentInfo
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /clipcards/getPersonClipCards:
    post:
      description: >-
        [ClipcardAPI getPersonClipCards v5
        documentation](https://clublead.atlassian.net/wiki/x/ZoGHFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                finished:
                  type: boolean
                  nullable: false
                cancelled:
                  type: boolean
                  nullable: false
                blocked:
                  type: boolean
                  nullable: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Clipcard'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /clipcards/sellClipcard:
    post:
      description: >-
        [ClipcardAPI sellClipcard v5
        documentation](https://clublead.atlassian.net/wiki/x/cYJtFg)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personId:
                  $ref: '#/components/schemas/ApiPersonKey'
                productId:
                  $ref: '#/components/schemas/ApiProductKey'
                paymentInfo:
                  $ref: '#/components/schemas/PaymentInfo'
                clipcardPriceOverride:
                  type: string
                campaignCode:
                  type: string
                clipSize:
                  type: integer
                  format: int32
              required:
                - personId
                - productId
                - paymentInfo
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  invoiceKey:
                    $ref: '#/components/schemas/CompositeKey'
                  clipcardKey:
                    $ref: '#/components/schemas/CompositeSubKey'
                  invoiceLineExternalId:
                    type: string
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /clipcards/updateClipcardEndDate:
    post:
      description: >-
        [ClipcardAPI updateClipcardEndDate v5
        documentation](https://clublead.atlassian.net/wiki/x/swCYFg)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                clipcardId:
                  $ref: '#/components/schemas/CompositeSubKey'
                validUntilDate:
                  type: string
                comment:
                  type: string
              required:
                - clipcardId
                - validUntilDate
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Clipcard'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /companies/createCompany:
    post:
      description: >-
        [CompanyAPI createCompany v5
        documentation](https://clublead.atlassian.net/wiki/x/vIGJFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                center:
                  type: integer
                  nullable: false
                  format: int32
                company:
                  $ref: '#/components/schemas/Company'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /companies/createCompanyAgreement:
    post:
      description: >-
        [CompanyAPI createCompanyAgreement v5
        documentation](https://clublead.atlassian.net/wiki/x/z4CFFQ)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyAgreement'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /companies/findCompanies:
    post:
      description: >-
        [CompanyAPI findCompanies v5
        documentation](https://clublead.atlassian.net/wiki/x/1ACGFQ)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FindCompany'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Company'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /companies/findCompanyAgreement:
    post:
      description: >-
        [CompanyAPI findCompanyAgreement v5
        documentation](https://clublead.atlassian.net/wiki/x/FQGKFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                ref:
                  type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyAgreement'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /companies/getCompanyAgreementPersons:
    get:
      description: >-
        [CompanyAPI getCompanyAgreementPersons v5
        documentation](https://clublead.atlassian.net/wiki/x/IwGIFQ)
      parameters:
        - name: ref
          in: query
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyAgreementPerson'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
    post:
      description: >-
        [CompanyAPI getCompanyAgreementPersons v5
        documentation](https://clublead.atlassian.net/wiki/x/IwGIFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                ref:
                  type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyAgreementPerson'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /companies/getCompanyAgreements:
    get:
      description: >-
        [CompanyAPI getCompanyAgreements v5
        documentation](https://clublead.atlassian.net/wiki/x/9ACJFQ)
      parameters:
        - name: center
          in: query
          schema:
            type: integer
            nullable: false
            format: int32
        - name: id
          in: query
          schema:
            type: integer
            nullable: false
            format: int32
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyAgreement'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
    post:
      description: >-
        [CompanyAPI getCompanyAgreements v5
        documentation](https://clublead.atlassian.net/wiki/x/9ACJFQ)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompositeKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyAgreement'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /companies/getCompanyClipCards:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                companyKey:
                  $ref: '#/components/schemas/CompositeKey'
                finished:
                  type: boolean
                  nullable: false
                cancelled:
                  type: boolean
                  nullable: false
                blocked:
                  type: boolean
                  nullable: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Clipcard'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /companies/getCompanyDetails:
    get:
      description: >-
        [CompanyAPI getCompanyDetails v5
        documentation](https://clublead.atlassian.net/wiki/x/wYCGFQ)
      parameters:
        - name: externalId
          in: query
          schema:
            type: string
        - name: center
          in: query
          schema:
            type: integer
            nullable: false
            format: int32
        - name: id
          in: query
          schema:
            type: integer
            nullable: false
            format: int32
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
    post:
      description: >-
        [CompanyAPI getCompanyDetails v5
        documentation](https://clublead.atlassian.net/wiki/x/wYCGFQ)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiPersonKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /companies/getExtendedAttributeMIME:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                companyKey:
                  $ref: '#/components/schemas/CompositeKey'
                attributeName:
                  type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MIMEDocument'
            '*/*':
              schema:
                type: string
                format: binary
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /companies/getSubscriptionPrices:
    post:
      description: >-
        [CompanyAPI getSubscriptionPrices v5
        documentation](https://clublead.atlassian.net/wiki/x/O4GIFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                companyAgreementKey:
                  $ref: '#/components/schemas/CompositeSubKey'
                center:
                  type: integer
                  nullable: false
                  format: int32
                onlyWithPrivileges:
                  type: boolean
                  nullable: false
                onlyShowOnWeb:
                  type: boolean
                  nullable: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubscriptionPrivilegePrice'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /companies/updateCompanyAgreement:
    post:
      description: >-
        [CompanyAPI updateCompanyAgreement v5
        documentation](https://clublead.atlassian.net/wiki/x/zoCHFQ)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyAgreement'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyAgreement'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /companies/updateCompanyDetails:
    post:
      description: >-
        [CompanyAPI updateCompanyDetails v5
        documentation](https://clublead.atlassian.net/wiki/x/4ACGFQ)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Company'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /companies/updateExtendedAttributeMIME:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                companyKey:
                  $ref: '#/components/schemas/CompositeKey'
                attributeName:
                  type: string
                value:
                  $ref: '#/components/schemas/MIMEDocument'
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /courses/addParticipantToStandbyList:
    post:
      description: >-
        [CourseAPI addParticipantToStandbyList v5
        documentation](https://clublead.atlassian.net/wiki/x/KABBxg)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                ownerKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                bookingProgramId:
                  type: integer
                  format: int32
              required:
                - personKey
                - bookingProgramId
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /courses/bookCourse:
    post:
      description: >-
        [CourseAPI bookCourse v5
        documentation](https://clublead.atlassian.net/wiki/x/F4Q5H)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                ownerKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                startBookingKey:
                  $ref: '#/components/schemas/CompositeKey'
              required:
                - personKey
                - startBookingKey
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /courses/cancelSignup:
    post:
      description: >-
        [CourseAPI cancelSignup v5
        documentation](https://clublead.atlassian.net/wiki/x/foDcM)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                bookingProgramId:
                  type: integer
                  format: int32
                userInterfaceType:
                  $ref: '#/components/schemas/UserInterfaceType'
              required:
                - personKey
                - bookingProgramId
                - userInterfaceType
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /courses/getAvailableCourseTypes:
    get:
      description: >-
        [CourseAPI getAvailableCourseTypes v5
        documentation](https://clublead.atlassian.net/wiki/x/lAC7Gw)
      parameters:
        - name: scopeType
          in: query
          schema:
            type: string
            enum:
              - Global
              - Tree
              - Area
              - Center
        - name: scopeId
          in: query
          schema:
            type: integer
            nullable: false
            format: int32
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  courseTypes:
                    $ref: '#/components/schemas/Collection'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
    post:
      description: >-
        [CourseAPI getAvailableCourseTypes v5
        documentation](https://clublead.atlassian.net/wiki/x/lAC7Gw)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                scopeType:
                  $ref: '#/components/schemas/ScopeType'
                scopeId:
                  type: integer
                  nullable: false
                  format: int32
              required:
                - scopeType
                - scopeId
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  courseTypes:
                    $ref: '#/components/schemas/Collection'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /courses/getCourseDetails:
    get:
      parameters:
        - name: bookingProgramId
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  courseDetail:
                    $ref: '#/components/schemas/CourseDetail'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                bookingProgramId:
                  type: integer
                  format: int32
              required:
                - bookingProgramId
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  courseDetail:
                    $ref: '#/components/schemas/CourseDetail'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /courses/getCourseSubscriptionContractSummary:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                centerId:
                  type: integer
                  format: int32
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                personType:
                  $ref: '#/components/schemas/PersonType'
                clearingHouseType:
                  $ref: '#/components/schemas/ClearingHouseType'
                paymentAgreementDeductionDay:
                  type: integer
                  format: int32
                subscriptionProductKey:
                  $ref: '#/components/schemas/ApiProductKey'
                companyAgreementKey:
                  $ref: '#/components/schemas/CompositeSubKey'
                paymentAgreementToUseKey:
                  $ref: '#/components/schemas/CompositeSubKey'
                addOnProductRequests:
                  type: array
                  items:
                    $ref: '#/components/schemas/AddOnProductRequest'
                startBookingKey:
                  $ref: '#/components/schemas/CompositeKey'
              required:
                - centerId
                - subscriptionProductKey
                - startBookingKey
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseSubscriptionContractSummary'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /courses/getProductsForCourse:
    post:
      description: >-
        [CourseAPI getProductsForCourse v5
        documentation](https://clublead.atlassian.net/wiki/x/9AQ7H)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                startBookingKey:
                  $ref: '#/components/schemas/CompositeKey'
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                includePaymentOptions:
                  type: boolean
                ownerKey:
                  $ref: '#/components/schemas/ApiPersonKey'
              required:
                - startBookingKey
                - personKey
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  requiresPrivilege:
                    type: boolean
                    nullable: false
                  existingProduct:
                    type: string
                  products:
                    $ref: '#/components/schemas/Collection'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /courses/getSemesters:
    get:
      parameters:
        - name: scopeType
          in: query
          schema:
            type: string
            enum:
              - Global
              - Tree
              - Area
              - Center
        - name: scopeId
          in: query
          schema:
            type: integer
            nullable: false
            format: int32
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  semesters:
                    $ref: '#/components/schemas/Collection'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                scopeType:
                  $ref: '#/components/schemas/ScopeType'
                scopeId:
                  type: integer
                  nullable: false
                  format: int32
              required:
                - scopeType
                - scopeId
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  semesters:
                    $ref: '#/components/schemas/Collection'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /courses/removeParticipant:
    post:
      description: >-
        [CourseAPI removeParticipant v5
        documentation](https://clublead.atlassian.net/wiki/x/0IDbM)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                bookingProgramId:
                  type: integer
                  format: int32
                fromDate:
                  type: string
                userInterfaceType:
                  $ref: '#/components/schemas/UserInterfaceType'
                sendCancelMessage:
                  type: boolean
              required:
                - personKey
                - bookingProgramId
                - fromDate
                - userInterfaceType
                - sendCancelMessage
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /courses/searchCourse:
    post:
      description: >-
        [CourseAPI searchCourse v5
        documentation](https://clublead.atlassian.net/wiki/x/lIC5Gw)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseSearchRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseSearchResponse'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /courses/sellCourseClipcard:
    post:
      description: >-
        [CourseAPI sellCourseClipcard v5
        documentation](https://clublead.atlassian.net/wiki/x/bYU5H)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                ownerKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                startBookingKey:
                  $ref: '#/components/schemas/CompositeKey'
                clipcardProductKey:
                  $ref: '#/components/schemas/ApiProductKey'
                paymentInfo:
                  $ref: '#/components/schemas/PaymentInfo'
                clipcardPriceOverride:
                  type: string
                campaignCode:
                  type: string
              required:
                - personKey
                - startBookingKey
                - clipcardProductKey
                - paymentInfo
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  invoiceKey:
                    $ref: '#/components/schemas/CompositeKey'
                  clipcardKey:
                    $ref: '#/components/schemas/CompositeSubKey'
                  invoiceLineExternalId:
                    type: string
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /courses/sellCourseEFTMembership:
    post:
      description: >-
        [CourseAPI sellCourseEFTMembership v5
        documentation](https://clublead.atlassian.net/wiki/x/loDAGw)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                startBookingKey:
                  $ref: '#/components/schemas/CompositeKey'
                subscriptionProductKey:
                  $ref: '#/components/schemas/ApiProductKey'
                paymentInfo:
                  $ref: '#/components/schemas/PaymentInfo'
                overrideCreationProductPrice:
                  type: number
                overrideAdminFeeProductPrice:
                  type: number
                periodPrice:
                  type: number
                addOnProductRequests:
                  type: array
                  items:
                    $ref: '#/components/schemas/AddOnProductRequest'
                campaignCode:
                  type: string
                checkValidAgreement:
                  type: boolean
              required:
                - personKey
                - startBookingKey
                - subscriptionProductKey
                - paymentInfo
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  invoiceKey:
                    $ref: '#/components/schemas/CompositeKey'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /crm/createTask:
    post:
      description: >-
        [CrmAPI createTask v5
        documentation](https://clublead.atlassian.net/wiki/x/6ACGFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personId:
                  $ref: '#/components/schemas/ApiPersonKey'
                assigneePersonId:
                  $ref: '#/components/schemas/ApiPersonKey'
                creatorPersonId:
                  $ref: '#/components/schemas/ApiPersonKey'
                taskTypeExternalId:
                  type: string
                title:
                  type: string
                description:
                  type: string
                followUpDate:
                  type: string
              required:
                - personId
                - creatorPersonId
                - taskTypeExternalId
                - title
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /documentation-management/getCustomJournalDocumentTypes:
    get:
      parameters:
        - name: centerId
          in: query
          schema:
            type: integer
            format: int32
        - name: definitionKey
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomJournalDocumentTypeResponse'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                centerId:
                  type: integer
                  format: int32
                definitionKey:
                  type: integer
                  format: int32
              required:
                - centerId
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomJournalDocumentTypeResponse'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /documentation-management/getDocumentationSettingDetails:
    get:
      parameters:
        - name: documentationSettingId
          in: query
          schema:
            type: integer
            format: int32
        - name: centerId
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentationSettingDetailsResponse'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                documentationSettingId:
                  type: integer
                  format: int32
                centerId:
                  type: integer
                  format: int32
              required:
                - documentationSettingId
                - centerId
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentationSettingDetailsResponse'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /employees/assignRoles:
    post:
      description: >-
        [EmployeeAPI assignRoles v5
        documentation](https://clublead.atlassian.net/wiki/x/LAGIFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                roles:
                  $ref: '#/components/schemas/Collection'
                employeeKey:
                  $ref: '#/components/schemas/ApiEmployeeKey'
              required:
                - roles
                - employeeKey
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssignedRole'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /employees/assignStaffGroups:
    post:
      description: >-
        [EmployeeAPI assignStaffGroups v5
        documentation](https://clublead.atlassian.net/wiki/x/x4OHFg)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                staffGroups:
                  $ref: '#/components/schemas/Collection'
              required:
                - personKey
                - staffGroups
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /employees/blockLogin:
    post:
      description: >-
        [EmployeeAPI blockLogin v5
        documentation](https://clublead.atlassian.net/wiki/x/NQGIFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                employeeKey:
                  $ref: '#/components/schemas/ApiEmployeeKey'
              required:
                - employeeKey
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiPersonKey'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /employees/createEnterpriseAccountInvite:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                centerId:
                  type: integer
                  format: int32
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
              required:
                - centerId
                - personKey
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnterpriseAccountInvite'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /employees/createLogin:
    post:
      description: >-
        [EmployeeAPI createLogin v5
        documentation](https://clublead.atlassian.net/wiki/x/OgGIFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                centerId:
                  type: integer
                  format: int32
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                temporaryPassword:
                  type: string
              required:
                - centerId
                - personKey
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /employees/getAssignedStaffGroups:
    post:
      description: >-
        [EmployeeAPI getAssignedStaffGroups v5
        documentation](https://clublead.atlassian.net/wiki/x/6AOHFg)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
              required:
                - personKey
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  staffGroups:
                    $ref: '#/components/schemas/Collection'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /employees/getAvailableRolesForScope:
    post:
      description: >-
        [EmployeeAPI getAvailableRolesForScope v5
        documentation](https://clublead.atlassian.net/wiki/x/xIGJFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                scopeKey:
                  $ref: '#/components/schemas/ApiScopeKey'
              required:
                - scopeKey
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailableRoles'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /employees/getAvailableStaffGroups:
    post:
      description: >-
        [EmployeeAPI getAvailableStaffGroups v5
        documentation](https://clublead.atlassian.net/wiki/x/LQOFFg)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                scopeKey:
                  $ref: '#/components/schemas/ApiScopeKey'
              required:
                - scopeKey
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  staffGroups:
                    $ref: '#/components/schemas/Collection'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /employees/getRolesForLogin:
    post:
      description: >-
        [EmployeeAPI getRolesForLogin v5
        documentation](https://clublead.atlassian.net/wiki/x/zoCGFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                employeeKey:
                  $ref: '#/components/schemas/ApiEmployeeKey'
              required:
                - employeeKey
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssignedRole'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /employees/getScopeForRolesMatching:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                employeeKey:
                  $ref: '#/components/schemas/ApiEmployeeKey'
                rolePrefix:
                  type: string
              required:
                - employeeKey
                - rolePrefix
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  centersForRole:
                    $ref: '#/components/schemas/Collection'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /employees/removeAssignedStaffGroups:
    post:
      description: >-
        [EmployeeAPI removeAssignedStaffGroups v5
        documentation](https://clublead.atlassian.net/wiki/x/6wOHFg)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                staffGroups:
                  $ref: '#/components/schemas/Collection'
              required:
                - personKey
                - staffGroups
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /employees/removeRoles:
    post:
      description: >-
        [EmployeeAPI removeRoles v5
        documentation](https://clublead.atlassian.net/wiki/x/1oCGFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                employeeKey:
                  $ref: '#/components/schemas/ApiEmployeeKey'
                roleRemoval:
                  $ref: '#/components/schemas/Collection'
              required:
                - employeeKey
                - roleRemoval
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssignedRole'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /employees/unblockLogin:
    post:
      description: >-
        [EmployeeAPI unblockLogin v5
        documentation](https://clublead.atlassian.net/wiki/x/JAGKFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                employeeKey:
                  $ref: '#/components/schemas/ApiEmployeeKey'
              required:
                - employeeKey
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiPersonKey'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /extracts/getAvailableExtracts:
    get:
      description: >-
        [ExtractAPI getAvailableExtracts v5
        documentation](https://clublead.atlassian.net/wiki/x/3YCFFQ)
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AvailableExtract'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
    post:
      description: >-
        [ExtractAPI getAvailableExtracts v5
        documentation](https://clublead.atlassian.net/wiki/x/3YCFFQ)
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AvailableExtract'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /extracts/getChangedPersons:
    get:
      description: >-
        [ExtractAPI getChangedPersons v5
        documentation](https://clublead.atlassian.net/wiki/x/54CHFQ)
      parameters:
        - name: center
          in: query
          schema:
            type: integer
            nullable: false
            format: int32
        - name: fromDate
          in: query
          schema:
            type: string
        - name: toDate
          in: query
          schema:
            type: string
        - name: changeType
          in: query
          schema:
            $ref: '#/components/schemas/PersonsChangedType'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiPersonKey'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
    post:
      description: >-
        [ExtractAPI getChangedPersons v5
        documentation](https://clublead.atlassian.net/wiki/x/54CHFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                center:
                  type: integer
                  nullable: false
                  format: int32
                fromDate:
                  type: string
                toDate:
                  type: string
                changeType:
                  $ref: '#/components/schemas/PersonsChangedType'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiPersonKey'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /extracts/runExtract:
    post:
      description: >-
        [ExtractAPI runExtract v5
        documentation](https://clublead.atlassian.net/wiki/x/RAGIFQ)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Extract'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MIMEDocument'
            '*/*':
              schema:
                type: string
                format: binary
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /family/addFamilyMembers:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                familyKey:
                  type: integer
                  format: int32
                members:
                  type: array
                  items:
                    $ref: '#/components/schemas/AddFamilyMember'
              required:
                - familyKey
                - members
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Family'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /family/createFamily:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                primaryPersonKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                familyName:
                  type: string
              required:
                - primaryPersonKey
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Family'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /family/findFamily:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
              required:
                - personKey
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Family'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /family/getFamily:
    get:
      parameters:
        - name: familyKey
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Family'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                familyKey:
                  type: integer
                  format: int32
              required:
                - familyKey
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Family'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /giftcards/getAvailableGiftCardProducts:
    get:
      description: >-
        [GiftCardAPI getAvailableGiftCardProducts v5
        documentation](https://clublead.atlassian.net/wiki/x/LAGKFQ)
      parameters:
        - name: center
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AvailableGiftCardProduct'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
    post:
      description: >-
        [GiftCardAPI getAvailableGiftCardProducts v5
        documentation](https://clublead.atlassian.net/wiki/x/LAGKFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                center:
                  type: integer
                  format: int32
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AvailableGiftCardProduct'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /giftcards/getRemainingAmountOnGiftCard:
    get:
      description: >-
        [GiftCardAPI getRemainingAmountOnGiftCard v5
        documentation](https://clublead.atlassian.net/wiki/x/9YCHFQ)
      parameters:
        - name: centerId
          in: query
          schema:
            type: integer
            format: int32
        - name: barcodeText
          in: query
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
    post:
      description: >-
        [GiftCardAPI getRemainingAmountOnGiftCard v5
        documentation](https://clublead.atlassian.net/wiki/x/9YCHFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                centerId:
                  type: integer
                  format: int32
                barcodeText:
                  type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /giftcards/sellFreeGiftCard:
    post:
      description: >-
        [GiftCardAPI sellFreeGiftCard v5
        documentation](https://clublead.atlassian.net/wiki/x/z4GJFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                productKey:
                  $ref: '#/components/schemas/CompositeKey'
                amount:
                  type: string
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                cardId:
                  type: string
                cardType:
                  $ref: '#/components/schemas/AccessCardType'
              required:
                - productKey
                - amount
                - personKey
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SoldGiftCard'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /giftcards/sellGiftCard:
    post:
      description: >-
        [GiftCardAPI sellGiftCard v5
        documentation](https://clublead.atlassian.net/wiki/x/2oGJFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                productKey:
                  $ref: '#/components/schemas/CompositeKey'
                amount:
                  type: string
                cardId:
                  type: string
                cardType:
                  $ref: '#/components/schemas/AccessCardType'
                paymentInfo:
                  $ref: '#/components/schemas/PaymentInfo'
              required:
                - personKey
                - productKey
                - amount
                - paymentInfo
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SoldGiftCard'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /giftcards/useGiftCard:
    post:
      description: >-
        [GiftCardAPI useGiftCard v5
        documentation](https://clublead.atlassian.net/wiki/x/UIGIFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                centerId:
                  type: integer
                  format: int32
                barcodeText:
                  type: string
                amount:
                  type: string
                ref:
                  type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /health/info:
    get:
      description: >-
        [HeathAPI info v5
        documentation](https://clublead.atlassian.net/wiki/x/CwAlrQ)
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthInfo'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
    post:
      description: >-
        [HeathAPI info v5
        documentation](https://clublead.atlassian.net/wiki/x/CwAlrQ)
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthInfo'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /health/ping:
    get:
      description: >-
        [HealthAPI ping v5
        documentation](https://clublead.atlassian.net/wiki/x/xIAXrQ)
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
    post:
      description: >-
        [HealthAPI ping v5
        documentation](https://clublead.atlassian.net/wiki/x/xIAXrQ)
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /persons/addPersonPreferredCenter:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                centerKey:
                  type: integer
                  nullable: false
                  format: int32
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonPreferredCentersResponse'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /persons/addSignedDocumentToJournalNote:
    post:
      description: >-
        [PersonAPI addSignedDocumentToJournalNote v5
        documentation](https://clublead.atlassian.net/wiki/x/FgABLg)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                journalNoteId:
                  type: integer
                  format: int32
                signedDocument:
                  $ref: '#/components/schemas/MIMEDocument'
                signatureDatas:
                  $ref: '#/components/schemas/List'
              required:
                - journalNoteId
                - signedDocument
                - signatureDatas
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /persons/changePasswordWithToken:
    post:
      description: >-
        [PersonAPI changePasswordWithToken v5
        documentation](https://clublead.atlassian.net/wiki/x/6YGJFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                newPassword:
                  type: string
                token:
                  type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /persons/changePersonType:
    post:
      description: >-
        [PersonAPI changePersonType v5
        documentation](https://clublead.atlassian.net/wiki/x/TAGIFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                relatedPersonKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                companyAgreementId:
                  $ref: '#/components/schemas/CompositeSubKey'
                documentExpireDate:
                  type: string
                personType:
                  $ref: '#/components/schemas/PersonType'
                employeeNumber:
                  type: string
                corporateRelationType:
                  $ref: '#/components/schemas/CorporateRelationType'
              required:
                - personKey
                - personType
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /persons/changeSuspensionStatus:
    post:
      description: >-
        [PersonAPI changeSuspensionStatus v5
        documentation](https://clublead.atlassian.net/wiki/x/54CFFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                status:
                  $ref: '#/components/schemas/PersonBlacklistedStatus'
                internalComment:
                  type: string
                messageToMember:
                  type: string
              required:
                - personKey
                - status
                - internalComment
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /persons/createCustomJournalDocument:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                customJournalDocumentTypeId:
                  type: integer
                  format: int32
                subject:
                  type: string
                note:
                  type: string
                issueDate:
                  type: string
                overriddenExpirationDate:
                  type: string
                document:
                  $ref: '#/components/schemas/MIMEDocument'
              required:
                - personKey
                - customJournalDocumentTypeId
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCustomJournalDocumentResponse'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /persons/createDoctorNote:
    post:
      description: >-
        [PersonAPI createDoctorNote v5
        documentation](https://clublead.atlassian.net/wiki/x/44B0Fg)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                journalNote:
                  $ref: '#/components/schemas/JournalNote'
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /persons/createJournalNote:
    post:
      description: >-
        [PersonAPI createJournalNote v5
        documentation](https://clublead.atlassian.net/wiki/x/v4B3Fg)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                journalNote:
                  $ref: '#/components/schemas/JournalNote'
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /persons/createLead:
    post:
      description: >-
        [PersonAPI createLead v5
        documentation](https://clublead.atlassian.net/wiki/x/FQF-hQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                centerId:
                  type: integer
                  format: int32
                nickName:
                  type: string
                firstName:
                  type: string
                middleName:
                  type: string
                lastName:
                  type: string
                socialSecurityNumber:
                  type: string
                homePhone:
                  type: string
                mobilePhone:
                  type: string
                email:
                  type: string
                birthday:
                  type: string
                gender:
                  $ref: '#/components/schemas/ApiGender'
                personType:
                  $ref: '#/components/schemas/PersonType'
                comment:
                  type: string
                employeeNumber:
                  type: string
                nationalID:
                  type: string
                residentID:
                  type: string
                passport:
                  $ref: '#/components/schemas/Passport'
                extendedAttributes:
                  type: array
                  items:
                    $ref: '#/components/schemas/ExtendedAttribute'
                relatedPersonId:
                  $ref: '#/components/schemas/CompositeKey'
                address:
                  $ref: '#/components/schemas/Address'
              required:
                - centerId
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /persons/createPerson:
    post:
      description: >-
        [PersonAPI createPerson v5
        documentation](https://clublead.atlassian.net/wiki/x/0ACHFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                centerId:
                  type: integer
                  nullable: false
                  format: int32
                fullPersonCommunication:
                  $ref: '#/components/schemas/CreatePersonDetails'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePersonDetails'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /persons/createToDo:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                centerId:
                  type: integer
                  nullable: false
                  format: int32
                assignedPersonKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                regardingPersonKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                subject:
                  type: string
                comment:
                  type: string
                deadline:
                  type: string
                toDoGroupExternalId:
                  type: string
              required:
                - centerId
                - assignedPersonKey
                - subject
                - deadline
                - toDoGroupExternalId
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToDo'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /persons/deleteExtendedAttribute:
    post:
      description: >-
        [PersonAPI deleteExtendedAttribute v5
        documentation](https://clublead.atlassian.net/wiki/x/YIGIFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                attributeName:
                  type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: boolean
                nullable: false
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /persons/findPersons:
    post:
      description: >-
        [PersonAPI findPersons v5
        documentation](https://clublead.atlassian.net/wiki/x/BgGJFQ)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FindPerson'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /persons/getAvailableLanguagesForMembers:
    get:
      parameters:
        - name: centerId
          in: query
          schema:
            type: integer
            nullable: false
            format: int32
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailableLanguagesForMembersResponse'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                centerId:
                  type: integer
                  nullable: false
                  format: int32
              required:
                - centerId
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailableLanguagesForMembersResponse'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /persons/getAvailableSalutations:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                scopeKey:
                  $ref: '#/components/schemas/ApiScopeKey'
              required:
                - scopeKey
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailableSalutationsResponse'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /persons/getCitiesForZipcode:
    get:
      description: >-
        [PersonAPI getCitiesForZipcode v5
        documentation](https://clublead.atlassian.net/wiki/x/bAB4Fg)
      parameters:
        - name: countryId
          in: query
          schema:
            type: string
        - name: zipCode
          in: query
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
    post:
      description: >-
        [PersonAPI getCitiesForZipcode v5
        documentation](https://clublead.atlassian.net/wiki/x/bAB4Fg)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                countryId:
                  type: string
                zipCode:
                  type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /persons/getCommunicationDetails:
    get:
      description: >-
        [PersonAPI getCommunicationDetails v5
        documentation](https://clublead.atlassian.net/wiki/x/eAB4Fg)
      parameters:
        - name: externalId
          in: query
          schema:
            type: string
        - name: center
          in: query
          schema:
            type: integer
            nullable: false
            format: int32
        - name: id
          in: query
          schema:
            type: integer
            nullable: false
            format: int32
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonCommunication'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
    post:
      description: >-
        [PersonAPI getCommunicationDetails v5
        documentation](https://clublead.atlassian.net/wiki/x/eAB4Fg)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiPersonKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonCommunication'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /persons/getCurrentPersonId:
    get:
      description: >-
        [PersonAPI getCurrentPersonId v5
        documentation](https://clublead.atlassian.net/wiki/x/_4CHFQ)
      parameters:
        - name: externalId
          in: query
          schema:
            type: string
        - name: center
          in: query
          schema:
            type: integer
            nullable: false
            format: int32
        - name: id
          in: query
          schema:
            type: integer
            nullable: false
            format: int32
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiPersonKey'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
    post:
      description: >-
        [PersonAPI getCurrentPersonId v5
        documentation](https://clublead.atlassian.net/wiki/x/_4CHFQ)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiPersonKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiPersonKey'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /persons/getDetails:
    get:
      description: >-
        [PersonAPI getDetails v5
        documentation](https://clublead.atlassian.net/wiki/x/DgGJFQ)
      parameters:
        - name: externalId
          in: query
          schema:
            type: string
        - name: center
          in: query
          schema:
            type: integer
            nullable: false
            format: int32
        - name: id
          in: query
          schema:
            type: integer
            nullable: false
            format: int32
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
    post:
      description: >-
        [PersonAPI getDetails v5
        documentation](https://clublead.atlassian.net/wiki/x/DgGJFQ)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiPersonKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /persons/getExtendedAttributeMIME:
    post:
      description: >-
        [PersonAPI getExtendedAttributeMIME v5
        documentation](https://clublead.atlassian.net/wiki/x/8ICGFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                attributeName:
                  type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MIMEDocument'
            '*/*':
              schema:
                type: string
                format: binary
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /persons/getExtendedAttributeText:
    post:
      description: >-
        [PersonAPI getExtendedAttributeText v5
        documentation](https://clublead.atlassian.net/wiki/x/FgGJFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                attributeName:
                  type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /persons/getJournalNoteDocument:
    get:
      description: >-
        [PersonAPI getJournalNoteDocument v5
        documentation](https://clublead.atlassian.net/wiki/x/SAGKFQ)
      parameters:
        - name: journalNoteId
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JournalNoteDocument'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
    post:
      description: >-
        [PersonAPI getJournalNoteDocument v5
        documentation](https://clublead.atlassian.net/wiki/x/SAGKFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                journalNoteId:
                  type: integer
                  format: int32
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JournalNoteDocument'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /persons/getJournalNotes:
    post:
      description: >-
        [PersonAPI getJournalNotes v5
        documentation](https://clublead.atlassian.net/wiki/x/TgGKFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personId:
                  $ref: '#/components/schemas/ApiPersonKey'
                fromDate:
                  type: string
                toDate:
                  type: string
                type:
                  $ref: '#/components/schemas/JournalNoteType'
                customTypeId:
                  type: integer
                  format: int32
                maxEntries:
                  type: integer
                  format: int32
              required:
                - personId
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JournalNote'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /persons/getPassportCountries:
    get:
      description: >-
        [PersonAPI getPassportCountries v5
        documentation](https://clublead.atlassian.net/wiki/x/_IGJFQ)
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PassportCountry'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
    post:
      description: >-
        [PersonAPI getPassportCountries v5
        documentation](https://clublead.atlassian.net/wiki/x/_IGJFQ)
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PassportCountry'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /persons/getPersonDetail:
    get:
      description: >-
        [PersonAPI getPersonDetail v5
        documentation](https://clublead.atlassian.net/wiki/x/XQGIFQ)
      parameters:
        - name: externalId
          in: query
          schema:
            type: string
        - name: center
          in: query
          schema:
            type: integer
            nullable: false
            format: int32
        - name: id
          in: query
          schema:
            type: integer
            nullable: false
            format: int32
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonDetail'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
    post:
      description: >-
        [PersonAPI getPersonDetail v5
        documentation](https://clublead.atlassian.net/wiki/x/XQGIFQ)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiPersonKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonDetail'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /persons/getPersonDetailByLogin:
    get:
      description: >-
        [PersonAPI getPersonDetailByLogin v5
        documentation](https://clublead.atlassian.net/wiki/x/AYF3Fg)
      parameters:
        - name: email
          in: query
          schema:
            type: string
        - name: password
          in: query
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonDetail'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
    post:
      description: >-
        [PersonAPI getPersonDetailByLogin v5
        documentation](https://clublead.atlassian.net/wiki/x/AYF3Fg)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonDetail'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /persons/getPersonPreferredCenters:
    get:
      parameters:
        - name: externalId
          in: query
          schema:
            type: string
        - name: center
          in: query
          schema:
            type: integer
            nullable: false
            format: int32
        - name: id
          in: query
          schema:
            type: integer
            nullable: false
            format: int32
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonPreferredCentersResponse'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiPersonKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonPreferredCentersResponse'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /persons/getPersonRelations:
    post:
      description: >-
        [PersonAPI getPersonRelations v5
        documentation](https://clublead.atlassian.net/wiki/x/aYGIFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedPerson'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /persons/getSalesList:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                fromDate:
                  type: string
                toDate:
                  type: string
              required:
                - personKey
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesList'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /persons/getScope:
    get:
      description: >-
        [PersonAPI getScope v5
        documentation](https://clublead.atlassian.net/wiki/x/AoKJFQ)
      parameters:
        - name: scopeType
          in: query
          schema:
            $ref: '#/components/schemas/ScopeType'
        - name: scopeId
          in: query
          schema:
            type: integer
            nullable: false
            format: int32
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scope'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
    post:
      description: >-
        [PersonAPI getScope v5
        documentation](https://clublead.atlassian.net/wiki/x/AoKJFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                scopeType:
                  $ref: '#/components/schemas/ScopeType'
                scopeId:
                  type: integer
                  nullable: false
                  format: int32
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scope'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /persons/getTypeAndStatus:
    get:
      description: >-
        [PersonAPI getTypeAndStatus v5
        documentation](https://clublead.atlassian.net/wiki/x/94CFFQ)
      parameters:
        - name: externalId
          in: query
          schema:
            type: string
        - name: center
          in: query
          schema:
            type: integer
            nullable: false
            format: int32
        - name: id
          in: query
          schema:
            type: integer
            nullable: false
            format: int32
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonTypeAndStatus'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
    post:
      description: >-
        [PersonAPI getTypeAndStatus v5
        documentation](https://clublead.atlassian.net/wiki/x/94CFFQ)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiPersonKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonTypeAndStatus'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /persons/getUnsignedJournalNoteDocuments:
    get:
      description: >-
        [PersonAPI getUnsignedJournalNoteDocuments v5
        documentation](https://clublead.atlassian.net/wiki/x/XIbbLQ)
      parameters:
        - name: externalId
          in: query
          schema:
            type: string
        - name: center
          in: query
          schema:
            type: integer
            nullable: false
            format: int32
        - name: id
          in: query
          schema:
            type: integer
            nullable: false
            format: int32
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JournalNoteResponse'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
    post:
      description: >-
        [PersonAPI getUnsignedJournalNoteDocuments v5
        documentation](https://clublead.atlassian.net/wiki/x/XIbbLQ)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiPersonKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JournalNoteResponse'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /persons/overridePartnerBenefitActivationAuthorizationCode:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                activationAuthorizationCode:
                  type: string
              required:
                - personKey
                - activationAuthorizationCode
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /persons/removePersonPreferredCenter:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                centerKey:
                  type: integer
                  nullable: false
                  format: int32
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonPreferredCentersResponse'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /persons/removePersonReferrer:
    post:
      description: >-
        [PersonAPI removePersonReferrer v5
        documentation](https://clublead.atlassian.net/wiki/x/UYF2Fg)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiPersonKey'
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /persons/sendPassword:
    post:
      description: >-
        [PersonAPI sendPassword v5
        documentation](https://clublead.atlassian.net/wiki/x/YwF3Fg)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiPersonKey'
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /persons/sendPasswordToken:
    post:
      description: >-
        [PersonAPI sendPasswordToken v5
        documentation](https://clublead.atlassian.net/wiki/x/CoKJFQ)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiPersonKey'
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /persons/setPersonReferrer:
    post:
      description: >-
        [PersonAPI setPersonReferrer v5
        documentation](https://clublead.atlassian.net/wiki/x/twB4Fg)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                referrerKey:
                  $ref: '#/components/schemas/ApiPersonKey'
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /persons/transferPerson:
    post:
      description: >-
        [PersonAPI transferPerson v5
        documentation](https://clublead.atlassian.net/wiki/x/AIGFFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                toCenterId:
                  type: integer
                  format: int32
                changePriceForEFTSubscriptions:
                  type: boolean
                changeEndDateForCashSubscriptions:
                  type: boolean
                transferSubscriptionsInfo:
                  type: array
                  items:
                    $ref: '#/components/schemas/TransferSubscriptionInfo'
              required:
                - personKey
                - toCenterId
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferPersonInfo'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /persons/updateCommunicationDetails:
    post:
      description: >-
        [PersonAPI updateCommunicationDetails v5
        documentation](https://clublead.atlassian.net/wiki/x/D4GHFQ)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonCommunication'
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /persons/updateDetails:
    post:
      description: >-
        [PersonAPI updateDetails v5
        documentation](https://clublead.atlassian.net/wiki/x/4wCHFQ)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /persons/updateExtendedAttributeMIME:
    post:
      description: >-
        [PersonAPI updateExtendedAttributeMIME v5
        documentation](https://clublead.atlassian.net/wiki/x/mQF2Fg)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                attributeName:
                  type: string
                value:
                  $ref: '#/components/schemas/MIMEDocument'
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /persons/updateExtendedAttributeText:
    post:
      description: >-
        [PersonAPI updateExtendedAttributeText v5
        documentation](https://clublead.atlassian.net/wiki/x/UgJwFg)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                attributeName:
                  type: string
                value:
                  type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /persons/validatePerson:
    post:
      description: >-
        [PersonAPI validatePerson v5
        documentation](https://clublead.atlassian.net/wiki/x/SYJwFg)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                centerId:
                  type: integer
                  nullable: false
                  format: int32
                person:
                  $ref: '#/components/schemas/Person'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  valid:
                    type: boolean
                    nullable: false
                  problems:
                    type: array
                    items:
                      $ref: '#/components/schemas/ValidationProblem'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /persons/validatePhoneNumber:
    post:
      description: >-
        [PersonAPI validatePhoneNumber v5
        documentation](https://clublead.atlassian.net/wiki/x/5QFtFg)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                countryId:
                  type: string
                phoneNumber:
                  type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /privileges/checkPrivilegeForAccessGroup:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                center:
                  type: integer
                  format: int32
                accessGroup:
                  type: integer
                  format: int32
                includeTentative:
                  type: boolean
                dateTime:
                  type: string
              required:
                - personKey
                - center
                - accessGroup
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  validPrivilege:
                    type: boolean
                    nullable: false
                  tentativePrivilege:
                    type: boolean
                    nullable: false
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /privileges/getCenterAccessPrivilegesForPerson:
    post:
      description: >-
        [PrivilegeAPI getCenterAccessPrivilegesForPerson v5
        documentation](https://clublead.atlassian.net/wiki/x/awGIFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                skipTimeRestriction:
                  type: boolean
                includeFrequencyRestriction:
                  type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CenterAccessPrivilege'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /privileges/getCenterAccessPrivilegesForProduct:
    post:
      description: >-
        [PrivilegeAPI getCenterAccessPrivilegesForProduct v5
        documentation](https://clublead.atlassian.net/wiki/x/F4KJFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                productKey:
                  $ref: '#/components/schemas/CompositeKey'
                accessGroupId:
                  type: integer
                  format: int32
              required:
                - productKey
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CenterAccessPrivilege'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /privileges/getPrivilegeSetGroups:
    get:
      description: >-
        [PrivilegeAPI getPrivilegeSetGroups v5
        documentation](https://clublead.atlassian.net/wiki/x/AwGGFQ)
      parameters:
        - name: centerId
          in: query
          schema:
            type: integer
            nullable: false
            format: int32
        - name: includeGroupsWithoutRole
          in: query
          schema:
            type: boolean
            nullable: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PrivilegeSetGroup'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
    post:
      description: >-
        [PrivilegeAPI getPrivilegeSetGroups v5
        documentation](https://clublead.atlassian.net/wiki/x/AwGGFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                centerId:
                  type: integer
                  nullable: false
                  format: int32
                includeGroupsWithoutRole:
                  type: boolean
                  nullable: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PrivilegeSetGroup'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /privileges/getPrivilegeSets:
    get:
      description: >-
        [PrivilegeAPI getPrivilegeSets v5
        documentation](https://clublead.atlassian.net/wiki/x/CQGGFQ)
      parameters:
        - name: centerId
          in: query
          schema:
            type: integer
            nullable: false
            format: int32
        - name: privilegeGroupId
          in: query
          schema:
            type: integer
            nullable: false
            format: int32
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PrivilegeSet'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
    post:
      description: >-
        [PrivilegeAPI getPrivilegeSets v5
        documentation](https://clublead.atlassian.net/wiki/x/CQGGFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                centerId:
                  type: integer
                  nullable: false
                  format: int32
                privilegeGroupId:
                  type: integer
                  nullable: false
                  format: int32
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PrivilegeSet'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /privileges/getProductPriceForSingleProduct:
    post:
      description: >-
        [PrivilegeAPI getProductPriceForSingleProduct v5
        documentation](https://clublead.atlassian.net/wiki/x/FoGHFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                memberCard:
                  $ref: '#/components/schemas/MemberCard'
                productKey:
                  $ref: '#/components/schemas/ProductKey'
                centerId:
                  type: integer
                  format: int32
              required:
                - centerId
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  productPrice:
                    $ref: '#/components/schemas/ProductPrice'
                  availablePrivilege:
                    $ref: '#/components/schemas/AvailablePrivilege'
                  productKey:
                    $ref: '#/components/schemas/ProductKey'
                  personKey:
                    $ref: '#/components/schemas/ApiPersonKey'
                  personName:
                    $ref: '#/components/schemas/PersonName'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /privileges/getTargetGroups:
    get:
      description: >-
        [PrivilegeAPI getTargetGroups v5
        documentation](https://clublead.atlassian.net/wiki/x/HwGJFQ)
      parameters:
        - name: centerId
          in: query
          schema:
            type: integer
            format: int32
        - name: personType
          in: query
          schema:
            type: string
            enum:
              - PRIVATE
              - STUDENT
              - STAFF
              - FRIEND
              - CORPORATE
              - ONEMANCORPORATE
              - FAMILY
              - SENIOR
              - GUEST
              - CHILD
              - EXTERNAL_STAFF
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TargetGroup'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
    post:
      description: >-
        [PrivilegeAPI getTargetGroups v5
        documentation](https://clublead.atlassian.net/wiki/x/HwGJFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                centerId:
                  type: integer
                  format: int32
                personType:
                  $ref: '#/components/schemas/PersonType'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TargetGroup'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /products/cancelSale:
    post:
      description: >-
        [ProductAPI cancelSale v5
        documentation](https://clublead.atlassian.net/wiki/x/-AGKFg)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                center:
                  type: integer
                  nullable: false
                  format: int32
                id:
                  type: integer
                  nullable: false
                  format: int32
                subId:
                  type: integer
                  format: int32
                cancelReason:
                  type: string
              required:
                - cancelReason
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  creditNoteKey:
                    $ref: '#/components/schemas/CompositeKey'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /products/cancelSaleByLineExternalId:
    post:
      description: >-
        [ProductAPI cancelSaleByLineExternalId v5
        documentation](https://clublead.atlassian.net/wiki/x/GIRwGQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                lineExternalId:
                  type: string
                cancelReason:
                  type: string
                amountRefundedExternally:
                  type: boolean
                  nullable: false
                transactionRef:
                  type: string
              required:
                - lineExternalId
                - cancelReason
                - amountRefundedExternally
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  creditNoteKey:
                    $ref: '#/components/schemas/CompositeKey'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /products/createFreeCreditNote:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                accountReceivableType:
                  $ref: '#/components/schemas/AccountReceivableType'
                productKey:
                  $ref: '#/components/schemas/ApiProductKey'
                amount:
                  type: number
                quantity:
                  type: integer
                  nullable: false
                  format: int32
                bookDate:
                  type: string
                text:
                  type: string
              required:
                - personKey
                - accountReceivableType
                - productKey
                - amount
                - quantity
                - bookDate
                - text
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  creditNoteKey:
                    $ref: '#/components/schemas/CompositeKey'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /products/findProductByBarcode:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                center:
                  type: integer
                  format: int32
                barcode:
                  type: string
                availableOnWebOnly:
                  type: boolean
                  nullable: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /products/findProductsByGroupAndType:
    post:
      description: >-
        [ProductAPI findProductsByGroupAndType v5
        documentation](https://clublead.atlassian.net/wiki/x/XAGKFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                centerId:
                  type: integer
                  nullable: false
                  format: int32
                groupName:
                  type: string
                availableOnWebOnly:
                  type: boolean
                  nullable: false
                productType:
                  $ref: '#/components/schemas/ProductType'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /products/findProductsByName:
    post:
      description: >-
        [ProductAPI findProductsByName v5
        documentation](https://clublead.atlassian.net/wiki/x/JQGJFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                center:
                  type: integer
                  format: int32
                name:
                  type: string
                availableOnWebOnly:
                  type: boolean
                  nullable: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /products/findProductsByRef:
    post:
      description: >-
        [ProductAPI findProductsByRef v5
        documentation](https://clublead.atlassian.net/wiki/x/KwGJFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                center:
                  type: integer
                  format: int32
                ref:
                  type: string
                availableOnWebOnly:
                  type: boolean
                  nullable: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /products/getAvailableInstallmentPlanConfigsForProduct:
    post:
      description: >-
        [ProductAPI getAvailableInstallmentPlanConfigsForProduct v5
        documentation](https://clublead.atlassian.net/wiki/x/QIAIGw)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                productKey:
                  $ref: '#/components/schemas/CompositeKey'
              required:
                - productKey
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InstallmentPlanConfig'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /products/getCreditNote:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                key:
                  $ref: '#/components/schemas/CompositeKey'
              required:
                - key
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditNote'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /products/getImprovedSalesReceipt:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                invoiceKey:
                  $ref: '#/components/schemas/ApiInvoiceKey'
              required:
                - invoiceKey
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MIMEDocument'
            '*/*':
              schema:
                type: string
                format: binary
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /products/getInvoice:
    get:
      description: >-
        [ProductAPI getInvoice v5
        documentation](https://clublead.atlassian.net/wiki/x/-ICGFQ)
      parameters:
        - name: center
          in: query
          schema:
            type: integer
            nullable: false
            format: int32
        - name: id
          in: query
          schema:
            type: integer
            nullable: false
            format: int32
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
    post:
      description: >-
        [ProductAPI getInvoice v5
        documentation](https://clublead.atlassian.net/wiki/x/-ICGFQ)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompositeKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /products/getInvoicePreviewForProductSale:
    post:
      description: >-
        [ProductAPI getInvoicePreviewForProductSale v5
        documentation](https://clublead.atlassian.net/wiki/x/MgGJFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                products:
                  type: array
                  items:
                    $ref: '#/components/schemas/ProductSale'
                paymentInfo:
                  $ref: '#/components/schemas/PaymentInfo'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /products/getProductGroups:
    get:
      description: >-
        [ProductAPI getProductGroups v5
        documentation](https://clublead.atlassian.net/wiki/x/BIGGFQ)
      parameters:
        - name: centerId
          in: query
          schema:
            type: integer
            format: int32
        - name: showInSubscriptionsales
          in: query
          schema:
            type: boolean
            nullable: false
        - name: showInShop
          in: query
          schema:
            type: boolean
            nullable: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductGroup'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
    post:
      description: >-
        [ProductAPI getProductGroups v5
        documentation](https://clublead.atlassian.net/wiki/x/BIGGFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                centerId:
                  type: integer
                  format: int32
                showInSubscriptionsales:
                  type: boolean
                  nullable: false
                showInShop:
                  type: boolean
                  nullable: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductGroup'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /products/getRebatedPricesForCustomer:
    post:
      description: >-
        [ProductAPI getRebatedPricesForCustomer v5
        documentation](https://clublead.atlassian.net/wiki/x/EgGGFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                productIds:
                  type: array
                  items:
                    $ref: '#/components/schemas/CompositeKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RebatedPrice'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /products/sellProducts:
    post:
      description: >-
        [ProductAPI sellProducts v5
        documentation](https://clublead.atlassian.net/wiki/x/9gCHFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                products:
                  type: array
                  items:
                    $ref: '#/components/schemas/ProductSale'
                paymentInfo:
                  $ref: '#/components/schemas/PaymentInfo'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  invoiceKey:
                    $ref: '#/components/schemas/CompositeKey'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /questionnaires/addAnswer:
    post:
      description: >-
        [QuestionnaireAPI addAnswer v5
        documentation](https://clublead.atlassian.net/wiki/x/GAGGFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                questionnaireId:
                  type: integer
                  nullable: false
                  format: int32
                personId:
                  $ref: '#/components/schemas/ApiPersonKey'
                time:
                  type: string
                answers:
                  type: array
                  items:
                    $ref: '#/components/schemas/Answer'
              required:
                - questionnaireId
                - personId
                - time
                - answers
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompositeSubKey'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /questionnaires/getAnswer:
    get:
      description: >-
        [QuestionnaireAPI getAnswer v5
        documentation](https://clublead.atlassian.net/wiki/x/RAGJFQ)
      parameters:
        - name: subId
          in: query
          schema:
            type: integer
            nullable: false
            format: int32
        - name: center
          in: query
          schema:
            type: integer
            nullable: false
            format: int32
        - name: id
          in: query
          schema:
            type: integer
            nullable: false
            format: int32
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionnaireAnswer'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
    post:
      description: >-
        [QuestionnaireAPI getAnswer v5
        documentation](https://clublead.atlassian.net/wiki/x/RAGJFQ)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompositeSubKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionnaireAnswer'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /questionnaires/getAnswersForPerson:
    post:
      description: >-
        [QuestionnaireAPI getAnswersForPerson v5
        documentation](https://clublead.atlassian.net/wiki/x/DYGGFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personId:
                  $ref: '#/components/schemas/ApiPersonKey'
                includeCompleted:
                  type: boolean
                types:
                  type: array
                  items:
                    $ref: '#/components/schemas/QuestionnaireType'
              required:
                - personId
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/QuestionnaireAnswer'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /questionnaires/getQuestionnaire:
    get:
      description: >-
        [QuestionnaireAPI getQuestionnaire v5
        documentation](https://clublead.atlassian.net/wiki/x/AwGHFQ)
      parameters:
        - name: questionnaireId
          in: query
          schema:
            type: integer
            nullable: false
            format: int32
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Questionnaire'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
    post:
      description: >-
        [QuestionnaireAPI getQuestionnaire v5
        documentation](https://clublead.atlassian.net/wiki/x/AwGHFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                questionnaireId:
                  type: integer
                  nullable: false
                  format: int32
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Questionnaire'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /questionnaires/getQuestionnaires:
    get:
      description: >-
        [QuestionnaireAPI getQuestionnaires v5
        documentation](https://clublead.atlassian.net/wiki/x/YwGKFQ)
      parameters:
        - name: centerId
          in: query
          schema:
            type: integer
            nullable: false
            format: int32
        - name: onlyActive
          in: query
          schema:
            type: boolean
        - name: types
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/QuestionnaireType'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Questionnaire'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
    post:
      description: >-
        [QuestionnaireAPI getQuestionnaires v5
        documentation](https://clublead.atlassian.net/wiki/x/YwGKFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                centerId:
                  type: integer
                  nullable: false
                  format: int32
                onlyActive:
                  type: boolean
                types:
                  type: array
                  items:
                    $ref: '#/components/schemas/QuestionnaireType'
              required:
                - centerId
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Questionnaire'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /questionnaires/getTemplate:
    get:
      description: >-
        [QuestionnaireAPI getTemplate v5
        documentation](https://clublead.atlassian.net/wiki/x/egGIFQ)
      parameters:
        - name: templateId
          in: query
          schema:
            type: integer
            nullable: false
            format: int32
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionnaireTemplate'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
    post:
      description: >-
        [QuestionnaireAPI getTemplate v5
        documentation](https://clublead.atlassian.net/wiki/x/egGIFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                templateId:
                  type: integer
                  nullable: false
                  format: int32
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionnaireTemplate'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /questionnaires/updateAnswer:
    post:
      description: >-
        [QuestionnaireAPI updateAnswer v5
        documentation](https://clublead.atlassian.net/wiki/x/SgGJFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                answerId:
                  $ref: '#/components/schemas/CompositeSubKey'
                time:
                  type: string
                answers:
                  type: array
                  items:
                    $ref: '#/components/schemas/Answer'
              required:
                - answerId
                - answers
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /resource-bookings/cancelCourtBooking:
    post:
      description: >-
        [ResourceBookingAPI cancelCourtBooking v5
        documentation](https://clublead.atlassian.net/wiki/x/cAGKFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                courtBookingKey:
                  $ref: '#/components/schemas/CompositeKey'
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /resource-bookings/createCourtBooking:
    post:
      description: >-
        [ResourceBookingAPI createCourtBooking v5
        documentation](https://clublead.atlassian.net/wiki/x/UwGJFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                courtResourceKey:
                  $ref: '#/components/schemas/CompositeKey'
                courtActivityId:
                  type: integer
                  nullable: false
                  format: int32
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                date:
                  type: string
                startTime:
                  type: string
                duration:
                  type: integer
                  nullable: false
                  format: int32
                userInterfaceType:
                  type: string
              required:
                - courtResourceKey
                - courtActivityId
                - personKey
                - date
                - startTime
                - duration
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourtBooking'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /resource-bookings/getAvailableStartTimes:
    get:
      description: >-
        [ResourceBookingAPI getAvailableStartTimes v5
        documentation](https://clublead.atlassian.net/wiki/x/FYGGFQ)
      parameters:
        - name: centerKey
          in: query
          schema:
            type: integer
            nullable: false
            format: int32
        - name: courtActivityKey
          in: query
          schema:
            type: integer
            nullable: false
            format: int32
        - name: date
          in: query
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResourceBookingAvailability'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
    post:
      description: >-
        [ResourceBookingAPI getAvailableStartTimes v5
        documentation](https://clublead.atlassian.net/wiki/x/FYGGFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                centerKey:
                  type: integer
                  nullable: false
                  format: int32
                courtActivityKey:
                  type: integer
                  nullable: false
                  format: int32
                date:
                  type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResourceBookingAvailability'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /resource-bookings/getCourtActivities:
    get:
      description: >-
        [ResourceBookingAPI getCourtActivities v5
        documentation](https://clublead.atlassian.net/wiki/x/IAGGFQ)
      parameters:
        - name: centerKey
          in: query
          schema:
            type: integer
            nullable: false
            format: int32
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CourtActivity'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
    post:
      description: >-
        [ResourceBookingAPI getCourtActivities v5
        documentation](https://clublead.atlassian.net/wiki/x/IAGGFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                centerKey:
                  type: integer
                  nullable: false
                  format: int32
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CourtActivity'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /resource-bookings/getCourtResources:
    get:
      description: >-
        [ResourceBookingAPI getCourtResources v5
        documentation](https://clublead.atlassian.net/wiki/x/doGIFQ)
      parameters:
        - name: centerKey
          in: query
          schema:
            type: integer
            nullable: false
            format: int32
        - name: courtActivityKey
          in: query
          schema:
            type: integer
            nullable: false
            format: int32
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CourtResource'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
    post:
      description: >-
        [ResourceBookingAPI getCourtResources v5
        documentation](https://clublead.atlassian.net/wiki/x/doGIFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                centerKey:
                  type: integer
                  nullable: false
                  format: int32
                courtActivityKey:
                  type: integer
                  nullable: false
                  format: int32
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CourtResource'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /resource-bookings/getFutureCourtBookings:
    get:
      description: >-
        [ResourceBookingAPI getFutureCourtBookings v5
        documentation](https://clublead.atlassian.net/wiki/x/LoGHFQ)
      parameters:
        - name: externalId
          in: query
          schema:
            type: string
        - name: center
          in: query
          schema:
            type: integer
            nullable: false
            format: int32
        - name: id
          in: query
          schema:
            type: integer
            nullable: false
            format: int32
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CourtBooking'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
    post:
      description: >-
        [ResourceBookingAPI getFutureCourtBookings v5
        documentation](https://clublead.atlassian.net/wiki/x/LoGHFQ)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiPersonKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CourtBooking'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /resource-bookings/getStartTimes:
    post:
      description: >-
        [ResourceBookingAPI getStartTimes v5
        documentation](https://clublead.atlassian.net/wiki/x/HoGGFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                courtResourceKey:
                  $ref: '#/components/schemas/CompositeKey'
                courtActivityKey:
                  type: integer
                  nullable: false
                  format: int32
                date:
                  type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /self-service/findPersonByAccessCard:
    post:
      description: >-
        [SelfServiceAPI findPersonByAccessCard v5
        documentation](https://clublead.atlassian.net/wiki/x/XgGJFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                cardId:
                  type: string
                cardType:
                  $ref: '#/components/schemas/AccessCardType'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiPersonKey'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /self-service/findPersonByAccessCardAndEmail:
    post:
      description: >-
        [SelfServiceAPI findPersonByAccessCardAndEmail v5
        documentation](https://clublead.atlassian.net/wiki/x/ZQGJFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                memberCard:
                  $ref: '#/components/schemas/MemberCard'
                email:
                  type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonDetail'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /self-service/findPersonByEmail:
    post:
      description: >-
        [SelfServiceAPI findPersonByEmail v5
        documentation](https://clublead.atlassian.net/wiki/x/bQGJFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiPersonKey'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /self-service/generateToken:
    post:
      description: >-
        [SelfServiceAPI generateToken v5
        documentation](https://clublead.atlassian.net/wiki/x/iYE0Og)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                usage:
                  type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /self-service/setPassword:
    post:
      description: >-
        [SelfServiceAPI setPassword v5
        documentation](https://clublead.atlassian.net/wiki/x/hQGIFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                newPassword:
                  type: string
                comment:
                  type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: boolean
                nullable: false
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /self-service/setPincode:
    post:
      description: >-
        [SelfServiceAPI setPincode v5
        documentation](https://clublead.atlassian.net/wiki/x/JgGGFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                newPincode:
                  type: string
                comment:
                  type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /self-service/updatePassword:
    post:
      description: >-
        [SelfServiceAPI updatePassword v5
        documentation](https://clublead.atlassian.net/wiki/x/LQGGFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                currentPassword:
                  type: string
                newPassword:
                  type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: boolean
                nullable: false
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /self-service/updatePincode:
    post:
      description: >-
        [SelfServiceAPI updatePincode v5
        documentation](https://clublead.atlassian.net/wiki/x/EoGFFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                currentPincode:
                  type: string
                newPincode:
                  type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: boolean
                nullable: false
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /self-service/validateEmployeePassword:
    post:
      description: >-
        [SelfServiceAPI validateEmployeePassword v5
        documentation](https://clublead.atlassian.net/wiki/x/EwN3Fg)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                employeeId:
                  type: string
                password:
                  type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiPersonKey'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /self-service/validatePassword:
    post:
      description: >-
        [SelfServiceAPI validatePassword v5
        documentation](https://clublead.atlassian.net/wiki/x/FQGHFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                password:
                  type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: boolean
                nullable: false
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /self-service/validatePincode:
    post:
      description: >-
        [SelfServiceAPI validatePincode v5
        documentation](https://clublead.atlassian.net/wiki/x/MIKJFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                pincode:
                  type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: boolean
                nullable: false
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /self-service/validateToken:
    post:
      description: >-
        [SelfServiceAPI validateToken v5
        documentation](https://clublead.atlassian.net/wiki/x/SwBOOg)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                token:
                  type: string
                usage:
                  type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: boolean
                nullable: false
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /shopping-basket/addCamps:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                shoppingBasketKey:
                  type: string
                ownerKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                participations:
                  type: array
                  items:
                    $ref: '#/components/schemas/CampParticipation'
                installmentPlanConfigExternalId:
                  type: string
              required:
                - shoppingBasketKey
                - ownerKey
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  shoppingBasketKey:
                    type: string
                  centerId:
                    type: integer
                    format: int32
                  totalAmount:
                    type: number
                  vatAmount:
                    type: number
                  items:
                    $ref: '#/components/schemas/Collection'
                  shoppingBasketStatus:
                    type: string
                  shoppingBasketCreationDate:
                    type: string
                  subscriptionChangeInfo:
                    $ref: '#/components/schemas/ApiSubscriptionChangeInfo'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /shopping-basket/addCashSubscription:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                shoppingBasketKey:
                  type: string
                addOnProductRequests:
                  type: array
                  items:
                    $ref: '#/components/schemas/AddOnProductRequest'
                campaignCode:
                  type: string
                overrideCreationProductPrice:
                  type: number
                overrideAdminFeeProductPrice:
                  type: number
                periodPrice:
                  type: number
                startDate:
                  type: string
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                subscriptionProductKey:
                  $ref: '#/components/schemas/ApiProductKey'
                installmentPlanConfigExternalId:
                  type: string
              required:
                - shoppingBasketKey
                - startDate
                - personKey
                - subscriptionProductKey
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  shoppingBasketKey:
                    type: string
                  centerId:
                    type: integer
                    format: int32
                  totalAmount:
                    type: number
                  vatAmount:
                    type: number
                  items:
                    $ref: '#/components/schemas/Collection'
                  shoppingBasketStatus:
                    type: string
                  shoppingBasketCreationDate:
                    type: string
                  subscriptionChangeInfo:
                    $ref: '#/components/schemas/ApiSubscriptionChangeInfo'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /shopping-basket/addChangeEFTSubscription:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                centerId:
                  type: integer
                  format: int32
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                existingSubscriptionKey:
                  $ref: '#/components/schemas/CompositeKey'
                newSubscriptionProductKey:
                  $ref: '#/components/schemas/CompositeKey'
                startDate:
                  type: string
                periodPriceOverride:
                  type: number
                campaignCode:
                  type: string
                addOnProductRequests:
                  type: array
                  items:
                    $ref: '#/components/schemas/AddOnProductRequest'
                shoppingBasketKey:
                  type: string
                renewBindingPeriod:
                  type: boolean
              required:
                - centerId
                - personKey
                - existingSubscriptionKey
                - newSubscriptionProductKey
                - shoppingBasketKey
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  shoppingBasketKey:
                    type: string
                  centerId:
                    type: integer
                    format: int32
                  totalAmount:
                    type: number
                  vatAmount:
                    type: number
                  items:
                    $ref: '#/components/schemas/Collection'
                  shoppingBasketStatus:
                    type: string
                  shoppingBasketCreationDate:
                    type: string
                  subscriptionChangeInfo:
                    $ref: '#/components/schemas/ApiSubscriptionChangeInfo'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /shopping-basket/addClipcard:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                shoppingBasketKey:
                  type: string
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                productKey:
                  $ref: '#/components/schemas/ApiProductKey'
                clipcardPriceOverride:
                  type: string
                clipSize:
                  type: integer
                  format: int32
                assignStaffKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                installmentPlanConfigExternalId:
                  type: string
                paymentAgreementKeyForCollection:
                  $ref: '#/components/schemas/CompositeSubKey'
              required:
                - shoppingBasketKey
                - personKey
                - productKey
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  shoppingBasketKey:
                    type: string
                  centerId:
                    type: integer
                    format: int32
                  totalAmount:
                    type: number
                  vatAmount:
                    type: number
                  items:
                    $ref: '#/components/schemas/Collection'
                  shoppingBasketStatus:
                    type: string
                  shoppingBasketCreationDate:
                    type: string
                  subscriptionChangeInfo:
                    $ref: '#/components/schemas/ApiSubscriptionChangeInfo'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /shopping-basket/addClipcardSubscription:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                subscriptionProductKey:
                  $ref: '#/components/schemas/ApiProductKey'
                startDate:
                  type: string
                overrideCreationProductPrice:
                  type: number
                overrideAdminFeeProductPrice:
                  type: number
                periodPrice:
                  type: number
                addOnProductRequests:
                  type: array
                  items:
                    $ref: '#/components/schemas/AddOnProductRequest'
                campaignCode:
                  type: string
                checkValidAgreement:
                  type: boolean
                clipSize:
                  type: integer
                  format: int32
                overrideStartupClips:
                  type: integer
                  format: int32
                paymentAgreementKeyForCollection:
                  $ref: '#/components/schemas/CompositeSubKey'
                shoppingBasketKey:
                  type: string
                assignedEmployeePersonKey:
                  $ref: '#/components/schemas/ApiPersonKey'
              required:
                - personKey
                - subscriptionProductKey
                - startDate
                - shoppingBasketKey
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  shoppingBasketKey:
                    type: string
                  centerId:
                    type: integer
                    format: int32
                  totalAmount:
                    type: number
                  vatAmount:
                    type: number
                  items:
                    $ref: '#/components/schemas/Collection'
                  shoppingBasketStatus:
                    type: string
                  shoppingBasketCreationDate:
                    type: string
                  subscriptionChangeInfo:
                    $ref: '#/components/schemas/ApiSubscriptionChangeInfo'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /shopping-basket/addCourseClipcard:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                shoppingBasketKey:
                  type: string
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                ownerKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                startBookingKey:
                  $ref: '#/components/schemas/CompositeKey'
                clipcardProductKey:
                  $ref: '#/components/schemas/ApiProductKey'
                clipcardPriceOverride:
                  type: string
                installmentPlanConfigExternalId:
                  type: string
              required:
                - shoppingBasketKey
                - personKey
                - startBookingKey
                - clipcardProductKey
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  shoppingBasketKey:
                    type: string
                  centerId:
                    type: integer
                    format: int32
                  totalAmount:
                    type: number
                  vatAmount:
                    type: number
                  items:
                    $ref: '#/components/schemas/Collection'
                  shoppingBasketStatus:
                    type: string
                  shoppingBasketCreationDate:
                    type: string
                  subscriptionChangeInfo:
                    $ref: '#/components/schemas/ApiSubscriptionChangeInfo'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /shopping-basket/addCourseEFTMembership:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                shoppingBasketKey:
                  type: string
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                startBookingKey:
                  $ref: '#/components/schemas/CompositeKey'
                subscriptionProductKey:
                  $ref: '#/components/schemas/ApiProductKey'
                overrideCreationProductPrice:
                  type: number
                overrideAdminFeeProductPrice:
                  type: number
                periodPrice:
                  type: number
                addOnProductRequests:
                  type: array
                  items:
                    $ref: '#/components/schemas/AddOnProductRequest'
                campaignCode:
                  type: string
                checkValidAgreement:
                  type: boolean
                paymentAgreementKeyForCollection:
                  $ref: '#/components/schemas/CompositeSubKey'
              required:
                - shoppingBasketKey
                - personKey
                - startBookingKey
                - subscriptionProductKey
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  shoppingBasketKey:
                    type: string
                  centerId:
                    type: integer
                    format: int32
                  totalAmount:
                    type: number
                  vatAmount:
                    type: number
                  items:
                    $ref: '#/components/schemas/Collection'
                  shoppingBasketStatus:
                    type: string
                  shoppingBasketCreationDate:
                    type: string
                  subscriptionChangeInfo:
                    $ref: '#/components/schemas/ApiSubscriptionChangeInfo'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /shopping-basket/addEFTSubscription:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                subscriptionProductKey:
                  $ref: '#/components/schemas/ApiProductKey'
                startDate:
                  type: string
                overrideCreationProductPrice:
                  type: number
                overrideAdminFeeProductPrice:
                  type: number
                periodPrice:
                  type: number
                addOnProductRequests:
                  type: array
                  items:
                    $ref: '#/components/schemas/AddOnProductRequest'
                campaignCode:
                  type: string
                checkValidAgreement:
                  type: boolean
                shoppingBasketKey:
                  type: string
                paymentAgreementKeyForCollection:
                  $ref: '#/components/schemas/CompositeSubKey'
                assignedEmployeePersonKey:
                  $ref: '#/components/schemas/ApiPersonKey'
              required:
                - personKey
                - subscriptionProductKey
                - startDate
                - shoppingBasketKey
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  shoppingBasketKey:
                    type: string
                  centerId:
                    type: integer
                    format: int32
                  totalAmount:
                    type: number
                  vatAmount:
                    type: number
                  items:
                    $ref: '#/components/schemas/Collection'
                  shoppingBasketStatus:
                    type: string
                  shoppingBasketCreationDate:
                    type: string
                  subscriptionChangeInfo:
                    $ref: '#/components/schemas/ApiSubscriptionChangeInfo'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /shopping-basket/addServiceProduct:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                productKey:
                  $ref: '#/components/schemas/ProductKey'
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                shoppingBasketKey:
                  type: string
                priceOverride:
                  type: number
                quantity:
                  type: integer
                  format: int32
              required:
                - productKey
                - personKey
                - shoppingBasketKey
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  shoppingBasketKey:
                    type: string
                  centerId:
                    type: integer
                    format: int32
                  totalAmount:
                    type: number
                  vatAmount:
                    type: number
                  items:
                    $ref: '#/components/schemas/Collection'
                  shoppingBasketStatus:
                    type: string
                  shoppingBasketCreationDate:
                    type: string
                  subscriptionChangeInfo:
                    $ref: '#/components/schemas/ApiSubscriptionChangeInfo'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /shopping-basket/addSubscriptionAddOns:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                shoppingBasketKey:
                  type: string
                subscriptionKey:
                  $ref: '#/components/schemas/CompositeKey'
                startDate:
                  type: string
                addOnProductRequests:
                  type: array
                  items:
                    $ref: '#/components/schemas/AddOnProductRequest'
              required:
                - shoppingBasketKey
                - subscriptionKey
                - startDate
                - addOnProductRequests
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  shoppingBasketKey:
                    type: string
                  centerId:
                    type: integer
                    format: int32
                  totalAmount:
                    type: number
                  vatAmount:
                    type: number
                  items:
                    $ref: '#/components/schemas/Collection'
                  shoppingBasketStatus:
                    type: string
                  shoppingBasketCreationDate:
                    type: string
                  subscriptionChangeInfo:
                    $ref: '#/components/schemas/ApiSubscriptionChangeInfo'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /shopping-basket/addSubscriptionPrepayment:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                shoppingBasketKey:
                  type: string
                subscriptionKey:
                  $ref: '#/components/schemas/CompositeKey'
                prepayAmount:
                  type: number
                roundUpPrepaidDays:
                  type: boolean
                periodsToPrepay:
                  type: integer
                  format: int32
              required:
                - shoppingBasketKey
                - subscriptionKey
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  shoppingBasketKey:
                    type: string
                  centerId:
                    type: integer
                    format: int32
                  totalAmount:
                    type: number
                  vatAmount:
                    type: number
                  items:
                    $ref: '#/components/schemas/Collection'
                  shoppingBasketStatus:
                    type: string
                  shoppingBasketCreationDate:
                    type: string
                  subscriptionChangeInfo:
                    $ref: '#/components/schemas/ApiSubscriptionChangeInfo'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /shopping-basket/applyCampaignCode:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                shoppingBasketKey:
                  type: string
                campaignCode:
                  type: string
              required:
                - shoppingBasketKey
                - campaignCode
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  shoppingBasketKey:
                    type: string
                  centerId:
                    type: integer
                    format: int32
                  totalAmount:
                    type: number
                  vatAmount:
                    type: number
                  items:
                    $ref: '#/components/schemas/Collection'
                  shoppingBasketStatus:
                    type: string
                  shoppingBasketCreationDate:
                    type: string
                  subscriptionChangeInfo:
                    $ref: '#/components/schemas/ApiSubscriptionChangeInfo'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /shopping-basket/cancelPaymentSession:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                shoppingBasketKey:
                  type: string
              required:
                - shoppingBasketKey
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  shoppingBasketKey:
                    type: string
                  centerId:
                    type: integer
                    format: int32
                  totalAmount:
                    type: number
                  vatAmount:
                    type: number
                  items:
                    $ref: '#/components/schemas/Collection'
                  shoppingBasketStatus:
                    type: string
                  shoppingBasketCreationDate:
                    type: string
                  subscriptionChangeInfo:
                    $ref: '#/components/schemas/ApiSubscriptionChangeInfo'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /shopping-basket/createShoppingBasket:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                centerId:
                  type: integer
                  format: int32
              required:
                - centerId
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  shoppingBasketKey:
                    type: string
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /shopping-basket/deleteShoppingBasket:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                shoppingBasketKey:
                  type: string
                includeParkedShoppingBasket:
                  type: boolean
              required:
                - shoppingBasketKey
                - includeParkedShoppingBasket
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /shopping-basket/getContractForItem:
    get:
      parameters:
        - name: shoppingBasketKey
          in: query
          schema:
            type: string
        - name: itemKey
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MIMEDocument'
            '*/*':
              schema:
                type: string
                format: binary
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                shoppingBasketKey:
                  type: string
                itemKey:
                  type: integer
                  format: int32
              required:
                - shoppingBasketKey
                - itemKey
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MIMEDocument'
            '*/*':
              schema:
                type: string
                format: binary
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /shopping-basket/getShoppingBasket:
    get:
      parameters:
        - name: shoppingBasketKey
          in: query
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  shoppingBasketKey:
                    type: string
                  centerId:
                    type: integer
                    format: int32
                  totalAmount:
                    type: number
                  vatAmount:
                    type: number
                  items:
                    $ref: '#/components/schemas/Collection'
                  shoppingBasketStatus:
                    type: string
                  shoppingBasketCreationDate:
                    type: string
                  subscriptionChangeInfo:
                    $ref: '#/components/schemas/ApiSubscriptionChangeInfo'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                shoppingBasketKey:
                  type: string
              required:
                - shoppingBasketKey
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  shoppingBasketKey:
                    type: string
                  centerId:
                    type: integer
                    format: int32
                  totalAmount:
                    type: number
                  vatAmount:
                    type: number
                  items:
                    $ref: '#/components/schemas/Collection'
                  shoppingBasketStatus:
                    type: string
                  shoppingBasketCreationDate:
                    type: string
                  subscriptionChangeInfo:
                    $ref: '#/components/schemas/ApiSubscriptionChangeInfo'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /shopping-basket/parkShoppingBasket:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                shoppingBasketId:
                  type: string
              required:
                - shoppingBasketId
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  shoppingBasketKey:
                    type: string
                  centerId:
                    type: integer
                    format: int32
                  totalAmount:
                    type: number
                  vatAmount:
                    type: number
                  items:
                    $ref: '#/components/schemas/Collection'
                  shoppingBasketStatus:
                    type: string
                  shoppingBasketCreationDate:
                    type: string
                  subscriptionChangeInfo:
                    $ref: '#/components/schemas/ApiSubscriptionChangeInfo'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /shopping-basket/registerCardOnFilePayment:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                shoppingBasketKey:
                  type: string
                paymentAmount:
                  type: number
                paymentAgreementKey:
                  $ref: '#/components/schemas/CompositeSubKey'
              required:
                - shoppingBasketKey
                - paymentAmount
                - paymentAgreementKey
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  invoice:
                    $ref: '#/components/schemas/Invoice'
                  invoices:
                    $ref: '#/components/schemas/List'
                  startupClipCards:
                    $ref: '#/components/schemas/List'
                  initialPeriodClipCards:
                    $ref: '#/components/schemas/List'
                required:
                  - invoices
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /shopping-basket/registerExternalPayment:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                shoppingBasketKey:
                  type: string
                amountPaidByCustomer:
                  type: number
                customPaymentMethodId:
                  type: integer
                  format: int32
                externalPaymentTransactionReference:
                  type: string
              required:
                - shoppingBasketKey
                - amountPaidByCustomer
                - customPaymentMethodId
                - externalPaymentTransactionReference
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  invoice:
                    $ref: '#/components/schemas/Invoice'
                  invoices:
                    $ref: '#/components/schemas/List'
                  startupClipCards:
                    $ref: '#/components/schemas/List'
                  initialPeriodClipCards:
                    $ref: '#/components/schemas/List'
                required:
                  - invoices
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /shopping-basket/removeItem:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                shoppingBasketKey:
                  type: string
                itemKey:
                  type: integer
                  format: int32
              required:
                - shoppingBasketKey
                - itemKey
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  shoppingBasketKey:
                    type: string
                  centerId:
                    type: integer
                    format: int32
                  totalAmount:
                    type: number
                  vatAmount:
                    type: number
                  items:
                    $ref: '#/components/schemas/Collection'
                  shoppingBasketStatus:
                    type: string
                  shoppingBasketCreationDate:
                    type: string
                  subscriptionChangeInfo:
                    $ref: '#/components/schemas/ApiSubscriptionChangeInfo'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /shopping-basket/startExternalPaymentSession:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                shoppingBasketKey:
                  type: string
                configurablePaymentMethodId:
                  type: integer
                  format: int32
              required:
                - shoppingBasketKey
                - configurablePaymentMethodId
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  shoppingBasketKey:
                    type: string
                  centerId:
                    type: integer
                    format: int32
                  totalAmount:
                    type: number
                  vatAmount:
                    type: number
                  items:
                    $ref: '#/components/schemas/Collection'
                  shoppingBasketStatus:
                    type: string
                  shoppingBasketCreationDate:
                    type: string
                  subscriptionChangeInfo:
                    $ref: '#/components/schemas/ApiSubscriptionChangeInfo'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /shopping-basket/startPaymentSession:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                shoppingBasketKey:
                  type: string
              required:
                - shoppingBasketKey
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  shoppingBasketKey:
                    type: string
                  centerId:
                    type: integer
                    format: int32
                  totalAmount:
                    type: number
                  vatAmount:
                    type: number
                  items:
                    $ref: '#/components/schemas/Collection'
                  shoppingBasketStatus:
                    type: string
                  shoppingBasketCreationDate:
                    type: string
                  subscriptionChangeInfo:
                    $ref: '#/components/schemas/ApiSubscriptionChangeInfo'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /social/createFamilyRelation:
    post:
      description: >-
        [SocialAPI createFamilyRelation v5
        documentation](https://clublead.atlassian.net/wiki/x/LIEQGg)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                relativeKey:
                  $ref: '#/components/schemas/ApiPersonKey'
              required:
                - personKey
                - relativeKey
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /social/createFriendRelation:
    post:
      description: >-
        [SocialAPI createFriendRelation v5
        documentation](https://clublead.atlassian.net/wiki/x/dgGJFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                friendKey:
                  $ref: '#/components/schemas/ApiPersonKey'
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /social/createParentRelation:
    post:
      description: >-
        [SocialAPI createParentRelation v5
        documentation](https://clublead.atlassian.net/wiki/x/ewGJFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                children:
                  $ref: '#/components/schemas/List'
                parents:
                  $ref: '#/components/schemas/List'
              required:
                - children
                - parents
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /social/deleteFamilyRelation:
    post:
      description: >-
        [SocialAPI deleteFamilyRelation v5
        documentation](https://clublead.atlassian.net/wiki/x/ZgEhGg)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                relativeKey:
                  $ref: '#/components/schemas/ApiPersonKey'
              required:
                - personKey
                - relativeKey
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /social/deleteFriendRelation:
    post:
      description: >-
        [SocialAPI deleteFriendRelation v5
        documentation](https://clublead.atlassian.net/wiki/x/NoGHFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                friendKey:
                  $ref: '#/components/schemas/ApiPersonKey'
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /social/deleteParentRelation:
    post:
      description: >-
        [SocialAPI deleteParentRelation v5
        documentation](https://clublead.atlassian.net/wiki/x/goGIFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                childKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                parentKey:
                  $ref: '#/components/schemas/ApiPersonKey'
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /staff-bookings/cancelBooking:
    post:
      description: >-
        [StaffBookingAPI cancelBooking v5
        documentation](https://clublead.atlassian.net/wiki/x/hQGJFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                bookingKey:
                  $ref: '#/components/schemas/CompositeKey'
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /staff-bookings/cancelStaffAvailability:
    post:
      description: >-
        [StaffBookingAPI cancelStaffAvailability v5
        documentation](https://clublead.atlassian.net/wiki/x/JYMqGg)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                staffAvailabilityKey:
                  $ref: '#/components/schemas/CompositeKey'
                reason:
                  type: string
              required:
                - staffAvailabilityKey
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /staff-bookings/createPersonalTrainingBooking:
    post:
      description: >-
        [StaffBookingAPI createPersonalTrainingBooking v5
        documentation](https://clublead.atlassian.net/wiki/x/hgGKFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personalTrainingActivityId:
                  type: integer
                  nullable: false
                  format: int32
                centerId:
                  type: integer
                  nullable: false
                  format: int32
                instructorKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                date:
                  type: string
                startTime:
                  type: string
                duration:
                  type: integer
                  nullable: false
                  format: int32
                userInterfaceType:
                  type: string
                recurrence:
                  $ref: '#/components/schemas/BookingRecurrence'
              required:
                - personalTrainingActivityId
                - centerId
                - instructorKey
                - personKey
                - date
                - startTime
                - duration
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalTrainingBooking'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /staff-bookings/createStaffAvailability:
    post:
      description: >-
        [StaffBookingAPI createStaffAvailability v5
        documentation](https://clublead.atlassian.net/wiki/x/AIIoGg)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                staffAvailabilityActivityId:
                  type: integer
                  nullable: false
                  format: int32
                centerId:
                  type: integer
                  nullable: false
                  format: int32
                instructorKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                startDate:
                  type: string
                startTime:
                  type: string
                duration:
                  type: integer
                  nullable: false
                  format: int32
              required:
                - staffAvailabilityActivityId
                - centerId
                - instructorKey
                - startDate
                - startTime
                - duration
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaffAvailability'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /staff-bookings/getAvailableTrainingIntervals:
    get:
      description: >-
        [StaffBookingAPI getAvailableTrainingIntervals v5
        documentation](https://clublead.atlassian.net/wiki/x/kQGIFQ)
      parameters:
        - name: centerId
          in: query
          schema:
            type: integer
            nullable: false
            format: int32
        - name: activityId
          in: query
          schema:
            type: integer
            nullable: false
            format: int32
        - name: date
          in: query
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AvailableTrainingInterval'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
    post:
      description: >-
        [StaffBookingAPI getAvailableTrainingIntervals v5
        documentation](https://clublead.atlassian.net/wiki/x/kQGIFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                centerId:
                  type: integer
                  nullable: false
                  format: int32
                activityId:
                  type: integer
                  nullable: false
                  format: int32
                date:
                  type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AvailableTrainingInterval'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /staff-bookings/getFutureBookings:
    get:
      description: >-
        [StaffBookingAPI getFutureBookings v5
        documentation](https://clublead.atlassian.net/wiki/x/GYGFFQ)
      parameters:
        - name: externalId
          in: query
          schema:
            type: string
        - name: center
          in: query
          schema:
            type: integer
            nullable: false
            format: int32
        - name: id
          in: query
          schema:
            type: integer
            nullable: false
            format: int32
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PersonalTrainingBooking'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
    post:
      description: >-
        [StaffBookingAPI getFutureBookings v5
        documentation](https://clublead.atlassian.net/wiki/x/GYGFFQ)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiPersonKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PersonalTrainingBooking'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /staff-bookings/getPersonalTrainingActivities:
    get:
      description: >-
        [StaffBookingAPI getPersonalTrainingActivities v5
        documentation](https://clublead.atlassian.net/wiki/x/iIGIFQ)
      parameters:
        - name: centerId
          in: query
          schema:
            type: integer
            nullable: false
            format: int32
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PersonalTrainingActivity'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
    post:
      description: >-
        [StaffBookingAPI getPersonalTrainingActivities v5
        documentation](https://clublead.atlassian.net/wiki/x/iIGIFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                centerId:
                  type: integer
                  nullable: false
                  format: int32
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PersonalTrainingActivity'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /staff-bookings/getSubstitutesForBooking:
    get:
      description: >-
        [StaffBookingAPI getSubstitutesForBooking v5
        documentation](https://clublead.atlassian.net/wiki/x/PYGHFQ)
      parameters:
        - name: center
          in: query
          schema:
            type: integer
            nullable: false
            format: int32
        - name: id
          in: query
          schema:
            type: integer
            nullable: false
            format: int32
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StaffMember'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
    post:
      description: >-
        [StaffBookingAPI getSubstitutesForBooking v5
        documentation](https://clublead.atlassian.net/wiki/x/PYGHFQ)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompositeKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StaffMember'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /staff-bookings/updateStaffAvailability:
    post:
      description: >-
        [StaffBookingAPI updateStaffAvailability v5
        documentation](https://clublead.atlassian.net/wiki/x/FAMpGg)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                startDate:
                  type: string
                startTime:
                  type: string
                duration:
                  type: integer
                  nullable: false
                  format: int32
                staffAvailabilityKey:
                  $ref: '#/components/schemas/CompositeKey'
              required:
                - startDate
                - startTime
                - duration
                - staffAvailabilityKey
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaffAvailability'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /subscriptions/applyRetentionCampaign:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                subscriptionKey:
                  $ref: '#/components/schemas/SubscriptionKey'
                campaignCode:
                  type: string
              required:
                - subscriptionKey
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailableRetentionCampaign'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /subscriptions/cancelFreePeriod:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompositeSubKey'
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /subscriptions/cancelFreeze:
    post:
      description: >-
        [SubscriptionAPI cancelFreeze v5
        documentation](https://clublead.atlassian.net/wiki/x/QwGGFQ)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompositeSubKey'
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /subscriptions/cancelStopSubscription:
    post:
      description: >-
        [SubscriptionAPI cancelStopSubscription v5
        documentation](https://clublead.atlassian.net/wiki/x/0ICVFg)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompositeKey'
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /subscriptions/changeEFTSusbcription:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                changeEFTSubscriptionParameters:
                  type: object
                  properties:
                    centerId:
                      type: integer
                      nullable: false
                      format: int32
                    personKey:
                      $ref: '#/components/schemas/ApiPersonKey'
                    existingSubscriptionKey:
                      $ref: '#/components/schemas/CompositeKey'
                    newSubscriptionProductKey:
                      $ref: '#/components/schemas/CompositeKey'
                    startDate:
                      type: string
                    periodPriceOverride:
                      type: number
                    campaignCode:
                      type: string
                    addOnProductRequests:
                      type: array
                      items:
                        $ref: '#/components/schemas/AddOnProductRequest'
                    renewBindingPeriod:
                      type: boolean
                  required:
                    - centerId
                    - personKey
                    - existingSubscriptionKey
                    - newSubscriptionProductKey
                paymentInfo:
                  $ref: '#/components/schemas/PaymentInfo'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  newSubscriptionKey:
                    $ref: '#/components/schemas/CompositeKey'
                  invoiceKey:
                    $ref: '#/components/schemas/CompositeKey'
                  campaignPrice:
                    type: number
                  campaignSource:
                    type: string
                  campaignText:
                    type: string
                  campaignStartDate:
                    type: string
                  campaignEndDate:
                    type: string
                required:
                  - newSubscriptionKey
                  - invoiceKey
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /subscriptions/changeFreePeriodStopDate:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                freePeriodKey:
                  $ref: '#/components/schemas/CompositeSubKey'
                stopDate:
                  type: string
              required:
                - freePeriodKey
                - stopDate
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionFreePeriod'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /subscriptions/changeFreezeEndDate:
    post:
      description: >-
        [SubscriptionAPI changeFreezeEndDate v5
        documentation](https://clublead.atlassian.net/wiki/x/koGIFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                freezeKey:
                  $ref: '#/components/schemas/CompositeSubKey'
                endDate:
                  type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /subscriptions/createFreePeriod:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                subscriptionId:
                  $ref: '#/components/schemas/CompositeKey'
                startDate:
                  type: string
                stopDate:
                  type: string
                comment:
                  type: string
              required:
                - subscriptionId
                - startDate
                - stopDate
                - comment
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionFreePeriod'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /subscriptions/createFreeze:
    post:
      description: >-
        [SubscriptionAPI createFreeze v5
        documentation](https://clublead.atlassian.net/wiki/x/mYGIFQ)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewFreeze'
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /subscriptions/createSubscriptionPriceChange:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                subscriptionKey:
                  $ref: '#/components/schemas/CompositeKey'
                priceChange:
                  $ref: '#/components/schemas/ApiPriceChange'
                binding:
                  type: boolean
                  nullable: false
                fromDate:
                  type: string
                toDate:
                  type: string
                comment:
                  type: string
              required:
                - subscriptionKey
                - priceChange
                - binding
                - fromDate
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiSubscriptionPrice'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /subscriptions/deleteSubscription:
    post:
      description: >-
        [SubscriptionAPI deleteSubscription v5
        documentation](https://clublead.atlassian.net/wiki/x/TwGGFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                subscriptionKey:
                  $ref: '#/components/schemas/CompositeKey'
              required:
                - personKey
                - subscriptionKey
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompositeKey'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /subscriptions/freezeByPaymentCycle:
    post:
      description: >-
        [SubscriptionAPI freezeByPaymentCycle v5
        documentation](https://clublead.atlassian.net/wiki/x/lwGJFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                subscriptionId:
                  $ref: '#/components/schemas/CompositeKey'
                type:
                  $ref: '#/components/schemas/FreezeType'
                paymentCycles:
                  type: integer
                  nullable: false
                  format: int32
                comment:
                  type: string
                cancelParticipations:
                  type: boolean
              required:
                - subscriptionId
                - type
                - paymentCycles
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /subscriptions/getAvailableAddOnProducts:
    get:
      description: >-
        [SubscriptionAPI getAvailableAddOnProducts v5
        documentation](https://clublead.atlassian.net/wiki/x/PQGHFQ)
      parameters:
        - name: center
          in: query
          schema:
            type: integer
            nullable: false
            format: int32
        - name: id
          in: query
          schema:
            type: integer
            nullable: false
            format: int32
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AvailableAddOnProduct'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
    post:
      description: >-
        [SubscriptionAPI getAvailableAddOnProducts v5
        documentation](https://clublead.atlassian.net/wiki/x/PQGHFQ)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompositeKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AvailableAddOnProduct'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /subscriptions/getAvailableAddOnProductsForProduct:
    post:
      description: >-
        [SubscriptionAPI getAvailableAddOnProductsForProduct v5
        documentation](https://clublead.atlassian.net/wiki/x/mQGIFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personType:
                  $ref: '#/components/schemas/PersonType'
                productId:
                  $ref: '#/components/schemas/CompositeKey'
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                onlyAvailableOnWeb:
                  type: boolean
                  nullable: false
              required:
                - productId
                - onlyAvailableOnWeb
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AvailableAddOnProduct'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /subscriptions/getAvailableFreeze:
    post:
      description: >-
        [SubscriptionAPI getAvailableFreeze v5
        documentation](https://clublead.atlassian.net/wiki/x/TwGHFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                SubscriptionId:
                  $ref: '#/components/schemas/CompositeKeyImpl'
                fromDate:
                  type: string
                toDate:
                  type: string
              required:
                - SubscriptionId
                - fromDate
                - toDate
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailableFreeze'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /subscriptions/getAvailableSubscriptionsAnonymous:
    post:
      description: >-
        [SubscriptionAPI getAvailableSubscriptionsAnonymous v5
        documentation](https://clublead.atlassian.net/wiki/x/XAGHFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                centerId:
                  type: integer
                  nullable: false
                  format: int32
                personType:
                  $ref: '#/components/schemas/PersonType'
                subscriptionType:
                  $ref: '#/components/schemas/SubscriptionType'
                companyAgreementId:
                  $ref: '#/components/schemas/CompositeSubKey'
                onlyAvailableOnWeb:
                  type: boolean
                  nullable: false
                campaignCode:
                  type: string
                includeFreeze:
                  type: boolean
                productGroupKey:
                  type: integer
                  format: int32
              required:
                - centerId
                - personType
                - onlyAvailableOnWeb
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AvailableSubscription'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /subscriptions/getAvailableSubscriptionsForPerson:
    post:
      description: >-
        [SubscriptionAPI getAvailableSubscriptionsForPerson v5
        documentation](https://clublead.atlassian.net/wiki/x/r4GIFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                type:
                  $ref: '#/components/schemas/SubscriptionType'
                onlyAvailableOnWeb:
                  type: boolean
                  nullable: false
                campaignCode:
                  type: string
                includeFreeze:
                  type: boolean
                alternativeCenter:
                  type: integer
                  format: int32
                includePaymentOptions:
                  type: boolean
              required:
                - personKey
                - type
                - onlyAvailableOnWeb
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AvailableSubscription'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /subscriptions/getAvailableSubscriptionsForScope:
    get:
      description: >-
        [SubscriptionAPI getAvailableSubscriptionsForScope v5
        documentation](https://clublead.atlassian.net/wiki/x/PYKJFQ)
      parameters:
        - name: scopeId
          in: query
          schema:
            type: string
        - name: personType
          in: query
          schema:
            type: string
            enum:
              - PRIVATE
              - STUDENT
              - STAFF
              - FRIEND
              - CORPORATE
              - ONEMANCORPORATE
              - FAMILY
              - SENIOR
              - GUEST
              - CHILD
              - EXTERNAL_STAFF
        - name: onlyAvailableOnWeb
          in: query
          schema:
            type: boolean
            nullable: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AvailableScopeSubscriptions'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
    post:
      description: >-
        [SubscriptionAPI getAvailableSubscriptionsForScope v5
        documentation](https://clublead.atlassian.net/wiki/x/PYKJFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                scopeId:
                  type: string
                personType:
                  $ref: '#/components/schemas/PersonType'
                onlyAvailableOnWeb:
                  type: boolean
                  nullable: false
              required:
                - scopeId
                - personType
                - onlyAvailableOnWeb
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AvailableScopeSubscriptions'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /subscriptions/getChangeEFTSubscriptionDetails:
    post:
      description: >-
        [SubscriptionAPI getChangeEFTSubscriptionDetails v5
        documentation](https://clublead.atlassian.net/wiki/x/N4GFFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                centerId:
                  type: integer
                  nullable: false
                  format: int32
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                existingSubscriptionKey:
                  $ref: '#/components/schemas/CompositeKey'
                newSubscriptionProductKey:
                  $ref: '#/components/schemas/CompositeKey'
                startDate:
                  type: string
                periodPriceOverride:
                  type: number
                campaignCode:
                  type: string
                addOnProductRequests:
                  type: array
                  items:
                    $ref: '#/components/schemas/AddOnProductRequest'
                renewBindingPeriod:
                  type: boolean
              required:
                - centerId
                - personKey
                - existingSubscriptionKey
                - newSubscriptionProductKey
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeEFTSubscriptionDetails'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /subscriptions/getFirstComingFreezePeriod:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                subscriptionId:
                  $ref: '#/components/schemas/CompositeKey'
              required:
                - subscriptionId
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FreezePeriodResponse'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /subscriptions/getFreePeriods:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                subscriptionId:
                  $ref: '#/components/schemas/CompositeKey'
                includeOld:
                  type: boolean
                  nullable: false
                includeCancelled:
                  type: boolean
                  nullable: false
              required:
                - subscriptionId
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubscriptionFreePeriod'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /subscriptions/getFreezes:
    post:
      description: >-
        [SubscriptionAPI getFreezes v5
        documentation](https://clublead.atlassian.net/wiki/x/qwGJFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                subscriptionKey:
                  $ref: '#/components/schemas/CompositeKey'
                includeOld:
                  type: boolean
                  nullable: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Freeze'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /subscriptions/getInvoicePreviewForSubscriptionSale:
    post:
      description: >-
        [SubscriptionAPI getInvoicePreviewForSubscriptionSale v5
        documentation](https://clublead.atlassian.net/wiki/x/WIGHFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personId:
                  $ref: '#/components/schemas/ApiPersonKey'
                assignedEmployeePersonKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                subscriptionProductKey:
                  $ref: '#/components/schemas/ApiProductKey'
                paymentInfo:
                  $ref: '#/components/schemas/PaymentInfo'
                startDate:
                  type: string
                overrideCreationProductPrice:
                  type: number
                overrideAdminFeeProductPrice:
                  type: number
                periodPrice:
                  type: number
                addOnProductRequests:
                  type: array
                  items:
                    $ref: '#/components/schemas/AddOnProductRequest'
                campaignCode:
                  type: string
                checkValidAgreement:
                  type: boolean
              required:
                - personId
                - subscriptionProductKey
                - paymentInfo
                - startDate
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /subscriptions/getPersonSubscriptions:
    post:
      description: >-
        [SubscriptionAPI getPersonSubscriptions v5
        documentation](https://clublead.atlassian.net/wiki/x/KoGGFQ)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                onlyActive:
                  type: boolean
                  nullable: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subscription'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /subscriptions/getPriceForPeriod:
    post:
      description: >-
        [SubscriptionAPI getPriceForPeriod v5
        documentation](https://clublead.atlassian.net/wiki/x/TQEHGw)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                subscriptionProductKey:
                  $ref: '#/components/schemas/CompositeKey'
                periodPrice:
                  type: string
                fromDate:
                  type: string
                toDate:
                  type: string
              required:
                - subscriptionProductKey
                - periodPrice
                - fromDate
                - toDate
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /subscriptions/getRecurringClipcardContractSummary:
    post:
      description: >-
        [SubscriptionAPI getRecurringClipcardContractSummary v5
        documentation](https://clublead.atlassian.net/wiki/x/GIDRGw)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                centerId:
                  type: integer
                  format: int32
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                personType:
                  $ref: '#/components/schemas/PersonType'
                startDate:
                  type: string
                clearingHouseType:
                  $ref: '#/components/schemas/ClearingHouseType'
                paymentAgreementDeductionDay:
                  type: integer
                  format: int32
                subscriptionProductKey:
                  $ref: '#/components/schemas/ApiProductKey'
                campaignCode:
                  type: string
                companyAgreementKey:
                  $ref: '#/components/schemas/CompositeSubKey'
                paymentAgreementToUseKey:
                  $ref: '#/components/schemas/CompositeSubKey'
                addOnProductRequests:
                  type: array
                  items:
                    $ref: '#/components/schemas/AddOnProductRequest'
                recurringClipcardClips:
                  type: integer
                  format: int32
                overrideStartupClips:
                  type: integer
                  format: int32
              required:
                - centerId
                - startDate
                - subscriptionProductKey
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecurringClipcardContractSummary'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /subscriptions/getRetentionCampaignForSubscription:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                subscriptionKey:
                  $ref: '#/components/schemas/SubscriptionKey'
                campaignCode:
                  type: string
              required:
                - subscriptionKey
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailableRetentionCampaign'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /subscriptions/getStopFreezePeriodInfo:
    get:
      description: >-
        [SubscriptionAPI getStopFreezePeriodInfo v5
        documentation](https://clublead.atlassian.net/wiki/x/WIFrFg)
      parameters:
        - name: subId
          in: query
          schema:
            type: integer
            nullable: false
            format: int32
        - name: center
          in: query
          schema:
            type: integer
            nullable: false
            format: int32
        - name: id
          in: query
          schema:
            type: integer
            nullable: false
            format: int32
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopFreezePeriodInfo'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
    post:
      description: >-
        [SubscriptionAPI getStopFreezePeriodInfo v5
        documentation](https://clublead.atlassian.net/wiki/x/WIFrFg)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompositeSubKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopFreezePeriodInfo'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /subscriptions/getSubscriptionContractSummary:
    post:
      description: >-
        [SubscriptionAPI getSubscriptionContractSummary v5
        documentation](https://clublead.atlassian.net/wiki/x/ToJwFg)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                centerId:
                  type: integer
                  format: int32
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                personType:
                  $ref: '#/components/schemas/PersonType'
                startDate:
                  type: string
                clearingHouseType:
                  $ref: '#/components/schemas/ClearingHouseType'
                paymentAgreementDeductionDay:
                  type: integer
                  format: int32
                subscriptionProductKey:
                  $ref: '#/components/schemas/ApiProductKey'
                campaignCode:
                  type: string
                companyAgreementKey:
                  $ref: '#/components/schemas/CompositeSubKey'
                paymentAgreementToUseKey:
                  $ref: '#/components/schemas/CompositeSubKey'
                addOnProductRequests:
                  type: array
                  items:
                    $ref: '#/components/schemas/AddOnProductRequest'
              required:
                - centerId
                - startDate
                - subscriptionProductKey
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionContractSummary'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /subscriptions/getSubscriptionCreationInformation:
    post:
      description: >-
        [SubscriptionAPI getSubscriptionCreationInformation v5
        documentation](https://clublead.atlassian.net/wiki/x/c4FrFg)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                ownerKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                subscriptionTypeKey:
                  $ref: '#/components/schemas/CompositeKey'
                startDate:
                  type: string
                campaignCode:
                  type: string
              required:
                - ownerKey
                - subscriptionTypeKey
                - startDate
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionCreationInformation'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /subscriptions/getSubscriptionPriceList:
    get:
      description: >-
        [SubscriptionAPI getSubscriptionPriceList v5
        documentation](https://clublead.atlassian.net/wiki/x/XYJtFg)
      parameters:
        - name: centerId
          in: query
          schema:
            type: integer
            format: int32
        - name: productGroupKey
          in: query
          schema:
            type: integer
            format: int32
        - name: onlyAvailableOnWeb
          in: query
          schema:
            type: boolean
        - name: onlyWithPrivileges
          in: query
          schema:
            type: boolean
        - name: targetGroupKeys
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - name: companyAgreementRef
          in: query
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AvailableSubscription'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
    post:
      description: >-
        [SubscriptionAPI getSubscriptionPriceList v5
        documentation](https://clublead.atlassian.net/wiki/x/XYJtFg)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                centerId:
                  type: integer
                  format: int32
                productGroupKey:
                  type: integer
                  format: int32
                onlyAvailableOnWeb:
                  type: boolean
                onlyWithPrivileges:
                  type: boolean
                targetGroupKeys:
                  type: array
                  items:
                    type: integer
                    format: int32
                companyAgreementRef:
                  type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AvailableSubscription'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /subscriptions/getSubscriptionProductsForChangeEFTSubscription:
    post:
      description: >-
        [SubscriptionAPI getSubscriptionProductsForChangeEFTSubscription v5
        documentation](https://clublead.atlassian.net/wiki/x/iwFuFg)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                centerId:
                  type: integer
                  nullable: false
                  format: int32
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                subscriptionKey:
                  $ref: '#/components/schemas/CompositeKey'
                onlyAvailableOnWeb:
                  type: boolean
                  nullable: false
                campaignCode:
                  type: string
                subscriptionChangeType:
                  $ref: '#/components/schemas/SubscriptionChangeType'
              required:
                - centerId
                - personKey
                - onlyAvailableOnWeb
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AvailableSubscription'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /subscriptions/getSuggestedTerminationDates:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetSuggestedTerminationDatesPrameters'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  suggestedTerminationDates:
                    $ref: '#/components/schemas/List'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /subscriptions/sellAddOns:
    post:
      description: >-
        [SubscriptionAPI sellAddOns v5
        documentation](https://clublead.atlassian.net/wiki/x/boJuFg)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                subscriptionKey:
                  $ref: '#/components/schemas/CompositeKey'
                startDate:
                  type: string
                addOnProductRequests:
                  type: array
                  items:
                    $ref: '#/components/schemas/AddOnProductRequest'
                paymentInfo:
                  $ref: '#/components/schemas/PaymentInfo'
              required:
                - subscriptionKey
                - startDate
                - addOnProductRequests
                - paymentInfo
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  invoiceKey:
                    $ref: '#/components/schemas/CompositeKey'
                  invoiceAmount:
                    type: string
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /subscriptions/sellCashSubscription:
    post:
      description: >-
        [SubscriptionAPI sellCashSubscription v5
        documentation](https://clublead.atlassian.net/wiki/x/kAFuFg)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personId:
                  $ref: '#/components/schemas/ApiPersonKey'
                subscriptionProductId:
                  $ref: '#/components/schemas/CompositeKey'
                paymentInfo:
                  $ref: '#/components/schemas/PaymentInfo'
                creationPrice:
                  type: string
                periodStart:
                  type: string
                periodEnd:
                  type: string
                periodPrice:
                  type: string
                overrideAdminFeeProductPrice:
                  type: string
                campaignCode:
                  type: string
                addOnProductRequests:
                  type: array
                  items:
                    $ref: '#/components/schemas/AddOnProductRequest'
                includeInvoiceInResponse:
                  type: boolean
              required:
                - personId
                - subscriptionProductId
                - periodStart
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  invoiceKey:
                    $ref: '#/components/schemas/CompositeKey'
                  invoice:
                    $ref: '#/components/schemas/Invoice'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /subscriptions/sellEFTMembership:
    post:
      description: >-
        [SubscriptionAPI sellEFTMembership v5
        documentation](https://clublead.atlassian.net/wiki/x/6YFsFg)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personId:
                  $ref: '#/components/schemas/ApiPersonKey'
                assignedEmployeePersonKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                subscriptionProductKey:
                  $ref: '#/components/schemas/ApiProductKey'
                paymentInfo:
                  $ref: '#/components/schemas/PaymentInfo'
                startDate:
                  type: string
                overrideCreationProductPrice:
                  type: number
                overrideAdminFeeProductPrice:
                  type: number
                periodPrice:
                  type: number
                addOnProductRequests:
                  type: array
                  items:
                    $ref: '#/components/schemas/AddOnProductRequest'
                campaignCode:
                  type: string
                checkValidAgreement:
                  type: boolean
              required:
                - personId
                - subscriptionProductKey
                - paymentInfo
                - startDate
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  invoiceKey:
                    $ref: '#/components/schemas/CompositeKey'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /subscriptions/sellRecurringClipcardSubscription:
    post:
      description: >-
        [SubscriptionAPI sellRecurringClipcardSubscription v5
        documentation](https://clublead.atlassian.net/wiki/x/PAN-Gw)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                personId:
                  $ref: '#/components/schemas/ApiPersonKey'
                subscriptionProductKey:
                  $ref: '#/components/schemas/ApiProductKey'
                paymentInfo:
                  $ref: '#/components/schemas/PaymentInfo'
                startDate:
                  type: string
                overrideCreationProductPrice:
                  type: number
                overrideAdminFeeProductPrice:
                  type: number
                periodPrice:
                  type: number
                addOnProductRequests:
                  type: array
                  items:
                    $ref: '#/components/schemas/AddOnProductRequest'
                campaignCode:
                  type: string
                checkValidAgreement:
                  type: boolean
                clipSize:
                  type: integer
                  format: int32
                overrideStartupClips:
                  type: integer
                  format: int32
              required:
                - personId
                - subscriptionProductKey
                - paymentInfo
                - startDate
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  invoiceKey:
                    $ref: '#/components/schemas/CompositeKey'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /subscriptions/stopAddOn:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                subscriptionAddonKey:
                  type: integer
                  nullable: false
                  format: int32
                stopDate:
                  type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /subscriptions/stopFreeze:
    post:
      description: >-
        [SubscriptionAPI stopFreeze v5
        documentation](https://clublead.atlassian.net/wiki/x/7oFsFg)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompositeSubKey'
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /subscriptions/stopSubscription:
    post:
      description: >-
        [SubscriptionAPI stopSubscription v5
        documentation](https://clublead.atlassian.net/wiki/x/lQFuFg)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                subscriptionKey:
                  $ref: '#/components/schemas/CompositeKey'
                date:
                  type: string
                cancelUsage:
                  $ref: '#/components/schemas/CancelUsageType'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionStopInfo'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /subscriptions/updateSubscriptionPrice:
    post:
      description: >-
        [SubscriptionAPI updateSubscriptionPrice v5
        documentation](https://clublead.atlassian.net/wiki/x/kYJwFg)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                subscriptionKey:
                  $ref: '#/components/schemas/CompositeKey'
                price:
                  type: string
                binding:
                  type: boolean
                  nullable: false
                fromDate:
                  type: string
                note:
                  type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiSubscriptionPrice'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /subscriptions/validateCampaignCode:
    post:
      description: >-
        [SubscriptionAPI validateCampaignCode v5
        documentation](https://clublead.atlassian.net/wiki/x/qYFrFg)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                center:
                  type: integer
                  nullable: false
                  format: int32
                campaignCode:
                  type: string
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
              required:
                - center
                - campaignCode
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignInformationForPerson'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /vending/getVendingAccountInfo:
    get:
      parameters:
        - name: vendingMachineId
          in: query
          schema:
            type: string
        - name: cardType
          in: query
          schema:
            type: string
            enum:
              - BARCODE
              - MAGNETICCARD
              - MAGNETIC
              - RFCARD
              - RFID
              - PIN
              - ANTIDROWN
              - QRCODE
              - EXTERNAL_SYSTEM
              - APPLE_PASS
        - name: cardId
          in: query
          schema:
            type: string
        - name: maxPurchaseAmount
          in: query
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VendingAccountInfo'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                vendingMachineId:
                  type: string
                cardType:
                  $ref: '#/components/schemas/AccessCardType'
                cardId:
                  type: string
                maxPurchaseAmount:
                  type: string
              required:
                - vendingMachineId
                - cardType
                - cardId
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VendingAccountInfo'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
  /vending/registerVendingSale:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                vendingMachineId:
                  type: string
                cardType:
                  $ref: '#/components/schemas/AccessCardType'
                cardId:
                  type: string
                personKey:
                  $ref: '#/components/schemas/ApiPersonKey'
                selectedProducts:
                  type: array
                  items:
                    $ref: '#/components/schemas/SelectedVendingProduct'
              required:
                - vendingMachineId
                - selectedProducts
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VendingMachineSaleInfo'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
  schemas:
    ARTransactionTableRecord:
      type: object
      properties:
        keyName:
          type: string
        entryTime:
          type: string
        text:
          type: string
        dueDate:
          type: string
        info:
          type: string
        employeeName:
          type: string
        centerName:
          type: string
        deposit:
          type: number
        withdrawn:
          type: number
        balance:
          type: number
        bookTime:
          type: string
    AccessCardType:
      type: string
      enum:
        - BARCODE
        - MAGNETICCARD
        - MAGNETIC
        - RFCARD
        - RFID
        - PIN
        - ANTIDROWN
        - QRCODE
        - EXTERNAL_SYSTEM
        - APPLE_PASS
    AccessPrivilege:
      description: >-
        [API Object AccessPrivilege v5
        documentation](https://clublead.atlassian.net/wiki/x/RoKJFQ)
      type: object
      properties:
        accessGroupId:
          type: integer
          format: int32
        accessGroupName:
          type: string
        privSetId:
          type: integer
          format: int32
        privSetName:
          type: string
        privSetSource:
          type: string
        privSetTimeRestriction:
          $ref: '#/components/schemas/TimeRestriction'
        privSetFrequencyRestriction:
          $ref: '#/components/schemas/FrequencyRestriction'
    AccountOverview:
      description: >-
        [API Object AccountOverview v5
        documentation](https://clublead.atlassian.net/wiki/x/MoGGFQ)
      type: object
      properties:
        totalPayableDebt:
          type: string
        currencyCode:
          type: string
        countryCode:
          type: string
        accounts:
          type: array
          items:
            $ref: '#/components/schemas/AccountOverviewAccount'
        consolidatedInvoices:
          type: array
          items:
            $ref: '#/components/schemas/AccountOverviewConsolidatedInvoice'
    AccountOverviewAccount:
      description: >-
        [API Object AccountOverviewAccount v5
        documentation](https://clublead.atlassian.net/wiki/x/UIKJFQ)
      type: object
      properties:
        accountReceivableType:
          $ref: '#/components/schemas/AccountReceivableType'
        balance:
          type: string
        overdueDebt:
          type: string
        payableDebt:
          type: string
    AccountOverviewConsolidatedInvoice:
      description: >-
        [API Object AccountOverviewConsolidatedInvoice v5
        documentation](https://clublead.atlassian.net/wiki/x/uYGIFQ)
      type: object
      properties:
        openAmount:
          type: string
        isPayable:
          type: boolean
          nullable: false
        originalAmount:
          type: string
        alreadyPaidAmount:
          type: string
        rejectionFeeAmount:
          type: string
        representationFeeAmount:
          type: string
        invoiceDate:
          type: string
        dueDate:
          type: string
        deductionDate:
          type: string
        consolidatedInvoiceKey:
          $ref: '#/components/schemas/CompositeSubKey'
        reference:
          type: string
    AccountReceivableType:
      type: string
      enum:
        - CASH
        - PAYMENT
        - CASHCOLLECTION
        - INSTALLMENTPLAN
    Activity:
      description: >-
        [API Object Activity v5
        documentation](https://clublead.atlassian.net/wiki/x/bAGHFQ)
      type: object
      properties:
        activityId:
          type: integer
          format: int32
        name:
          type: string
        description:
          type: string
        color:
          $ref: '#/components/schemas/ActivityColor'
        colorGroup:
          $ref: '#/components/schemas/ColorGroup'
        activityType:
          $ref: '#/components/schemas/ActivityType'
        group:
          $ref: '#/components/schemas/ActivityGroup'
        waitingListCapacity:
          type: integer
          format: int32
        energyConsumptionKcalPerHour:
          type: integer
          format: int32
        externalId:
          type: string
        seatBooking:
          $ref: '#/components/schemas/SeatBookingType'
    ActivityColor:
      type: string
      enum:
        - WHITE
        - YELLOW
        - GREEN
        - BLUE
        - ORANGE
        - RED
    ActivityGroup:
      description: >-
        [API Object ActivityGroup v5
        documentation](https://clublead.atlassian.net/wiki/x/dAGHFQ)
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        description:
          type: string
        bookableViaAPI:
          type: boolean
        externalId:
          type: string
    ActivityType:
      type: string
      enum:
        - GENERAL
        - CLASS
        - RESOURCE_AVAILABILITY
        - RESOURCE_BOOKING
        - STAFF_AVAILABILITY
        - STAFF_BOOKING
        - CHILD_CARE
        - MEETING
        - COURSE
        - TASK
        - CAMP
        - CAMP_ELECTIVE
        - RESOURCE_MAINTENANCE
    AddFamilyMember:
      type: object
      properties:
        personKey:
          $ref: '#/components/schemas/ApiPersonKey'
        memberType:
          $ref: '#/components/schemas/FamilyMemberType'
        allowCardOnFile:
          $ref: '#/components/schemas/FamilyAllowCardOnFile'
      required:
        - personKey
        - memberType
        - allowCardOnFile
    AddOnProductRequest:
      type: object
      properties:
        addOnProductKey:
          type: integer
          format: int32
        addOnTargetCenter:
          type: integer
          format: int32
        overridePrice:
          type: string
      required:
        - addOnProductKey
    Address:
      description: >-
        [API Object Address v5
        documentation](https://clublead.atlassian.net/wiki/x/b4GHFQ)
      type: object
      properties:
        address1:
          type: string
        address2:
          type: string
        address3:
          type: string
        zip:
          type: string
        zipName:
          type: string
        country:
          type: string
        coName:
          type: string
        county:
          type: string
        province:
          type: string
    AgeGroup:
      type: object
      properties:
        id:
          type: integer
          nullable: false
          format: int32
        name:
          type: string
        minAge:
          $ref: '#/components/schemas/AgeGroupLimit'
        maxAge:
          $ref: '#/components/schemas/AgeGroupLimit'
    AgeGroupLimit:
      type: object
      properties:
        timeUnit:
          $ref: '#/components/schemas/AgeGroupTimeUnit'
        value:
          type: integer
          nullable: false
          format: int32
    AgeGroupTimeUnit:
      type: string
      enum:
        - MONTH
        - YEAR
    AgeRestriction:
      description: >-
        [API Object AgeRestriction v5
        documentation](https://clublead.atlassian.net/wiki/x/2gZSIw)
      type: object
      properties:
        min:
          type: integer
          format: int32
        max:
          type: integer
          format: int32
        minStrict:
          type: boolean
    Answer:
      description: >-
        [API Object Answer v5
        documentation](https://clublead.atlassian.net/wiki/x/WoKJFQ)
      type: object
      properties:
        questionId:
          type: integer
          nullable: false
          format: int32
        text:
          type: string
        selectedOption:
          $ref: '#/components/schemas/SelectedOption'
        selectedOptions:
          type: array
          items:
            $ref: '#/components/schemas/SelectedOption'
      required:
        - questionId
    ApiEmployeeKey:
      type: object
      properties:
        employeeKey:
          type: string
        personKey:
          $ref: '#/components/schemas/ApiPersonKey'
    ApiGender:
      type: string
      enum:
        - MALE
        - FEMALE
        - UNDEFINED
    ApiInvoiceKey:
      type: object
      properties:
        center:
          type: integer
          nullable: false
          format: int32
        id:
          type: integer
          nullable: false
          format: int32
      required:
        - center
        - id
    ApiPersonKey:
      type: object
      properties:
        externalId:
          type: string
        center:
          type: integer
          nullable: false
          format: int32
        id:
          type: integer
          nullable: false
          format: int32
    ApiPriceChange:
      type: object
      properties:
        type:
          type: string
        value:
          type: string
        rounding:
          $ref: '#/components/schemas/ApiRounding'
      required:
        - type
        - value
    ApiProductKey:
      type: object
      properties:
        center:
          type: integer
          nullable: false
          format: int32
        id:
          type: integer
          format: int32
        externalId:
          type: string
      required:
        - center
    ApiRounding:
      type: object
      properties:
        mode:
          type: string
      required:
        - mode
    ApiScopeKey:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ScopeType'
        id:
          type: integer
          format: int32
      required:
        - type
        - id
    ApiSubscriptionChangeInfo:
      type: object
      properties:
        customerChangeFullAmountToPay:
          type: number
        customerChangeNetAmountToPay:
          type: number
        customerChangeVatAmountToPay:
          type: number
        customerChangeFee:
          type: number
        customerPeriodPrice:
          type: number
        customerCreditedAmount:
          type: number
        amountToBeRefunded:
          type: number
        productGlobalName:
          type: string
        subscriptionName:
          type: string
        oldSubscription:
          $ref: '#/components/schemas/Subscription'
    ApiSubscriptionPrice:
      type: object
      properties:
        price:
          type: string
        fromDate:
          type: string
        toDate:
          type: string
        type:
          $ref: '#/components/schemas/SubscriptionPriceType'
        comment:
          type: string
        binding:
          type: boolean
          nullable: false
    ApiUsagePointSourceKey:
      type: object
      properties:
        center:
          type: integer
          format: int32
        externalId:
          type: string
      required:
        - center
        - externalId
    AssignedAddOn:
      type: object
      properties:
        key:
          type: integer
          nullable: false
          format: int32
        name:
          type: string
        price:
          type: string
        pricePeriodLength:
          type: integer
          nullable: false
          format: int32
        pricePeriodUnit:
          $ref: '#/components/schemas/TimeUnit'
        startDate:
          type: string
        endDate:
          type: string
        initialPeriodPrice:
          type: number
        initialPeriodStartDate:
          type: string
        initialPeriodEndDate:
          type: string
        startupCampaignPrice:
          type: string
        startupCampaignEndDate:
          type: string
    AssignedRole:
      description: >-
        [API Object AssignedRole v5
        documentation](https://clublead.atlassian.net/wiki/x/xIGIFQ)
      type: object
      properties:
        roleId:
          type: integer
          nullable: false
          format: int32
        roleName:
          type: string
        scopeKey:
          $ref: '#/components/schemas/ApiScopeKey'
        scopeName:
          type: string
    AttendableResource:
      description: >-
        [API Object AttendableResource v5
        documentation](https://clublead.atlassian.net/wiki/x/4gInIg)
      type: object
      properties:
        resource:
          $ref: '#/components/schemas/Resource'
        usageInformation:
          $ref: '#/components/schemas/UsageInformation'
    AvailableActivity:
      description: >-
        [API Object AvailableActivity v5
        documentation](https://clublead.atlassian.net/wiki/x/yoGIFQ)
      type: object
      properties:
        activityId:
          type: integer
          format: int32
        name:
          type: string
        description:
          type: string
        colorGroup:
          $ref: '#/components/schemas/ColorGroup'
        activityGroup:
          $ref: '#/components/schemas/ActivityGroup'
        resourceGroupExternalIds:
          type: array
          items:
            type: string
        allowedDurations:
          type: array
          items:
            type: string
        courseConfiguration:
          $ref: '#/components/schemas/CourseConfiguration'
        ageGroup:
          $ref: '#/components/schemas/AgeGroup'
        activityType:
          $ref: '#/components/schemas/ActivityType'
    AvailableAddOnProduct:
      description: >-
        [API Object AvailableAddOnProduct v5
        documentation](https://clublead.atlassian.net/wiki/x/lwGKFQ)
      type: object
      properties:
        productKey:
          type: integer
          nullable: false
          format: int32
        name:
          type: string
        price:
          type: string
        pricePeriodLength:
          type: integer
          nullable: false
          format: int32
        pricePeriodUnit:
          $ref: '#/components/schemas/TimeUnit'
        required:
          type: boolean
          nullable: false
        comment:
          type: string
        campaignPrice:
          type: string
        campaignSource:
          type: string
        campaignText:
          type: string
        validTo:
          type: string
        periodPriceSource:
          type: string
        periodPriceText:
          type: string
        bindingPeriodLength:
          type: integer
          nullable: false
          format: int32
        bindingPeriodUnit:
          $ref: '#/components/schemas/TimeUnit'
        productGroups:
          $ref: '#/components/schemas/List'
        scopeSelection:
          $ref: '#/components/schemas/ScopeSelection'
        webname:
          type: string
        description:
          type: string
        webSalesRank:
          type: integer
          format: int32
        sellingPoints:
          $ref: '#/components/schemas/List'
    AvailableApplyStep:
      type: object
      properties:
        applyStepId:
          type: integer
          nullable: false
          format: int32
        name:
          type: string
        parameters:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              value:
                type: string
            required:
              - name
              - value
    AvailableClipSizes:
      type: object
      properties:
        clipSize:
          type: array
          items:
            type: integer
            format: int32
    AvailableClipcard:
      description: >-
        [API Object AvailableClipcard v5
        documentation](https://clublead.atlassian.net/wiki/x/TIGGFQ)
      type: object
      properties:
        productId:
          $ref: '#/components/schemas/CompositeKey'
        name:
          type: string
        price:
          type: string
        normalPrice:
          type: string
        sponsoredAmount:
          type: string
        clips:
          type: integer
          format: int32
        validPeriodLength:
          type: integer
          format: int32
        validPeriodLengthUnit:
          $ref: '#/components/schemas/TimeUnit'
        productGroups:
          type: array
          items:
            $ref: '#/components/schemas/ProductGroup'
        availableInstallmentPlanConfigs:
          type: array
          items:
            $ref: '#/components/schemas/InstallmentPlanConfig'
        campaignText:
          type: string
        externalId:
          type: string
        webname:
          type: string
        description:
          type: string
        sellingPoints:
          $ref: '#/components/schemas/List'
        rank:
          type: integer
          format: int32
        availableClipSizes:
          $ref: '#/components/schemas/AvailableClipSizes'
    AvailableExtract:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        parameters:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              type:
                $ref: '#/components/schemas/AvailableExtractParameterType'
    AvailableExtractParameterType:
      type: string
      enum:
        - BOOLEAN
        - CENTER
        - DATE
        - NUMBER_ALLOW_NEGATIVE
        - PERCENTAGE
        - NUMBER
        - LONG_DATE
        - PRICE
        - SCOPE
        - TEXT_FIELD
        - LONG_TEXT
        - TEXT
        - GLOBAL_SUBSCRIPTION_TYPES
        - LOCAL_SUBSCRIPTION_TYPES
        - SUBSCRIPTION_STATE
        - PERSONSTATUS_LIST
        - PERSON_TYPE
        - KEY_LIST
        - LIST
        - UQ_LIST
        - MC_LIST
        - INTEGER
        - INTEGER_OPTIONS_MULTIPLE
        - INTEGER_OPTIONS_SINGLE
        - SUBSCRIPTION_ADDON
        - KEY_SINGLE
        - KEY_MULTIPLE
        - STRING_OPTIONS_SINGLE
        - STRING_OPTIONS_MULTIPLE
        - STRING_MULTIPLE
        - LONG_DATE_TIME
    AvailableFreeze:
      description: >-
        [API Object AvailableFreeze v5
        documentation](https://clublead.atlassian.net/wiki/x/tAGIFQ)
      type: object
      properties:
        subscriptionId:
          $ref: '#/components/schemas/CompositeKey'
        freezeStartProduct:
          $ref: '#/components/schemas/Product'
        freezeMinimumDuration:
          type: integer
          format: int32
        freezeMaximumDuration:
          type: integer
          format: int32
        freezePeriodUnit:
          type: string
        freezePeriodPrice:
          type: string
        freezePeriodNumberOfUnits:
          type: integer
          format: int32
        freezeMaximumDurationUnit:
          type: string
        freezeMinimumDurationUnit:
          type: string
        allowedFreezeCount:
          type: integer
          format: int32
        allowedFreezeWithinPeriod:
          type: integer
          format: int32
    AvailableGiftCardProduct:
      type: object
      properties:
        productKey:
          $ref: '#/components/schemas/CompositeKey'
        name:
          type: string
        isFreeGiftCard:
          type: boolean
          nullable: false
    AvailableLanguagesForMembersResponse:
      type: object
      properties:
        languages:
          $ref: '#/components/schemas/List'
    AvailablePrivilege:
      description: >-
        [API Object AvailablePrivilege v5
        documentation](https://clublead.atlassian.net/wiki/x/wAGJFQ)
      type: object
      properties:
        privilegeSet:
          $ref: '#/components/schemas/PrivilegeSet'
        privilegeSetSource:
          type: string
        privSetTimeRestriction:
          $ref: '#/components/schemas/TimeRestriction'
        privSetFreqRestriction:
          $ref: '#/components/schemas/FrequencyRestriction'
        remainingUsagesForFrequencyPeriod:
          type: integer
          format: int32
    AvailableRetentionCampaign:
      type: object
      properties:
        campaignId:
          type: integer
          format: int32
        name:
          type: string
        description:
          type: string
        privilegeEndDate:
          type: string
        privilegeStartDate:
          type: string
        subscriptionPeriodPrice:
          type: string
    AvailableRoles:
      type: object
      properties:
        roles:
          type: array
          items:
            $ref: '#/components/schemas/Role'
    AvailableSalutationsResponse:
      type: object
      properties:
        centersWithSalutations:
          $ref: '#/components/schemas/List'
    AvailableScopeSubscriptions:
      type: object
      properties:
        centerId:
          type: integer
          format: int32
        availableSubscriptions:
          type: array
          items:
            $ref: '#/components/schemas/AvailableSubscription'
    AvailableSubscription:
      description: >-
        [API Object AvailableSubscription v5
        documentation](https://clublead.atlassian.net/wiki/x/oAGKFQ)
      type: object
      properties:
        productId:
          $ref: '#/components/schemas/CompositeKey'
        name:
          type: string
        externalId:
          type: string
        creationPrice:
          type: string
        creationSponseredAmount:
          type: string
        periodLength:
          type: integer
          format: int32
        periodUnit:
          $ref: '#/components/schemas/TimeUnit'
        periodPrice:
          type: string
        periodSponseredAmount:
          type: string
        bindingPeriodLength:
          type: integer
          format: int32
        product:
          $ref: '#/components/schemas/SubscriptionProduct'
        proRataPrice:
          type: string
        proRataSponsoredAmount:
          type: string
        availableAddOnProducts:
          type: array
          items:
            $ref: '#/components/schemas/AvailableAddOnProduct'
        creationNormalPrice:
          type: string
        periodNormalPrice:
          type: string
        campaignPrice:
          type: string
        campaignSponsoredAmount:
          type: string
        campaignSource:
          type: string
        campaignText:
          type: string
        campaignStartDate:
          type: string
        campaignEndDate:
          type: string
        periodPriceSource:
          type: string
        periodPriceText:
          type: string
        creationPriceSource:
          type: string
        creationPriceText:
          type: string
        adminFeePrice:
          $ref: '#/components/schemas/ProductPrice'
        availableFreeze:
          $ref: '#/components/schemas/AvailableFreeze'
        periodPriceSourceEndDate:
          type: string
        periodPriceSourceType:
          $ref: '#/components/schemas/PeriodPriceSourceType'
        recurringClipcardDetails:
          $ref: '#/components/schemas/RecurringClipcardDetails'
        productGroups:
          type: array
          items:
            $ref: '#/components/schemas/ProductGroup'
        subscriptionChangeType:
          $ref: '#/components/schemas/SubscriptionChangeType'
        startupCampaignFreePeriodInfo:
          $ref: '#/components/schemas/StartupCampaignFreePeriodInfo'
        paymentOptions:
          $ref: '#/components/schemas/List'
        clearingHouseTypeRestriction:
          $ref: '#/components/schemas/SubscriptionClearingHouseTypeRestriction'
    AvailableTrainingInterval:
      description: >-
        [API Object AvailableTrainingInterval v5
        documentation](https://clublead.atlassian.net/wiki/x/cAGGFQ)
      type: object
      properties:
        intructorKey:
          $ref: '#/components/schemas/ApiPersonKey'
        instructor:
          $ref: '#/components/schemas/PersonSimple'
        startTime:
          type: string
        stopTime:
          type: string
    BankInfo:
      description: >-
        [API Object BankInfo v5
        documentation](https://clublead.atlassian.net/wiki/x/04GIFQ)
      type: object
      properties:
        bankRegNumber:
          type: string
        branchNumber:
          type: string
        bankName:
          type: string
        accountNumber:
          type: string
        controlDigits:
          type: string
        extraInfo:
          type: string
        accountHolder:
          type: string
        iban:
          type: string
        bic:
          type: string
        accountType:
          type: string
    Booking:
      description: >-
        [API Object Booking v5
        documentation](https://clublead.atlassian.net/wiki/x/fQGHFQ)
      type: object
      properties:
        bookingId:
          $ref: '#/components/schemas/CompositeKey'
        name:
          type: string
        description:
          type: string
        streamingId:
          type: string
        date:
          type: string
        startTime:
          type: string
        endTime:
          type: string
        instructorNames:
          type: array
          items:
            type: string
        instructors:
          type: array
          items:
            $ref: '#/components/schemas/PersonSimple'
        roomNames:
          type: array
          items:
            type: string
        classCapacity:
          type: integer
          format: int32
        bookedCount:
          type: integer
          format: int32
        waitingListCount:
          type: integer
          format: int32
        hexColor:
          type: string
        activity:
          $ref: '#/components/schemas/Activity'
        energyConsumptionKcal:
          type: number
        externalId:
          type: string
        ageRestriction:
          $ref: '#/components/schemas/AgeRestriction'
        bookingProgramId:
          type: integer
          format: int32
        bookingProgramName:
          type: string
        webRoomNames:
          type: array
          items:
            type: string
    BookingDetails:
      type: object
      properties:
        bookingId:
          $ref: '#/components/schemas/CompositeKey'
        name:
          type: string
        description:
          type: string
        streamingId:
          type: string
        date:
          type: string
        startTime:
          type: string
        endTime:
          type: string
        instructors:
          $ref: '#/components/schemas/Collection'
        resources:
          $ref: '#/components/schemas/List'
        classCapacity:
          type: integer
          format: int32
        bookedCount:
          type: integer
          format: int32
        waitingListCount:
          type: integer
          format: int32
        hexColor:
          type: string
        activity:
          $ref: '#/components/schemas/Activity'
        energyConsumptionKcal:
          type: number
        externalId:
          type: string
        ageRestriction:
          $ref: '#/components/schemas/AgeRestriction'
        bookingProgramId:
          type: integer
          format: int32
        bookingProgramName:
          type: string
        participations:
          $ref: '#/components/schemas/List'
        customAttributes:
          $ref: '#/components/schemas/List'
        additionalInfo:
          type: string
    BookingFrequency:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/BookingFrequencyType'
        interval:
          type: integer
          nullable: false
          format: int32
        weekdays:
          type: array
          items:
            $ref: '#/components/schemas/WeekDay'
        monthlyRecurrenceType:
          $ref: '#/components/schemas/MonthlyRecurrenceType'
      required:
        - type
        - interval
    BookingFrequencyType:
      type: string
      enum:
        - Daily
        - Weekly
        - Monthly
    BookingProgramParticipationState:
      type: string
      enum:
        - ALL
        - PLANNED
        - AVAILABLE
        - ACTIVE
    BookingRecurrence:
      type: object
      properties:
        endDate:
          type: string
        frequency:
          $ref: '#/components/schemas/BookingFrequency'
      required:
        - endDate
        - frequency
    BusinessSchedule:
      description: >-
        [API Object BusinessSchedule v5
        documentation](https://clublead.atlassian.net/wiki/x/VYGFFQ)
      type: object
      properties:
        businessDays:
          type: array
          items:
            $ref: '#/components/schemas/Interval'
        weekendAndHolidays:
          type: array
          items:
            $ref: '#/components/schemas/Interval'
    CampBookingParticipant:
      type: object
      properties:
        participantKey:
          $ref: '#/components/schemas/ApiPersonKey'
        bookingKeys:
          type: array
          items:
            $ref: '#/components/schemas/CompositeKey'
      required:
        - participantKey
        - bookingKeys
    CampParticipation:
      type: object
      properties:
        bookingProgramId:
          type: integer
          format: int32
        installmentPlanConfigExternalId:
          type: string
        participants:
          type: array
          items:
            $ref: '#/components/schemas/CampBookingParticipant'
      required:
        - bookingProgramId
        - participants
    CampaignInformationForPerson:
      type: object
      properties:
        activeCampaign:
          type: boolean
          nullable: false
        dateInterval:
          $ref: '#/components/schemas/Interval'
        id:
          type: integer
          nullable: false
          format: int32
        name:
          type: string
        webText:
          type: string
        personPastUsages:
          type: integer
          nullable: false
          format: int32
        usageLimit:
          type: integer
          nullable: false
          format: int32
        exists:
          type: boolean
          nullable: false
        valid:
          type: boolean
          nullable: false
    CancelUsageType:
      type: string
      enum:
        - CHECK
        - CANCEL
        - IGNORE
    Center:
      description: >-
        [API Object Center v5
        documentation](https://clublead.atlassian.net/wiki/x/yAGJFQ)
      type: object
      properties:
        centerId:
          type: integer
          format: int32
        name:
          type: string
        webName:
          type: string
        shortName:
          type: string
        address:
          $ref: '#/components/schemas/Address'
    CenterAccessPrivilege:
      type: object
      properties:
        clubId:
          type: integer
          format: int32
        clubName:
          type: string
        accessPrivileges:
          type: array
          items:
            $ref: '#/components/schemas/AccessPrivilege'
    CenterCapacityInfo:
      description: >-
        [API Object CenterCapacityInfo v5
        documentation](https://clublead.atlassian.net/wiki/x/6YENNg)
      type: object
      properties:
        centerId:
          type: integer
          format: int32
        currentlyCheckedInCount:
          type: integer
          format: int32
        maximumAllowedCheckedIn:
          type: integer
          format: int32
        numberOfAvailableSpots:
          type: integer
          format: int32
        numberOfReservedSpots:
          type: integer
          format: int32
    CenterDetail:
      description: >-
        [API Object CenterDetail v5
        documentation](https://clublead.atlassian.net/wiki/x/uwGIFQ)
      type: object
      properties:
        centerId:
          type: integer
          format: int32
        name:
          type: string
        webName:
          type: string
        shortName:
          type: string
        address:
          $ref: '#/components/schemas/Address'
        websiteURL:
          type: string
        phoneNumber:
          type: string
        faxNumber:
          type: string
        email:
          type: string
        coordinate:
          $ref: '#/components/schemas/Coordinate'
        organizationCode:
          type: string
        timeZone:
          type: string
        startupDate:
          type: string
        externalId:
          type: string
        facilityUrl:
          type: string
        generalManager:
          $ref: '#/components/schemas/CenterEmployee'
        assistantManager:
          $ref: '#/components/schemas/CenterEmployee'
        extendedAttributes:
          type: array
          items:
            $ref: '#/components/schemas/ExtendedAttribute'
        openingSchedule:
          $ref: '#/components/schemas/Schedule'
        centerStaffedSchedule:
          $ref: '#/components/schemas/Schedule'
    CenterEmployee:
      description: >-
        [API Object CenterEmployee v5
        documentation](https://clublead.atlassian.net/wiki/x/YYKJFQ)
      type: object
      properties:
        email:
          type: string
        fullName:
          type: string
        personKey:
          $ref: '#/components/schemas/ApiPersonKey'
    CenterPresence:
      type: object
      properties:
        personId:
          $ref: '#/components/schemas/ApiPersonKey'
        center:
          type: integer
          nullable: false
          format: int32
        date:
          type: string
        startTime:
          type: string
        stopTime:
          type: string
        type:
          $ref: '#/components/schemas/CenterPresenceType'
        status:
          type: string
        roomResource:
          type: string
    CenterPresenceType:
      type: string
      enum:
        - ATTEND
        - CHECKIN
    ChangeEFTSubscriptionDetails:
      type: object
      properties:
        subscriptionTypeKey:
          $ref: '#/components/schemas/CompositeKey'
        subscriptionName:
          type: string
        changeFullAmountToPay:
          type: number
        productGlobalName:
          type: string
        oldSubscription:
          $ref: '#/components/schemas/Subscription'
        addons:
          $ref: '#/components/schemas/Collection'
        campaignPrice:
          type: number
        campaignSource:
          type: string
        campaignText:
          type: string
        campaignStartDate:
          type: string
        campaignEndDate:
          type: string
    Child:
      description: >-
        [API Object Child v5
        documentation](https://clublead.atlassian.net/wiki/x/_gKFFg)
      type: object
      properties:
        key:
          $ref: '#/components/schemas/ApiPersonKey'
        firstName:
          type: string
        lastName:
          type: string
        ssn:
          type: string
        homePhone:
          type: string
        mobilePhone:
          type: string
        email:
          type: string
        birthDate:
          type: string
        gender:
          $ref: '#/components/schemas/ApiGender'
    ChildCareActivity:
      type: object
      properties:
        key:
          type: integer
          format: int32
        name:
          type: string
        description:
          type: string
    ChildCareAvailability:
      type: object
      properties:
        availableActivity:
          $ref: '#/components/schemas/ChildCareActivity'
        availableIntervals:
          type: array
          items:
            $ref: '#/components/schemas/Interval'
    ChildCareBooking:
      type: object
      properties:
        key:
          $ref: '#/components/schemas/CompositeKey'
        date:
          type: string
        startTime:
          type: string
        endTime:
          type: string
        childCareActivity:
          $ref: '#/components/schemas/ChildCareActivity'
    ClearingHouse:
      type: object
      properties:
        clearingHouseExternalId:
          type: string
        clearingHouseName:
          type: string
        clearingHouseType:
          type: string
        paymentType:
          $ref: '#/components/schemas/ClearingHouseType'
        paymentCycles:
          $ref: '#/components/schemas/List'
    ClearingHouseType:
      type: string
      enum:
        - EFT
        - INVOICE
        - CREDIT_CARD
    Clipcard:
      description: >-
        [API Object Clipcard v5
        documentation](https://clublead.atlassian.net/wiki/x/GYCPFg)
      type: object
      properties:
        clipcardId:
          $ref: '#/components/schemas/CompositeSubKey'
        personId:
          $ref: '#/components/schemas/ApiPersonKey'
        mainSubscriptionId:
          $ref: '#/components/schemas/CompositeKey'
        productId:
          $ref: '#/components/schemas/ApiProductKey'
        clipcardTypeName:
          type: string
        invoiceLineId:
          $ref: '#/components/schemas/CompositeSubKey'
        invoiceLineExternalId:
          type: string
        clipsInitial:
          type: integer
          format: int32
        clipsLeft:
          type: integer
          format: int32
        finished:
          type: boolean
          nullable: false
        cancelled:
          type: boolean
          nullable: false
        blocked:
          type: boolean
          nullable: false
        validUntilDate:
          type: string
        assignedStaffGroup:
          type: integer
          format: int32
        assignedStaffKey:
          $ref: '#/components/schemas/ApiPersonKey'
        assignedStaffFullName:
          type: string
        product:
          $ref: '#/components/schemas/ClipcardProduct'
    ClipcardCreditDetails:
      type: object
      properties:
        clipcardName:
          type: string
        clipsLeft:
          type: integer
          format: int32
        clipsValue:
          type: string
        sponsorValue:
          type: string
        buyoutFeeName:
          type: string
        buyoutFeePrice:
          type: string
        buyoutFeeCustomerPrice:
          type: string
        buyoutFeeSponsorPrice:
          type: string
    ClipcardProduct:
      type: object
      properties:
        globalId:
          type: string
        name:
          type: string
        externalId:
          type: string
        webname:
          type: string
        description:
          type: string
        rank:
          type: integer
          format: int32
        sellingPoints:
          $ref: '#/components/schemas/List'
    Collection:
      type: object
    ColorGroup:
      description: >-
        [API Object ColorGroup v5
        documentation](https://clublead.atlassian.net/wiki/x/swGKFQ)
      type: object
      properties:
        name:
          type: string
        colorGroupId:
          type: integer
          format: int32
        hexColor:
          type: string
    Company:
      description: >-
        [API Object Company v5
        documentation](https://clublead.atlassian.net/wiki/x/T4BwFg)
      type: object
      properties:
        companyId:
          $ref: '#/components/schemas/CompositeKey'
        cbrId:
          type: string
        address:
          $ref: '#/components/schemas/Address'
        name:
          type: string
        comment:
          type: string
        createdById:
          $ref: '#/components/schemas/ApiPersonKey'
        contactPersonId:
          $ref: '#/components/schemas/ApiPersonKey'
        motherCompanyId:
          $ref: '#/components/schemas/CompositeKey'
        keyAccountManagerId:
          $ref: '#/components/schemas/ApiPersonKey'
        paymentType:
          $ref: '#/components/schemas/CompanyPaymentType'
        invoiceType:
          $ref: '#/components/schemas/CompanyInvoiceType'
        numberOfEmployees:
          type: integer
          format: int32
        invoiceAddress:
          $ref: '#/components/schemas/Address'
        nextInvoiceDate:
          type: string
        contactPersonWorkPhone:
          type: string
        contactPersonEmail:
          type: string
        contactPersonName:
          type: string
        keyAccountManagerName:
          type: string
        keyAccountManagerPhone:
          type: string
        keyAccountManagerEmail:
          type: string
        extendedAttributes:
          type: array
          items:
            $ref: '#/components/schemas/ExtendedAttribute'
      required:
        - companyId
        - address
        - name
    CompanyAgreement:
      description: >-
        [API Object CompanyAgreement v5
        documentation](https://clublead.atlassian.net/wiki/x/gwBwFg)
      type: object
      properties:
        companyAgreementId:
          $ref: '#/components/schemas/CompositeSubKey'
        name:
          type: string
        state:
          $ref: '#/components/schemas/CompanyAgreementStateType'
        contactPerson:
          $ref: '#/components/schemas/ApiPersonKey'
        ref:
          type: string
        documentationRequired:
          type: boolean
        validity:
          type: integer
          format: int32
        validityUnit:
          $ref: '#/components/schemas/TimeUnit'
        companyKey:
          $ref: '#/components/schemas/CompositeKey'
        availabilityCenters:
          type: array
          items:
            $ref: '#/components/schemas/Center'
        privilegeSets:
          type: array
          items:
            $ref: '#/components/schemas/PrivilegeSetAndSponsorship'
        employeeNumberRequired:
          type: boolean
        allowedCorporateRelationTypes:
          type: array
          items:
            $ref: '#/components/schemas/CorporateRelationType'
        maximumFamilyMembers:
          type: integer
          format: int32
        requiresOtherPayer:
          type: boolean
      required:
        - companyAgreementId
        - ref
        - documentationRequired
        - companyKey
        - employeeNumberRequired
    CompanyAgreementPerson:
      type: object
      properties:
        personKey:
          $ref: '#/components/schemas/ApiPersonKey'
        fullName:
          type: string
        documentationStatusType:
          $ref: '#/components/schemas/PersonDocumentationStatusType'
        expirationDate:
          type: string
        personStatus:
          $ref: '#/components/schemas/PersonStatus'
        subscriptions:
          type: array
          items:
            $ref: '#/components/schemas/CompanyAgreementSubscription'
    CompanyAgreementStateType:
      type: string
      enum:
        - UNDERTARGET
        - ACTIVE
        - STOPNEW
        - OLD
        - AWAITING_ACTIVATION
        - BLOCKED
        - DELETED
    CompanyAgreementSubscription:
      type: object
      properties:
        key:
          $ref: '#/components/schemas/CompositeKey'
        name:
          type: string
        state:
          $ref: '#/components/schemas/SubscriptionState'
        subState:
          $ref: '#/components/schemas/SubscriptionSubState'
        startDate:
          type: string
        endDate:
          type: string
    CompanyInvoiceType:
      type: string
      enum:
        - SPECIFIED
        - UNSPECIFIED
    CompanyPaymentType:
      type: string
      enum:
        - INVOICE
        - EFT
        - CREDIT_CARD
    CompositeKey:
      type: object
      properties:
        center:
          type: integer
          nullable: false
          format: int32
        id:
          type: integer
          nullable: false
          format: int32
      required:
        - center
        - id
    CompositeKeyImpl:
      type: object
      properties:
        center:
          type: integer
          nullable: false
          format: int32
        id:
          type: integer
          nullable: false
          format: int32
    CompositeSubKey:
      type: object
      properties:
        subId:
          type: integer
          nullable: false
          format: int32
        center:
          type: integer
          nullable: false
          format: int32
        id:
          type: integer
          nullable: false
          format: int32
      required:
        - subId
        - center
        - id
    Coordinate:
      description: >-
        [API Object Coordinate v5
        documentation](https://clublead.atlassian.net/wiki/x/UgBvFg)
      type: object
      properties:
        longitude:
          type: number
          nullable: false
          format: double
        latitude:
          type: number
          nullable: false
          format: double
    CorporateRelationType:
      type: string
      enum:
        - EMPLOYEE
        - FAMILY_OF_EMPLOYEE
        - OTHER
    CourseConfiguration:
      description: >-
        [API Object CourseConfiguration v5
        documentation](https://clublead.atlassian.net/wiki/x/hIBmI)
      type: object
      properties:
        courseType:
          $ref: '#/components/schemas/CourseType'
        courseLevel:
          $ref: '#/components/schemas/CourseLevel'
        courseScheduleType:
          $ref: '#/components/schemas/CourseScheduleType'
    CourseDetail:
      type: object
      properties:
        id:
          type: integer
          nullable: false
          format: int32
        center:
          type: integer
          nullable: false
          format: int32
        bookingId:
          $ref: '#/components/schemas/CompositeKey'
        name:
          type: string
        startDate:
          type: string
        stopDate:
          type: string
        activity:
          $ref: '#/components/schemas/AvailableActivity'
        courseParticipationStatus:
          $ref: '#/components/schemas/CourseParticipationStatus'
        timeIntervals:
          $ref: '#/components/schemas/Collection'
        weekdays:
          $ref: '#/components/schemas/Collection'
        instructors:
          $ref: '#/components/schemas/Collection'
        ageRestriction:
          $ref: '#/components/schemas/AgeRestriction'
    CourseLevel:
      description: >-
        [API Object CourseLevel v5
        documentation](https://clublead.atlassian.net/wiki/x/OgFlI)
      type: object
      properties:
        id:
          type: integer
          nullable: false
          format: int32
        name:
          type: string
    CourseParticipationStatus:
      type: object
      properties:
        capacity:
          type: integer
          format: int32
        booked:
          type: integer
          nullable: false
          format: int32
    CourseScheduleType:
      type: string
      enum:
        - FIXED
        - CONTINUOUS
    CourseSearchRequest:
      type: object
      properties:
        centerId:
          type: integer
          nullable: false
          format: int32
        startDateFrom:
          type: string
        startDateTo:
          type: string
        courseTypeId:
          type: integer
          format: int32
        courseLevelId:
          type: integer
          format: int32
        ageGroupId:
          type: integer
          format: int32
        activityId:
          type: integer
          format: int32
        weekday:
          type: string
        searchTime:
          type: string
        instructorKey:
          $ref: '#/components/schemas/ApiPersonKey'
        participationState:
          type: string
        semesterKey:
          type: integer
          format: int32
      required:
        - startDateFrom
        - startDateTo
    CourseSearchResponse:
      type: object
      properties:
        courseDetails:
          $ref: '#/components/schemas/Collection'
    CourseSubscriptionContractSummary:
      type: object
      properties:
        productKey:
          $ref: '#/components/schemas/ApiProductKey'
        name:
          type: string
        startDate:
          type: string
        endDate:
          type: string
        bindingPeriodLength:
          type: integer
          format: int32
        bindingEndDate:
          type: string
        creationPrice:
          type: string
        creationSponseredAmount:
          type: string
        creationNormalPrice:
          type: string
        creationPriceSource:
          type: string
        creationPriceText:
          type: string
        initialPeriodStartDate:
          type: string
        initialPeriodEndDate:
          type: string
        initialPeriodNormalPrice:
          type: string
        initialPeriodPrice:
          type: string
        initialPeriodCampaignSource:
          type: string
        initialCourseBookingCount:
          type: string
        periodLength:
          type: integer
          format: int32
        periodUnit:
          type: integer
          format: int32
        normalPeriodPrice:
          type: string
        normalPeriodSponseredAmount:
          type: string
        normalPeriodPriceSource:
          type: string
        normalPeriodPriceText:
          type: string
        product:
          $ref: '#/components/schemas/SubscriptionProduct'
        startupCampaignPrice:
          type: string
        startupCampaignStartDate:
          type: string
        startupCampaignEndDate:
          type: string
        startupCampaignSource:
          type: string
        startupCampaignText:
          type: string
        adminFeePrice:
          type: string
        proRataPrice:
          type: string
        proRataSponsoredAmount:
          type: string
        proRataCourseBookingCount:
          type: string
        firstDeductionAmount:
          type: string
        firstDeductionDate:
          type: string
        firstDeductionPeriodStartDate:
          type: string
        firstDeductionPeriodEndDate:
          type: string
        availableAddOnProducts:
          $ref: '#/components/schemas/Collection'
        totalAmount:
          type: string
        periodPriceSourceType:
          $ref: '#/components/schemas/PeriodPriceSourceType'
        periodPriceSourceEndDate:
          type: string
        courseInfo:
          $ref: '#/components/schemas/SummaryCourseInfo'
    CourseType:
      description: >-
        [API Object CourseType v5
        documentation](https://clublead.atlassian.net/wiki/x/_ABkI)
      type: object
      properties:
        id:
          type: integer
          nullable: false
          format: int32
        name:
          type: string
    CourtActivity:
      description: >-
        [API Object CourtActivity v5
        documentation](https://clublead.atlassian.net/wiki/x/q4BvFg)
      type: object
      properties:
        key:
          type: integer
          nullable: false
          format: int32
        name:
          type: string
        color:
          $ref: '#/components/schemas/ActivityColor'
        durations:
          type: array
          items:
            type: integer
            nullable: false
            format: int32
        description:
          type: string
        activityGroupKey:
          type: integer
          format: int32
    CourtBooking:
      description: >-
        [API Object CourtBooking v5
        documentation](https://clublead.atlassian.net/wiki/x/1ABwFg)
      type: object
      properties:
        key:
          $ref: '#/components/schemas/CompositeKey'
        date:
          type: string
        startTime:
          type: string
        endTime:
          type: string
        courtActivity:
          $ref: '#/components/schemas/CourtActivity'
    CourtResource:
      type: object
      properties:
        key:
          $ref: '#/components/schemas/CompositeKey'
        name:
          type: string
        webName:
          type: string
    CreateCustomJournalDocumentResponse:
      type: object
      properties:
        journalDocumentId:
          type: integer
          format: int32
    CreateOrUpdateParticipationParams:
      type: object
      properties:
        bookingOwnerPersonId:
          $ref: '#/components/schemas/ApiPersonKey'
        bookingId:
          $ref: '#/components/schemas/CompositeKey'
        userInterfaceType:
          $ref: '#/components/schemas/UserInterfaceType'
        participants:
          type: array
          items:
            $ref: '#/components/schemas/Participant'
        productToPurchaseKey:
          $ref: '#/components/schemas/CompositeKey'
        sendConfirmationMessage:
          type: boolean
        paymentInfo:
          $ref: '#/components/schemas/PaymentInfo'
      required:
        - bookingOwnerPersonId
        - bookingId
        - userInterfaceType
        - participants
    CreateOrUpdateParticipationTentativeParams:
      type: object
      properties:
        bookingOwnerPersonId:
          $ref: '#/components/schemas/ApiPersonKey'
        bookingId:
          $ref: '#/components/schemas/CompositeKey'
        userInterfaceType:
          $ref: '#/components/schemas/UserInterfaceType'
        participants:
          type: array
          items:
            $ref: '#/components/schemas/Participant'
      required:
        - bookingOwnerPersonId
        - bookingId
        - userInterfaceType
        - participants
    CreatePersonDetails:
      type: object
      properties:
        person:
          $ref: '#/components/schemas/Person'
        personCommunication:
          $ref: '#/components/schemas/PersonCommunication'
        password:
          type: string
        pincode:
          type: string
        extendedAttributes:
          type: array
          items:
            $ref: '#/components/schemas/ExtendedAttribute'
        extendedAttributeMIMEs:
          type: array
          items:
            $ref: '#/components/schemas/ExtendedAttributeMIME'
    CreateThirdPartyPaymentAgreementResponse:
      type: object
      properties:
        reference:
          type: string
    CreditCardPaymentInfo:
      description: >-
        [API Object CreditCardPaymentInfo v5
        documentation](https://clublead.atlassian.net/wiki/x/LQGVFg)
      type: object
      properties:
        createAgreement:
          type: boolean
          nullable: false
        cardDetailsEncrypted:
          type: string
        replacePaymentAgreementKey:
          $ref: '#/components/schemas/CompositeSubKey'
    CreditNote:
      type: object
      properties:
        key:
          $ref: '#/components/schemas/CompositeKey'
        invoiceKey:
          $ref: '#/components/schemas/CompositeKey'
        center:
          $ref: '#/components/schemas/Center'
        totalAmount:
          type: string
        totalVat:
          type: string
        transactionTime:
          type: string
        employeeKey:
          $ref: '#/components/schemas/CompositeKey'
        employeeName:
          type: string
        headerText:
          type: string
        comment:
          type: string
        lines:
          $ref: '#/components/schemas/List'
        cashRegisterTransactions:
          $ref: '#/components/schemas/List'
    CustomJournalDocumentTypeResponse:
      type: object
      properties:
        customJournalDocumentTypes:
          $ref: '#/components/schemas/Collection'
    CustomerType:
      type: string
      enum:
        - Company
        - Person
    DailySchedule:
      description: >-
        [API Object DailySchedule v5
        documentation](https://clublead.atlassian.net/wiki/x/2QBwFg)
      type: object
      properties:
        daily:
          type: array
          items:
            $ref: '#/components/schemas/Interval'
    DeactivateMemberCardResponse:
      type: object
      properties:
        memberCards:
          $ref: '#/components/schemas/List'
    DocumentationSettingDetailsResponse:
      type: object
      properties:
        name:
          type: string
        externalId:
          type: string
        customJournalDocumentTypeIds:
          $ref: '#/components/schemas/List'
        questionnaireCampaignKeys:
          $ref: '#/components/schemas/List'
    EnterpriseAccountInvite:
      type: object
      properties:
        url:
          type: string
        employeeKey:
          $ref: '#/components/schemas/ApiEmployeeKey'
      required:
        - url
        - employeeKey
    Error:
      properties:
        type:
          type: string
          enum:
            - SECURITY
            - INTERNAL
            - SERVER
            - CLIENT
            - MISSING_RESOURCE
        correlationId:
          type: string
        code:
          type: string
          enum:
            - UNKNOWN_ERROR
            - CREATE_EXCEPTION
            - REMOVE_EXCEPTION
            - SECURITY
            - SECURITY_ROLE
            - ARGUMENT_IS_NULL
            - ILLEGAL_ARGUMENT
            - ILLEGAL_STATE
            - PARSE_ERROR
            - ENTITY_NOT_FOUND
            - CONFLICTING_CHANGE
            - INVALID_ZIPCODE
            - INVALID_SOCIAL_SECURITY_NUMBER
            - INVALID_COMPANYID
            - INVALID_PHONE_NUMBER
            - TOO_EARLY
            - TOO_LATE
            - CLIENT
            - ENTITY_IDENTIFIER_STATUS
            - DUPLICATE_PERSON
            - DUPLICATE_EXTERNAL_ID
            - FRIEND_RESTRICTION
            - EMPLOYEE_ALREADY_EXIST
            - DUPLICATE_COMPANY
            - EXPENSIVE_SEARCH
            - MULTIPLE_PERSONS_FOUND
            - NOT_DELIVERABLE
            - CIRCULAR_REFERENCE
            - REFERENCE
            - PERSON_NOT_EDITABLE
            - PERSON_TRANSFER
            - NO_CLEARING_HOUSE_FOUND
            - ACCOUNT_RECEIVABLE_IS_BLOCKED
            - BANK_ACCOUNT_IS_BLOCKED
            - DEBIT_MAX
            - INVALID_PAYMENT_AGREEMENT
            - INVALID_BANK_INFO
            - NO_CLEARING_HOUSE_CREDITOR_FOUND
            - PARTICIPATION_TIME_INTERVAL_OVERLAP
            - PARTICIPATION_PERSON_BLACKLISTED
            - PARTICIPATION_PERSON_BLOCKED
            - PARTICIPATION_PERSON_DOUBLE_PARTICIPATION
            - BOOKING_WAITING_LIST_FULL
            - BOOKING_OUTSIDE_TIME_INTERVAL
            - BOOKING_RESTRICTION
            - OUTSIDE_BOOKING_WINDOW_EXCEPTION
            - CUSTOMER_CANCEL_OUTSIDE_TIME_INTERVAL
            - CENTER_CANCEL_OUTSIDE_TIME_INTERVAL
            - BOOKING_COLLECTION_NOT_PAID_FOR
            - NO_PRIVILEGE_FOR_PARTICIPATION
            - ALL_PARTICIPATIONS_TAKEN
            - SHOWUP_OUTSIDE_TIME_INTERVAL
            - ILLEGAL_BOOKING_STATE_FOR_CANCELLATION
            - TOO_EARLY_TO_BOOK_PARTICIPANT
            - TOO_EARLY_TO_SHOWUP
            - TOO_LATE_TO_SHOWUP
            - PARTICIPANT_TOO_MANY_OPEN_BOOKINGS
            - RESOURCE_OCCUPIED
            - RESOURCE_START_TIME_RESTRICTION
            - RESOURCE_TIME_RESTRICTION
            - ACTIVITY_STATE_INVALID
            - NO_PARENT_BOOKING_FOUND
            - STAFF_BLACKLISTED
            - STAFF_OCCUPIED
            - TOO_MANY_SUB_STAFF_USAGES
            - PARTICIPANT_ALREADY_BOOKED
            - PARTICIPANT_ALREADY_SHOWEDUP
            - ILLEGAL_BOOKING_STATE_FOR_BOOKING
            - LISTS_FULL
            - TOO_LATE_TO_BOOK_PARTICIPANT
            - PARTICIPANT_OCCUPIED
            - FULL_BOOKING_RESTRICTION
            - IN_ADVANCE_LIMIT_BOOKING_RESTRICTION
            - PERSON_DOUBLE_PARTICIPATION
            - PARTICIPANT_BLACKLISTED
            - TOO_LATE_TO_CANCEL_BOOKING
            - TOO_LATE_TO_CANCEL_BY_CENTER
            - TOO_LATE_TO_CANCEL_BY_CUSTOMER
            - UNABLE_TO_REFRESH_WAITING_LIST
            - TOO_FEW_PARTICIPANTS
            - FREEZE_MAX_PREBOOK_PERIOD
            - FREEZE_MIN_OR_MAX_DURATION
            - FREEZE_TOO_LONG
            - FREEZE_TOO_SHORT
            - FREEZE_MAX_NUMBER_REACHED
            - TOO_MANY_FREEZES_PERIOD
            - TOO_MANY_FREEZES_TOTAL
            - FREEZE_MAX_TOTAL_DURATION_REACHED
            - FREEZE_NOT_ALLOWED
            - FREEZE_START_AND_STOP_DATE
            - FREEZE_START_IN_THE_PAST
            - FREEZE_END_BEFORE_SUBSCRIPTION_END
            - FREEZE_START_AFTER_SUBSCRIPTION_END
            - FREEZE_START_BEFORE_SUBSCRIPTION_START
            - FREEZE_OVERLAP
            - FREEZE_FUTURE_FREEZE
            - BOOKINGS_IN_FREEZE_PERIOD
            - NEGATIVE_SUBSCRIPTION_PRICE
            - SUBSCRIPTION_INCORRECT_STATE
            - SUBSCRIPTION_INCORRECT_TYPE
            - START_DATE_BEFORE_BILLED_UNTIL_DATE
            - PARTICIPATION_ALREADY_CANCELLED
            - PARTICIPATION_CANCELLED
            - MINIMUM_AGE_EXCEPTION
            - TEMPLATE_NOT_DEFINED
            - INVALID_OTHER_PAYER_TYPE
            - DIFFERENT_COUNTRY_FOR_OTHER_PAYER
            - PERSON_IS_NOT_STAFF
            - OTHER_PAYER_HAS_OTHER_PAYER
            - NO_VALID_ACCOUNT_FOR_OTHER_PAYER
            - PERSON_STATUS_NOT_VALID_FOR_ATTEND
            - ATTENDING_PERSON_BLACKLISTED
            - MISSING_PRIVILEGE_FOR_ATTEND
            - ATTEND_NOT_POSSIBLE_AT_SPECIFIED_TIME
            - REJECTED_DUE_TO_HANDBACK_RESTRICTION
            - REJECTED_DUE_TO_MEMBER_ALREADY_CHECKED_IN
            - CLIPCARD_NOT_USABLE
            - TOO_MANY_CLIPS_ON_CLIPCARD
            - NOT_ENOUGH_CLIPS_ON_CLIPCARD
            - LOGIN_BLOCKED
            - PASSWORD_EXPIRED
            - PERSON_DELETED
            - PERSON_ANONYMIZED
            - INVALID_PICTURE
            - PERSON_NOT_FOUND_FOR_VENDING
            - TOO_MANY_MATCHES
            - PASSWORD_NOT_SET
            - PASSWORD_TOO_SHORT
            - CANNOT_PARTICIPATE_IN_FREEZE_PERIOD
            - INVALID_STATUS
            - CONCURRENT_CALLS
            - CANNOT_UPDATE_COMPLETED_QUESTIONNAIRE
            - MISSING_ADMIN_FEE_PRODUCT
            - LOGIN_NOT_VALID
            - ACTIVE_TASKS_ALREADY_EXISTS_FOR_PERSON
            - TASK_TYPE_EXTERNAL_KEY_DOES_NOT_EXIST
            - SUBSCRIPTION_OF_SAME_TYPE
            - PERSON_NOT_FOUND
            - EMPLOYEE_KEY_NOT_FOUND
            - EMPLOYEE_LOGIN_ALREADY_BLOCKED
            - EMPLOYEE_LOGIN_ALREADY_UNBLOCKED
            - INVALID_EMAIL
            - CENTER_NOT_FOUND
            - CENTER_ATTRIBUTE_TYPE_NOT_STRING
            - CENTER_ATTRIBUTE_NOT_FOUND
            - CENTER_ATTRIBUTE_UPDATE_NOT_ALLOWED
            - CENTER_ATTRIBUTE_VALUE_NOT_ALLOWED
            - DEDUCTION_DAY_VALIDATION_FAILED
            - CHILD_MUST_HAVE_AT_LEAST_ONE_PARENT
            - CHILD_HAS_TOO_MANY_PARENTS
            - PARENT_HAS_TOO_MANY_CHILDREN
            - CHILD_PARENT_RELATIONSHIP_ALREADY_EXISTS
            - CHILD_PARENT_RELATIONSHIP_DOES_NOT_EXIST
            - GUARDIAN_IS_TOO_YOUNG
            - CHILD_IS_TOO_OLD
            - AGE_NOT_SET
            - PAYMENT_AGREEMENT_PERSON_MISMATCH
            - PAYMENT_CYCLE_TYPE_NOT_ALLOWED_EXCEPTION
            - SUBSCRIPTION_DOES_NOT_BELONG_TO_MEMBER
            - CANNOT_DELETE_SUBSCRIPTION
            - NO_PAYMENT_AGREEMENT_FOUND
            - PAYMENT_AGREEMENT_NOT_VALID_FOR_SALES
            - PAYMENT_AGREEMENT_NOT_ACTIVE
            - PAYMENT_CYCLE_NOT_ALLOWED
            - SUBSCRIPTION_SALE_OUTSIDE_HOME_CLUB_NOT_ALLOWED
            - BELOW_REQUIRED_AGE_FOR_EMAIL_CAPTURE
            - ROLE_NOT_FOUND
            - ACTION_NOT_ALLOWED
            - SCOPE_NOT_FOUND
            - EMPLOYEE_BLOCKED
            - ROLE_NOT_ASSIGNED
            - INVALID_EMPLOYEE_KEY
            - MISSING_PRIVILEGES
            - DATE_PARSE_ERROR
            - DATE_INVALID
            - CLIPCARD_NOT_ACTIVE
            - GROUP_ALREADY_EXIST
            - EMPLOYEE_AND_PERSON_KEY_SET
            - MULTIPLE_EMPLOYEE_LOGINS_FOUND
            - MULTIPLE_BLOCKED_EMPLOYEE_LOGINS_FOUND
            - NO_ACTIVE_EMPLOYEE_LOGINS_FOUND
            - NO_BLOCKED_EMPLOYEE_LOGINS_FOUND
            - INVOICE_LINE_NOT_FOUND
            - INVALID_CLIP_SIZE
            - CLIP_SIZE_NOT_SUPPORTED
            - MISSING_CLIP_SIZE
            - DUPLICATE_ENTITY_FOUND
            - RELATION_ALREADY_EXISTS
            - RELATION_DOESNT_EXIST
            - FEATURE_NOT_ENABLED
            - BUYOUT_OVERRIDE_TOO_HIGH
            - CLIPCARD_NOT_FOUND
            - SUBSCRIPTION_WRONG_TYPE
            - INVALID_PAYMENT_CYCLE
            - INVALID_COURSE_BOOKING
            - INVALID_COURSE_PRIVILEGE
            - CLIPCARD_EXPIRED
            - CLIPCARD_OVERDUE
            - CLIPCARD_REFUNDED
            - NOT_WITHIN_AGE_GROUP
            - TOO_LATE_TO_SIGNUP_TO_COURSE
            - NOT_A_FIXED_COURSE
            - ILLEGAL_PAYMENT_AGREEMENT_STATE
            - MEMBER_CARD_ALREADY_BLOCKED
            - RECURRING_PARTICIPATION
            - ACTIVITY_ACCESS_GROUP_NOT_MATCHING
            - ACTIVITY_RESOURCE_GROUP_NOT_MATCHING
            - ACTIVITY_CAPACITY_TOO_LOW
            - ACTIVITY_CAPACITY_NOT_UNLIMITED
            - NOT_SUPPORTED_FOR_COURSES
            - BOOKING_PROGRAM_NOT_FOUND
            - BOOKING_PROGRAM_STARTED
            - PARTICIPANT_NOT_FOUND_ON_BOOKING_PROGRAM
            - TOO_LATE_TO_REMOVE_BOOKING_PROGRAM_PARTICIPATION
            - TOO_EARLY_TO_SIGNUP_PROGRAM_BOOKING
            - ILLEGAL_DATE_CHANGE
            - MAXIMUM_CHECKED_IN
            - RESOURCE_SELECTION_NOT_ALLOW_BY_ACTIVITY
            - MISSING_RESOURCE
            - WRONG_INSTALLMENT_PLAN
            - INVALID_FREE_PERIOD
            - INVALID_SUBSCRIPTION_STATE
            - INVALID_SUBSCRIPTION_STATE_AND_SUB_STATE
            - SUBSCRIPTION_IS_SPONSORED
            - SUBSCRIPTION_IS_REASSIGNED
            - CAMP_BOOKING_SELECTION_DATE
            - CANNOT_CHANGE_OWNER_IN_EXISTING_PARTICIPATIONS
            - SINGLE_DAYS_BOOKING_NOT_ALLOWED_FOR_CAMP
            - OWNER_BELOW_MINIMUM_AGE
            - OVERRIDE_OF_EXPIRATION_DATE_NOT_ALLOWED
            - MISSING_ISSUE_DATE
            - CUSTOM_JOURNAL_DOCUMENT_TYPE_NOT_ACTIVE
            - CUSTOM_JOURNAL_DOCUMENT_MISSING_ATTACHMENT
            - FAMILY_RELATIVE_RELATIONSHIP_DOES_NOT_EXIST
            - CAMP_ELECTIVE_SELECTED_WITHOUT_CAMP_BOOKING
            - PROGRAM_TYPE_NOT_AVAILABLE
            - CAMP_PARTICIPATION_CANNOT_BE_CANCELLED
            - CANNOT_PAYOUT_CLIPCARD_INSTALLMENT_PLAN
            - CANCEL_CLIPCARD_SALE_FOR_CAMP_NOT_ALLOWED
            - INSTALLMENTS_FOR_CLIPCARD_WITH_OVERDUE_DEBT_NOT_ALLOWED
            - SUBSCRIPTION_OF_SAME_TYPE_IN_BASKET
            - SHOPPING_BASKET_ITEM_NOT_FOUND
            - SHOPPING_BASKET_WRONG_STATUS
            - SHOPPING_BASKET_ALREADY_PAID
            - SHOPPING_BASKET_NOT_EMPTY
            - SYSTEM_PROPERTY_NOT_SET
            - PERSON_IS_NOT_EMPLOYEE
            - PAYMENT_AGREEMENT_NOT_ALLOWED_FOR_PERSON_TYPE
            - INVALID_NATIONAL_ID
            - INVALID_RESIDENT_ID
            - SEARCH_CRITERIA_EMPTY
            - SUBSCRIPTION_HAS_END_DATE
            - SUBSCRIPTION_IN_WRONG_STATE
            - BOOKING_PROGRAM_PARTICIPATIONS_ARE_TENTATIVE
            - CARD_ON_FILE_NOT_AVAILABLE
            - VALUE_NOT_UNIQUE
            - CASH_REGISTER_WRONG_STATE
            - CASH_REGISTER_FOR_WEB_MISSING
            - CARD_ON_FILE_LIMIT_EXCEEDED
            - PERSON_DOES_NOT_OWN_AGREEMENT
            - PAYMENT_AMOUNT_DOES_NOT_MATCH
            - MULTIPLE_PAYMENT_AGREEMENT_NOT_SUPPORTED
            - MISSING_POSITIVE_AMOUNT_FOR_INSTALLMENT_PLAN
            - BOOKING_AVAILABILITY_NOT_COMPLIED
            - INVALID_CAMPAIGN_CODE
            - DYNAMIC_PRICING_NOT_SUPPORTED_FOR_RETENTION_CAMPAIGN
            - NO_RETENTION_CAMPAIGN_FOUND
            - UNSUPPORTED_SUBSCRIPTION_TYPE_FOR_RETENTION_CAMPAIGN
            - INVALID_SUBSCRIPTION_STATE_FOR_RETENTION_CAMPAIGN
            - EDITING_CAMP_NOT_ALLOWED_FOR_API
            - MULTIPLE_OWNERS_NOT_ALLOWED
            - STANDBY_LIST_EXCEEDS_LIMIT
            - STANDBY_ENTRY_EXISTING_SAME_PROGRAM
        message:
          type: string
        details:
          type: array
          items:
            type: string
    ErrorCode:
      type: string
      enum:
        - UNKNOWN_ERROR
        - CREATE_EXCEPTION
        - REMOVE_EXCEPTION
        - SECURITY
        - SECURITY_ROLE
        - ARGUMENT_IS_NULL
        - ILLEGAL_ARGUMENT
        - ILLEGAL_STATE
        - PARSE_ERROR
        - ENTITY_NOT_FOUND
        - CONFLICTING_CHANGE
        - INVALID_ZIPCODE
        - INVALID_SOCIAL_SECURITY_NUMBER
        - INVALID_COMPANYID
        - INVALID_PHONE_NUMBER
        - TOO_EARLY
        - TOO_LATE
        - CLIENT
        - ENTITY_IDENTIFIER_STATUS
        - DUPLICATE_PERSON
        - DUPLICATE_EXTERNAL_ID
        - FRIEND_RESTRICTION
        - EMPLOYEE_ALREADY_EXIST
        - DUPLICATE_COMPANY
        - EXPENSIVE_SEARCH
        - MULTIPLE_PERSONS_FOUND
        - NOT_DELIVERABLE
        - CIRCULAR_REFERENCE
        - REFERENCE
        - PERSON_NOT_EDITABLE
        - PERSON_TRANSFER
        - NO_CLEARING_HOUSE_FOUND
        - ACCOUNT_RECEIVABLE_IS_BLOCKED
        - BANK_ACCOUNT_IS_BLOCKED
        - DEBIT_MAX
        - INVALID_PAYMENT_AGREEMENT
        - INVALID_BANK_INFO
        - NO_CLEARING_HOUSE_CREDITOR_FOUND
        - PARTICIPATION_TIME_INTERVAL_OVERLAP
        - PARTICIPATION_PERSON_BLACKLISTED
        - PARTICIPATION_PERSON_BLOCKED
        - PARTICIPATION_PERSON_DOUBLE_PARTICIPATION
        - BOOKING_WAITING_LIST_FULL
        - BOOKING_OUTSIDE_TIME_INTERVAL
        - BOOKING_RESTRICTION
        - OUTSIDE_BOOKING_WINDOW_EXCEPTION
        - CUSTOMER_CANCEL_OUTSIDE_TIME_INTERVAL
        - CENTER_CANCEL_OUTSIDE_TIME_INTERVAL
        - BOOKING_COLLECTION_NOT_PAID_FOR
        - NO_PRIVILEGE_FOR_PARTICIPATION
        - ALL_PARTICIPATIONS_TAKEN
        - SHOWUP_OUTSIDE_TIME_INTERVAL
        - ILLEGAL_BOOKING_STATE_FOR_CANCELLATION
        - TOO_EARLY_TO_BOOK_PARTICIPANT
        - TOO_EARLY_TO_SHOWUP
        - TOO_LATE_TO_SHOWUP
        - PARTICIPANT_TOO_MANY_OPEN_BOOKINGS
        - RESOURCE_OCCUPIED
        - RESOURCE_START_TIME_RESTRICTION
        - RESOURCE_TIME_RESTRICTION
        - ACTIVITY_STATE_INVALID
        - NO_PARENT_BOOKING_FOUND
        - STAFF_BLACKLISTED
        - STAFF_OCCUPIED
        - TOO_MANY_SUB_STAFF_USAGES
        - PARTICIPANT_ALREADY_BOOKED
        - PARTICIPANT_ALREADY_SHOWEDUP
        - ILLEGAL_BOOKING_STATE_FOR_BOOKING
        - LISTS_FULL
        - TOO_LATE_TO_BOOK_PARTICIPANT
        - PARTICIPANT_OCCUPIED
        - FULL_BOOKING_RESTRICTION
        - IN_ADVANCE_LIMIT_BOOKING_RESTRICTION
        - PERSON_DOUBLE_PARTICIPATION
        - PARTICIPANT_BLACKLISTED
        - TOO_LATE_TO_CANCEL_BOOKING
        - TOO_LATE_TO_CANCEL_BY_CENTER
        - TOO_LATE_TO_CANCEL_BY_CUSTOMER
        - UNABLE_TO_REFRESH_WAITING_LIST
        - TOO_FEW_PARTICIPANTS
        - FREEZE_MAX_PREBOOK_PERIOD
        - FREEZE_MIN_OR_MAX_DURATION
        - FREEZE_TOO_LONG
        - FREEZE_TOO_SHORT
        - FREEZE_MAX_NUMBER_REACHED
        - TOO_MANY_FREEZES_PERIOD
        - TOO_MANY_FREEZES_TOTAL
        - FREEZE_MAX_TOTAL_DURATION_REACHED
        - FREEZE_NOT_ALLOWED
        - FREEZE_START_AND_STOP_DATE
        - FREEZE_START_IN_THE_PAST
        - FREEZE_END_BEFORE_SUBSCRIPTION_END
        - FREEZE_START_AFTER_SUBSCRIPTION_END
        - FREEZE_START_BEFORE_SUBSCRIPTION_START
        - FREEZE_OVERLAP
        - FREEZE_FUTURE_FREEZE
        - BOOKINGS_IN_FREEZE_PERIOD
        - NEGATIVE_SUBSCRIPTION_PRICE
        - SUBSCRIPTION_INCORRECT_STATE
        - SUBSCRIPTION_INCORRECT_TYPE
        - START_DATE_BEFORE_BILLED_UNTIL_DATE
        - PARTICIPATION_ALREADY_CANCELLED
        - PARTICIPATION_CANCELLED
        - MINIMUM_AGE_EXCEPTION
        - TEMPLATE_NOT_DEFINED
        - INVALID_OTHER_PAYER_TYPE
        - DIFFERENT_COUNTRY_FOR_OTHER_PAYER
        - PERSON_IS_NOT_STAFF
        - OTHER_PAYER_HAS_OTHER_PAYER
        - NO_VALID_ACCOUNT_FOR_OTHER_PAYER
        - PERSON_STATUS_NOT_VALID_FOR_ATTEND
        - ATTENDING_PERSON_BLACKLISTED
        - MISSING_PRIVILEGE_FOR_ATTEND
        - ATTEND_NOT_POSSIBLE_AT_SPECIFIED_TIME
        - REJECTED_DUE_TO_HANDBACK_RESTRICTION
        - REJECTED_DUE_TO_MEMBER_ALREADY_CHECKED_IN
        - CLIPCARD_NOT_USABLE
        - TOO_MANY_CLIPS_ON_CLIPCARD
        - NOT_ENOUGH_CLIPS_ON_CLIPCARD
        - LOGIN_BLOCKED
        - PASSWORD_EXPIRED
        - PERSON_DELETED
        - PERSON_ANONYMIZED
        - INVALID_PICTURE
        - PERSON_NOT_FOUND_FOR_VENDING
        - TOO_MANY_MATCHES
        - PASSWORD_NOT_SET
        - PASSWORD_TOO_SHORT
        - CANNOT_PARTICIPATE_IN_FREEZE_PERIOD
        - INVALID_STATUS
        - CONCURRENT_CALLS
        - CANNOT_UPDATE_COMPLETED_QUESTIONNAIRE
        - MISSING_ADMIN_FEE_PRODUCT
        - LOGIN_NOT_VALID
        - ACTIVE_TASKS_ALREADY_EXISTS_FOR_PERSON
        - TASK_TYPE_EXTERNAL_KEY_DOES_NOT_EXIST
        - SUBSCRIPTION_OF_SAME_TYPE
        - PERSON_NOT_FOUND
        - EMPLOYEE_KEY_NOT_FOUND
        - EMPLOYEE_LOGIN_ALREADY_BLOCKED
        - EMPLOYEE_LOGIN_ALREADY_UNBLOCKED
        - INVALID_EMAIL
        - CENTER_NOT_FOUND
        - CENTER_ATTRIBUTE_TYPE_NOT_STRING
        - CENTER_ATTRIBUTE_NOT_FOUND
        - CENTER_ATTRIBUTE_UPDATE_NOT_ALLOWED
        - CENTER_ATTRIBUTE_VALUE_NOT_ALLOWED
        - DEDUCTION_DAY_VALIDATION_FAILED
        - CHILD_MUST_HAVE_AT_LEAST_ONE_PARENT
        - CHILD_HAS_TOO_MANY_PARENTS
        - PARENT_HAS_TOO_MANY_CHILDREN
        - CHILD_PARENT_RELATIONSHIP_ALREADY_EXISTS
        - CHILD_PARENT_RELATIONSHIP_DOES_NOT_EXIST
        - GUARDIAN_IS_TOO_YOUNG
        - CHILD_IS_TOO_OLD
        - AGE_NOT_SET
        - PAYMENT_AGREEMENT_PERSON_MISMATCH
        - PAYMENT_CYCLE_TYPE_NOT_ALLOWED_EXCEPTION
        - SUBSCRIPTION_DOES_NOT_BELONG_TO_MEMBER
        - CANNOT_DELETE_SUBSCRIPTION
        - NO_PAYMENT_AGREEMENT_FOUND
        - PAYMENT_AGREEMENT_NOT_VALID_FOR_SALES
        - PAYMENT_AGREEMENT_NOT_ACTIVE
        - PAYMENT_CYCLE_NOT_ALLOWED
        - SUBSCRIPTION_SALE_OUTSIDE_HOME_CLUB_NOT_ALLOWED
        - BELOW_REQUIRED_AGE_FOR_EMAIL_CAPTURE
        - ROLE_NOT_FOUND
        - ACTION_NOT_ALLOWED
        - SCOPE_NOT_FOUND
        - EMPLOYEE_BLOCKED
        - ROLE_NOT_ASSIGNED
        - INVALID_EMPLOYEE_KEY
        - MISSING_PRIVILEGES
        - DATE_PARSE_ERROR
        - DATE_INVALID
        - CLIPCARD_NOT_ACTIVE
        - GROUP_ALREADY_EXIST
        - EMPLOYEE_AND_PERSON_KEY_SET
        - MULTIPLE_EMPLOYEE_LOGINS_FOUND
        - MULTIPLE_BLOCKED_EMPLOYEE_LOGINS_FOUND
        - NO_ACTIVE_EMPLOYEE_LOGINS_FOUND
        - NO_BLOCKED_EMPLOYEE_LOGINS_FOUND
        - INVOICE_LINE_NOT_FOUND
        - INVALID_CLIP_SIZE
        - CLIP_SIZE_NOT_SUPPORTED
        - MISSING_CLIP_SIZE
        - DUPLICATE_ENTITY_FOUND
        - RELATION_ALREADY_EXISTS
        - RELATION_DOESNT_EXIST
        - FEATURE_NOT_ENABLED
        - BUYOUT_OVERRIDE_TOO_HIGH
        - CLIPCARD_NOT_FOUND
        - SUBSCRIPTION_WRONG_TYPE
        - INVALID_PAYMENT_CYCLE
        - INVALID_COURSE_BOOKING
        - INVALID_COURSE_PRIVILEGE
        - CLIPCARD_EXPIRED
        - CLIPCARD_OVERDUE
        - CLIPCARD_REFUNDED
        - NOT_WITHIN_AGE_GROUP
        - TOO_LATE_TO_SIGNUP_TO_COURSE
        - NOT_A_FIXED_COURSE
        - ILLEGAL_PAYMENT_AGREEMENT_STATE
        - MEMBER_CARD_ALREADY_BLOCKED
        - RECURRING_PARTICIPATION
        - ACTIVITY_ACCESS_GROUP_NOT_MATCHING
        - ACTIVITY_RESOURCE_GROUP_NOT_MATCHING
        - ACTIVITY_CAPACITY_TOO_LOW
        - ACTIVITY_CAPACITY_NOT_UNLIMITED
        - NOT_SUPPORTED_FOR_COURSES
        - BOOKING_PROGRAM_NOT_FOUND
        - BOOKING_PROGRAM_STARTED
        - PARTICIPANT_NOT_FOUND_ON_BOOKING_PROGRAM
        - TOO_LATE_TO_REMOVE_BOOKING_PROGRAM_PARTICIPATION
        - TOO_EARLY_TO_SIGNUP_PROGRAM_BOOKING
        - ILLEGAL_DATE_CHANGE
        - MAXIMUM_CHECKED_IN
        - RESOURCE_SELECTION_NOT_ALLOW_BY_ACTIVITY
        - MISSING_RESOURCE
        - WRONG_INSTALLMENT_PLAN
        - INVALID_FREE_PERIOD
        - INVALID_SUBSCRIPTION_STATE
        - INVALID_SUBSCRIPTION_STATE_AND_SUB_STATE
        - SUBSCRIPTION_IS_SPONSORED
        - SUBSCRIPTION_IS_REASSIGNED
        - CAMP_BOOKING_SELECTION_DATE
        - CANNOT_CHANGE_OWNER_IN_EXISTING_PARTICIPATIONS
        - SINGLE_DAYS_BOOKING_NOT_ALLOWED_FOR_CAMP
        - OWNER_BELOW_MINIMUM_AGE
        - OVERRIDE_OF_EXPIRATION_DATE_NOT_ALLOWED
        - MISSING_ISSUE_DATE
        - CUSTOM_JOURNAL_DOCUMENT_TYPE_NOT_ACTIVE
        - CUSTOM_JOURNAL_DOCUMENT_MISSING_ATTACHMENT
        - FAMILY_RELATIVE_RELATIONSHIP_DOES_NOT_EXIST
        - CAMP_ELECTIVE_SELECTED_WITHOUT_CAMP_BOOKING
        - PROGRAM_TYPE_NOT_AVAILABLE
        - CAMP_PARTICIPATION_CANNOT_BE_CANCELLED
        - CANNOT_PAYOUT_CLIPCARD_INSTALLMENT_PLAN
        - CANCEL_CLIPCARD_SALE_FOR_CAMP_NOT_ALLOWED
        - INSTALLMENTS_FOR_CLIPCARD_WITH_OVERDUE_DEBT_NOT_ALLOWED
        - SUBSCRIPTION_OF_SAME_TYPE_IN_BASKET
        - SHOPPING_BASKET_ITEM_NOT_FOUND
        - SHOPPING_BASKET_WRONG_STATUS
        - SHOPPING_BASKET_ALREADY_PAID
        - SHOPPING_BASKET_NOT_EMPTY
        - SYSTEM_PROPERTY_NOT_SET
        - PERSON_IS_NOT_EMPLOYEE
        - PAYMENT_AGREEMENT_NOT_ALLOWED_FOR_PERSON_TYPE
        - INVALID_NATIONAL_ID
        - INVALID_RESIDENT_ID
        - SEARCH_CRITERIA_EMPTY
        - SUBSCRIPTION_HAS_END_DATE
        - SUBSCRIPTION_IN_WRONG_STATE
        - BOOKING_PROGRAM_PARTICIPATIONS_ARE_TENTATIVE
        - CARD_ON_FILE_NOT_AVAILABLE
        - VALUE_NOT_UNIQUE
        - CASH_REGISTER_WRONG_STATE
        - CASH_REGISTER_FOR_WEB_MISSING
        - CARD_ON_FILE_LIMIT_EXCEEDED
        - PERSON_DOES_NOT_OWN_AGREEMENT
        - PAYMENT_AMOUNT_DOES_NOT_MATCH
        - MULTIPLE_PAYMENT_AGREEMENT_NOT_SUPPORTED
        - MISSING_POSITIVE_AMOUNT_FOR_INSTALLMENT_PLAN
        - BOOKING_AVAILABILITY_NOT_COMPLIED
        - INVALID_CAMPAIGN_CODE
        - DYNAMIC_PRICING_NOT_SUPPORTED_FOR_RETENTION_CAMPAIGN
        - NO_RETENTION_CAMPAIGN_FOUND
        - UNSUPPORTED_SUBSCRIPTION_TYPE_FOR_RETENTION_CAMPAIGN
        - INVALID_SUBSCRIPTION_STATE_FOR_RETENTION_CAMPAIGN
        - EDITING_CAMP_NOT_ALLOWED_FOR_API
        - MULTIPLE_OWNERS_NOT_ALLOWED
        - STANDBY_LIST_EXCEEDS_LIMIT
        - STANDBY_ENTRY_EXISTING_SAME_PROGRAM
    ExtendedAttribute:
      description: >-
        [API Object ExtendedAttribute v5
        documentation](https://clublead.atlassian.net/wiki/x/bwBvFg)
      type: object
      properties:
        id:
          type: string
        value:
          type: string
      required:
        - id
        - value
    ExtendedAttributeMIME:
      type: object
      properties:
        id:
          type: string
        document:
          $ref: '#/components/schemas/MIMEDocument'
      required:
        - id
        - document
    Extract:
      type: object
      properties:
        id:
          type: integer
          format: int32
        parameters:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              value:
                type: string
            required:
              - name
              - value
        charsetName:
          type: string
      required:
        - id
        - parameters
        - charsetName
    Family:
      type: object
      properties:
        familyKey:
          type: integer
          format: int32
        primaryPerson:
          $ref: '#/components/schemas/PersonDetail'
        familyName:
          type: string
        familyMembers:
          type: array
          items:
            $ref: '#/components/schemas/FamilyMember'
    FamilyAllowCardOnFile:
      type: string
      enum:
        - ALLOW
        - DISALLOW
    FamilyMember:
      type: object
      properties:
        personDetail:
          $ref: '#/components/schemas/PersonDetail'
        memberType:
          $ref: '#/components/schemas/FamilyMemberType'
        allowCardOnFile:
          $ref: '#/components/schemas/FamilyAllowCardOnFile'
      required:
        - personDetail
        - memberType
        - allowCardOnFile
    FamilyMemberType:
      type: string
      enum:
        - SPOUSE
        - PARTNER
        - CHILD
        - OTHER
    FindCompany:
      type: object
      properties:
        name:
          type: string
        country:
          type: string
        zipCode:
          type: string
        address:
          type: string
        centers:
          type: array
          items:
            type: integer
            format: int32
    FindPerson:
      type: object
      properties:
        name:
          type: string
        socialSecurityNumber:
          type: string
        birthday:
          type: string
        phoneNumber:
          type: string
        center:
          type: integer
          format: int32
        country:
          type: string
        personType:
          $ref: '#/components/schemas/PersonType'
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/ExtendedAttribute'
    Freeze:
      type: object
      properties:
        freezeKey:
          $ref: '#/components/schemas/CompositeSubKey'
        type:
          $ref: '#/components/schemas/FreezeType'
        startDate:
          type: string
        endDate:
          type: string
        comment:
          type: string
    FreezePeriodResponse:
      type: object
      properties:
        firstPossibleStartDate:
          type: string
        unit:
          type: string
        amount:
          type: integer
          format: int32
    FreezeType:
      type: string
      enum:
        - UNCONDITIONAL
        - CONDITIONAL
    FrequencyRestriction:
      description: >-
        [API Object FrequencyRestriction v5
        documentation](https://clublead.atlassian.net/wiki/x/RoBrFg)
      type: object
      properties:
        includeNoShow:
          type: boolean
        frequencyRestrictionType:
          $ref: '#/components/schemas/FrequencyRestrictionType'
        frequencyRestrictionAllowed:
          type: integer
          format: int32
        frequencyRestrictionPeriod:
          type: integer
          format: int32
        frequencyRestrictionPeriodUnit:
          $ref: '#/components/schemas/TimeUnit'
        multiAccessWindow:
          $ref: '#/components/schemas/MultiAccessWindow'
    FrequencyRestrictionType:
      type: string
      enum:
        - GLIDING
        - CALENDAR
    Friend:
      description: >-
        [API Object Friend v5
        documentation](https://clublead.atlassian.net/wiki/x/dABvFg)
      type: object
      properties:
        personKey:
          $ref: '#/components/schemas/CompositeKey'
        name:
          type: string
    GateCommandData:
      type: object
      properties:
        gateKey:
          $ref: '#/components/schemas/CompositeKey'
        deviceId:
          type: integer
          nullable: false
          format: int32
        deviceSubId:
          type: string
        grantAccess:
          type: boolean
          nullable: false
    GetAvailableClipcardsForActivityResponse:
      type: object
      properties:
        clipcards:
          type: array
          items:
            $ref: '#/components/schemas/AvailableClipcard'
    GetAvailableClipcardsForAnonymousResponse:
      type: object
      properties:
        clipcards:
          type: array
          items:
            $ref: '#/components/schemas/AvailableClipcard'
    GetSuggestedTerminationDatesPrameters:
      type: object
      properties:
        subscriptionKey:
          $ref: '#/components/schemas/CompositeKey'
        insideSubscriptionBinding:
          type: boolean
      required:
        - subscriptionKey
    GetUsagePointSourceResponse:
      type: object
      properties:
        usagePointSources:
          $ref: '#/components/schemas/Collection'
    HealthInfo:
      type: object
      properties:
        version:
          type: string
    IndividualDeductionDaysValidity:
      type: object
      properties:
        personId:
          $ref: '#/components/schemas/ApiPersonKey'
        paymentAgreementKey:
          $ref: '#/components/schemas/CompositeSubKey'
        earliestPossibleChangeDate:
          type: string
        validIndividualDeductionDays:
          $ref: '#/components/schemas/List'
        invalidIndividualDeductionDays:
          $ref: '#/components/schemas/List'
    InstallmentPlanConfig:
      description: >-
        [API Object InstallmentPlanConfig v5
        documentation](https://clublead.atlassian.net/wiki/x/vYBvFg)
      type: object
      properties:
        externalId:
          type: string
        name:
          type: string
        type:
          $ref: '#/components/schemas/InstallmentPlanConfigType'
        numberOfInstallments:
          type: integer
          format: int32
        amountPerInstallment:
          type: number
        firstInstallmentPaidInPOS:
          type: boolean
        adminFee:
          type: number
        initialAmount:
          type: number
    InstallmentPlanConfigType:
      type: string
      enum:
        - FIXED_NUMBER
        - FIXED_AMOUNT
    Interval:
      description: >-
        [API Object Interval v5
        documentation](https://clublead.atlassian.net/wiki/x/zYBvFg)
      type: object
      properties:
        from:
          type: string
        to:
          type: string
      required:
        - from
        - to
    Invoice:
      description: >-
        [API Object Invoice v5
        documentation](https://clublead.atlassian.net/wiki/x/04BvFg)
      type: object
      properties:
        totalAmount:
          type: string
        totalVAT:
          type: string
        invoiceText:
          type: string
        employeeKey:
          $ref: '#/components/schemas/CompositeKey'
        payerKey:
          $ref: '#/components/schemas/ApiPersonKey'
        vatInfos:
          type: array
          items:
            $ref: '#/components/schemas/VATInfo'
        invoiceLines:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceLine'
        salesTaxes:
          type: array
          items:
            $ref: '#/components/schemas/SalesTax'
        cashRegisterTransactions:
          $ref: '#/components/schemas/List'
    InvoiceLine:
      description: >-
        [API Object InvoiceLine v5
        documentation](https://clublead.atlassian.net/wiki/x/owBtFg)
      type: object
      properties:
        productKey:
          $ref: '#/components/schemas/CompositeKey'
        quantity:
          type: integer
          nullable: false
          format: int32
        text:
          type: string
        amount:
          type: string
        vatInfo:
          $ref: '#/components/schemas/VATInfo'
        purchaserKey:
          $ref: '#/components/schemas/ApiPersonKey'
        salesTaxes:
          type: array
          items:
            $ref: '#/components/schemas/SalesTax'
        externalId:
          type: string
    JournalNote:
      description: >-
        [API Object JournalNote v5
        documentation](https://clublead.atlassian.net/wiki/x/nwJzFg)
      type: object
      properties:
        key:
          type: integer
          format: int32
        type:
          $ref: '#/components/schemas/JournalNoteType'
        customJournalDocumentTypeId:
          type: integer
          format: int32
        personKey:
          $ref: '#/components/schemas/ApiPersonKey'
        text:
          type: string
        name:
          type: string
        filename:
          type: string
        creationTime:
          type: string
        creationDate:
          type: string
        issueDate:
          type: string
        expirationDate:
          type: string
        signatures:
          $ref: '#/components/schemas/List'
        mimeDocument:
          $ref: '#/components/schemas/MIMEDocument'
      required:
        - name
    JournalNoteDocument:
      type: object
      properties:
        journalNoteKey:
          type: integer
          format: int32
        mimeDocument:
          $ref: '#/components/schemas/MIMEDocument'
    JournalNoteResponse:
      type: object
      properties:
        journalNotes:
          $ref: '#/components/schemas/List'
    JournalNoteType:
      type: string
      enum:
        - SYSTEM
        - SUBSCRIPTION_CONTRACT
        - DOCUMENTATION
        - NOTE
        - STATUS
        - PAYMENT_AGREEMENT_CONTRACT
        - CASHOUT
        - FREEZE_CREATION
        - FREEZE_CANCELLATION
        - FREEZE_CHANGE
        - OTHER_PAYER_START
        - OTHER_PAYER_STOP
        - SUBSCRIPTION_TERMINATION
        - SUBSCRIPTION_TERMINATION_CANCELLATION
        - PAYMENT_NOTE
        - ACCOUNT_PAYMENT_NOTE
        - SAVED_FREE_DAYS_USE
        - FREE_PERIOD_ASSIGNMENT
        - FREE_PERIOD_CANCELLATION
        - CASH_ACCOUNT_CREDIT
        - ADDON_TERMINATION
        - ADDON_TERMINATION_CANCELLATION
        - CHILD_RELATION_CONTRACT
        - DOCTOR_NOTE
        - ADDON_CONTRACT
        - HEALTH_CERTIFICATE
        - CREDITCARD_AGREEMENT_CONTRACT
        - CLIPCARD_BUYOUT
        - CLIPCARD_CONTRACT
        - REASSIGN_SUBSCRIPTION_CONTRACT
        - AGGREGATED_SUBSCRIPTION_CONTRACT
        - FREE_PERIOD_STOP_DATE_CHANGE
        - QUESTIONNAIRE_COMPLETED
        - CUSTOM_JOURNAL_DOCUMENT_TYPE
        - MULTIPLE_CLIPCARD_BUYOUT
        - SAVED_FREE_DAYS_ADDED
        - SUBSCRIPTION_REASSIGNED
    List:
      type: object
    MIMEDocument:
      type: object
      properties:
        type:
          type: string
        data:
          type: string
          format: byte
    MemberCard:
      description: >-
        [API Object MemberCard v5
        documentation](https://clublead.atlassian.net/wiki/x/rwBvFg)
      type: object
      properties:
        cardType:
          $ref: '#/components/schemas/AccessCardType'
        cardId:
          type: string
      required:
        - cardType
        - cardId
    MemberCardStatus:
      type: string
      enum:
        - OK
        - STOLEN
        - MISSING
        - BLOCKED
        - BROKEN
        - RETURNED
        - EXPIRED
        - DELETED
        - COMPROMISED
        - FORGOTTEN
        - BANNED
    MonthlyRecurrenceType:
      type: string
      enum:
        - Day_of_month
        - Day_of_week
    MultiAccessWindow:
      description: >-
        [API Object MultiAccessWindow v5
        documentation](https://clublead.atlassian.net/wiki/x/tABvFg)
      type: object
      properties:
        frequencyRestrictionType:
          $ref: '#/components/schemas/FrequencyRestrictionType'
        multiAccessAllowed:
          type: integer
          format: int32
        multiAccessPeriod:
          type: integer
          format: int32
        multiAccessPeriodUnit:
          $ref: '#/components/schemas/TimeUnit'
    NewFreeze:
      type: object
      properties:
        subscriptionId:
          $ref: '#/components/schemas/CompositeKey'
        type:
          $ref: '#/components/schemas/FreezeType'
        startDate:
          type: string
        endDate:
          type: string
        comment:
          type: string
        cancelParticipations:
          type: boolean
      required:
        - subscriptionId
        - type
        - startDate
        - endDate
    NextPeriod:
      type: object
      properties:
        startDate:
          type: string
        endDate:
          type: string
        type:
          type: string
        price:
          type: string
    Option:
      type: object
      properties:
        id:
          type: integer
          nullable: false
          format: int32
        text:
          type: string
    PaidState:
      type: string
      enum:
        - OPEN
        - LATE
        - CLOSED
        - CANCELLED
        - DEBT_COLLECTION
    Participant:
      type: object
      properties:
        personKey:
          $ref: '#/components/schemas/ApiPersonKey'
        seatName:
          type: string
      required:
        - personKey
    Participation:
      description: >-
        [API Object Participation v5
        documentation](https://clublead.atlassian.net/wiki/x/noBtFg)
      type: object
      properties:
        participationId:
          $ref: '#/components/schemas/CompositeKey'
        personId:
          $ref: '#/components/schemas/ApiPersonKey'
        personName:
          type: string
        booking:
          $ref: '#/components/schemas/Booking'
        state:
          $ref: '#/components/schemas/ParticipationState'
        participationListIndex:
          type: integer
          nullable: false
          format: int32
        waitingListIndex:
          type: integer
          format: int32
        canShowUp:
          type: boolean
          nullable: false
        energyConsumptionKcal:
          type: number
        externalId:
          type: string
        seat:
          $ref: '#/components/schemas/Seat'
        ownerId:
          $ref: '#/components/schemas/ApiPersonKey'
        ownerName:
          type: string
        usedOwnerPrivilege:
          type: boolean
          nullable: false
        qrCode:
          $ref: '#/components/schemas/MIMEDocument'
        expiryTime:
          type: string
    ParticipationState:
      type: string
      enum:
        - BOOKED
        - OVERBOOKED_WAITINGLIST
        - CANCELLED_BY_CENTER
        - CANCELLED_BY_USER
        - CANCELLED_BY_USER_TOO_LATE
        - OVERBOOKED_SHOWED_UP
        - BOOKED_BUT_LATE
        - PARTICIPATION
        - BOOKED_NO_SHOW_UP
        - SHOWED_UP_NO_PARTICIPATION
        - ATTEND
        - ATTEND_CANCELLED
        - ATTEND_IMPLICIT
        - INSTRUCTOR_ACTIVE
        - INSTRUCTOR_CANCELLED
        - BOOKED_IN_WAITING_LIST
        - TENTATIVE
        - CANCELLED_BY_BOOKING
        - CANCELLED_NO_PRIVILEGE
    Passport:
      type: object
      properties:
        number:
          type: string
        issuanceCountry:
          type: string
        expirationDate:
          type: string
      required:
        - number
    PassportCountry:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    PaymentAgreement:
      description: >-
        [API Object PaymentAgreement v5
        documentation](https://clublead.atlassian.net/wiki/x/ugBvFg)
      type: object
      properties:
        paymentAgreementKey:
          $ref: '#/components/schemas/CompositeSubKey'
        isActive:
          type: boolean
          nullable: false
        isValid:
          type: boolean
          nullable: false
        isApproved:
          type: boolean
          nullable: false
        bankInfo:
          $ref: '#/components/schemas/BankInfo'
        paymentType:
          $ref: '#/components/schemas/PersonPaymentType'
        reference:
          type: string
        clearingHouseReference:
          type: string
        clearingHouseInitialReference:
          type: string
        isPending:
          type: boolean
          nullable: false
        individualDeductionDay:
          type: integer
          format: int32
        isDefaultAgreement:
          type: boolean
          nullable: false
        paymentCycle:
          $ref: '#/components/schemas/PaymentCycle'
        isEnableInShop:
          type: boolean
          nullable: false
    PaymentAgreementInfo:
      type: object
      properties:
        paymentAgreements:
          type: array
          items:
            $ref: '#/components/schemas/PaymentAgreement'
        otherPayerPerson:
          $ref: '#/components/schemas/ApiPersonKey'
        otherPayerCompany:
          $ref: '#/components/schemas/CompositeKey'
        payingFor:
          type: array
          items:
            $ref: '#/components/schemas/ApiPersonKey'
    PaymentCycle:
      description: >-
        [API Object PaymentCycle v5
        documentation](https://clublead.atlassian.net/wiki/x/EgFwFg)
      type: object
      properties:
        paymentCycleName:
          type: string
        customerType:
          $ref: '#/components/schemas/CustomerType'
        paymentCycleType:
          $ref: '#/components/schemas/PaymentCycleType'
        paymentCycleId:
          type: integer
          format: int32
    PaymentCycleType:
      type: string
      enum:
        - FIXED
        - RELATIVE
    PaymentInfo:
      description: >-
        [API Object PaymentInfo v5
        documentation](https://clublead.atlassian.net/wiki/x/VoKXFg)
      type: object
      properties:
        shoppingBasketCenter:
          type: integer
          format: int32
        paymentMethod:
          $ref: '#/components/schemas/PaymentMethod'
        amountPaidByCustomer:
          type: string
        installmentPlanConfigExternalId:
          type: string
        creditCardTransactionRef:
          type: string
        paymentAgreementKeyForCollection:
          $ref: '#/components/schemas/CompositeSubKey'
        creditCardPaymentInfo:
          $ref: '#/components/schemas/CreditCardPaymentInfo'
      required:
        - paymentMethod
    PaymentMethod:
      type: string
      enum:
        - CASH_ACCOUNT
        - PAYMENT_ACCOUNT
        - SHOPPING_BASKET
        - INSTALLMENT_PLAN
    PaymentRequest:
      description: >-
        [API Object PaymentRequest v5
        documentation](https://clublead.atlassian.net/wiki/x/b4BsFg)
      type: object
      properties:
        paymentRequestId:
          $ref: '#/components/schemas/CompositeSubKey'
        clearingHouseType:
          $ref: '#/components/schemas/ClearingHouseType'
        deductionDate:
          type: string
        dueDate:
          type: string
        logDate:
          type: string
        requestedAmount:
          type: string
        invoiceAmount:
          type: string
        collectionFee:
          type: string
        rejectionFee:
          type: string
        invoiceAmountIncludingFees:
          type: string
        state:
          $ref: '#/components/schemas/PaymentRequestState'
        paidState:
          $ref: '#/components/schemas/PaidState'
        openAmount:
          type: string
        requestType:
          $ref: '#/components/schemas/PaymentRequestType'
        paymentAgreementKeyForCollection:
          $ref: '#/components/schemas/CompositeSubKey'
    PaymentRequestState:
      type: string
      enum:
        - SENT
        - PAID
        - FAILED
        - PARTIAL
        - CANCELLED
        - NEW
    PaymentRequestType:
      type: string
      enum:
        - PAYMENT
        - DEBT_COLLECTION
        - REVERSAL
        - REMINDER
        - REFUND
        - REPRESENTATION
        - LEGACY
        - ZERO
    PeriodPriceSourceType:
      type: string
      enum:
        - CAMPAIGN
        - COMPANY_AGREEMENT
        - TARGET_GROUP
        - OTHER
    Person:
      description: >-
        [API Object Person v5
        documentation](https://clublead.atlassian.net/wiki/x/GAFwFg)
      type: object
      properties:
        personId:
          $ref: '#/components/schemas/ApiPersonKey'
        socialSecurityNumber:
          type: string
        gender:
          $ref: '#/components/schemas/ApiGender'
        comment:
          type: string
        nickName:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        address:
          $ref: '#/components/schemas/Address'
        birthday:
          type: string
        personType:
          $ref: '#/components/schemas/PersonType'
        salutation:
          type: string
        externalId:
          type: string
        employeeNumber:
          type: string
        nationalID:
          type: string
        residentID:
          type: string
        status:
          $ref: '#/components/schemas/PersonStatus'
        passport:
          $ref: '#/components/schemas/Passport'
        relatedPersonId:
          $ref: '#/components/schemas/ApiPersonKey'
        corporateRelationType:
          $ref: '#/components/schemas/CorporateRelationType'
      required:
        - gender
    PersonActivationDates:
      description: >-
        [API Object PersonActivationDates v5
        documentation](https://clublead.atlassian.net/wiki/x/wYBtFg)
      type: object
      properties:
        firstActiveStartDate:
          type: string
        lastActiveStartDate:
          type: string
        lastActiveEndDate:
          type: string
    PersonBlacklistedStatus:
      type: string
      enum:
        - None
        - Blacklisted
        - Suspended
        - Blocked
    PersonCommunication:
      description: >-
        [API Object PersonCommunication v5
        documentation](https://clublead.atlassian.net/wiki/x/eoBrFg)
      type: object
      properties:
        personId:
          $ref: '#/components/schemas/ApiPersonKey'
        quickChannel:
          $ref: '#/components/schemas/QuickChannel'
        allowLetter:
          type: boolean
        allowEmail:
          type: boolean
        allowSMS:
          type: boolean
        allowChargedSMS:
          type: boolean
        allowPhone:
          type: boolean
        email:
          type: string
        mobilePhoneNumber:
          type: string
        homePhoneNumber:
          type: string
        workPhoneNumber:
          type: string
        wishToReceiveThirdPartyOffers:
          type: boolean
        wishToReceiveEmailNewsLetters:
          type: boolean
        preferredCommunicationLanguage:
          type: string
    PersonCompanyRelation:
      description: >-
        [API Object PersonCompanyRelation v5
        documentation](https://clublead.atlassian.net/wiki/x/xoBtFg)
      type: object
      properties:
        companyName:
          type: string
        agreement:
          $ref: '#/components/schemas/CompanyAgreement'
    PersonDetail:
      description: >-
        [API Object PersonDetail v5
        documentation](https://clublead.atlassian.net/wiki/x/7oBvFg)
      type: object
      properties:
        person:
          $ref: '#/components/schemas/Person'
        personTypeAndStatus:
          $ref: '#/components/schemas/PersonTypeAndStatus'
        personCommunication:
          $ref: '#/components/schemas/PersonCommunication'
        extendedAttributes:
          type: array
          items:
            $ref: '#/components/schemas/ExtendedAttribute'
        memberCards:
          type: array
          items:
            $ref: '#/components/schemas/MemberCard'
        companyRelation:
          $ref: '#/components/schemas/PersonCompanyRelation'
        personActiveDates:
          $ref: '#/components/schemas/PersonActivationDates'
        subscriptions:
          type: array
          items:
            $ref: '#/components/schemas/Subscription'
        friends:
          type: array
          items:
            $ref: '#/components/schemas/Friend'
        allowFriendsToBook:
          type: boolean
          nullable: false
    PersonDocumentationStatusType:
      type: string
      enum:
        - NOT_REQUIRED
        - VALID
        - GOING_TO_EXPIRE
        - EXPIRED
    PersonName:
      description: >-
        [API Object PersonName v5
        documentation](https://clublead.atlassian.net/wiki/x/uQBtFg)
      type: object
      properties:
        first:
          type: string
        middle:
          type: string
        last:
          type: string
        nick:
          type: string
        full:
          type: string
    PersonPaymentType:
      type: string
      enum:
        - INVOICE
        - EFT
        - CREDIT_CARD
    PersonPreferredCentersResponse:
      type: object
      properties:
        personPreferredCenters:
          type: array
          items:
            type: integer
            nullable: false
            format: int32
    PersonSimple:
      description: >-
        [API Object PersonSimple v5
        documentation](https://clublead.atlassian.net/wiki/x/SwBuFg)
      type: object
      properties:
        personKey:
          $ref: '#/components/schemas/ApiPersonKey'
        name:
          $ref: '#/components/schemas/PersonName'
    PersonStatus:
      type: string
      enum:
        - LEAD
        - ACTIVE
        - INACTIVE
        - TEMPORARYINACTIVE
        - TRANSFERRED
        - DUPLICATE
        - PROSPECT
        - CONTACT
    PersonType:
      type: string
      enum:
        - PRIVATE
        - STUDENT
        - STAFF
        - FRIEND
        - CORPORATE
        - ONEMANCORPORATE
        - FAMILY
        - SENIOR
        - GUEST
        - CHILD
        - EXTERNAL_STAFF
    PersonTypeAndStatus:
      description: >-
        [API Object PersonTypeAndStatus v5
        documentation](https://clublead.atlassian.net/wiki/x/eoBsFg)
      type: object
      properties:
        personId:
          $ref: '#/components/schemas/ApiPersonKey'
        personStatus:
          $ref: '#/components/schemas/PersonStatus'
        personType:
          $ref: '#/components/schemas/PersonType'
        blacklisted:
          type: boolean
          nullable: false
        suspended:
          type: boolean
          nullable: false
        companyAgreementId:
          $ref: '#/components/schemas/CompositeSubKey'
        internalComment:
          type: string
        messageToMember:
          type: string
    PersonalBookingType:
      type: string
      enum:
        - OLD_BOOKINGS
        - NON_SHOW_UPS
        - SHOW_UPS
    PersonalTrainingActivity:
      type: object
      properties:
        key:
          type: integer
          nullable: false
          format: int32
        name:
          type: string
        color:
          $ref: '#/components/schemas/ActivityColor'
        durations:
          type: array
          items:
            type: integer
            nullable: false
            format: int32
    PersonalTrainingBooking:
      description: >-
        [API Object PersonalTrainingBooking v5
        documentation](https://clublead.atlassian.net/wiki/x/qQBtFg)
      type: object
      properties:
        bookingKey:
          $ref: '#/components/schemas/CompositeKey'
        date:
          type: string
        startTime:
          type: string
        stopTime:
          type: string
        personalTrainingActivity:
          $ref: '#/components/schemas/PersonalTrainingActivity'
        recurrent:
          type: boolean
          nullable: false
        recurrence:
          $ref: '#/components/schemas/BookingRecurrence'
    PersonsChangedType:
      type: string
      enum:
        - NEW_PERSONS
        - DETAIL_CHANGES
        - STATUS_CHANGES
        - SUBSCRIPTION_STATUS_CHANGES
        - ATTENDS
        - CHECKINS
        - PARTICIPATIONS
        - CLIPCARD_CHANGES
    PrivilegeSet:
      description: >-
        [API Object PrivilegeSet v5
        documentation](https://clublead.atlassian.net/wiki/x/lQBuFg)
      type: object
      properties:
        privilegeId:
          type: integer
          format: int32
        name:
          type: string
        comment:
          type: string
    PrivilegeSetAndSponsorship:
      type: object
      properties:
        privilegeSet:
          type: integer
          format: int32
        sponsorship:
          type: number
        sponsorshipType:
          $ref: '#/components/schemas/SponsorshipType'
    PrivilegeSetGroup:
      description: >-
        [API Object PrivilegeSetGroup v5
        documentation](https://clublead.atlassian.net/wiki/x/64BuFg)
      type: object
      properties:
        privilegeGroupId:
          type: integer
          format: int32
        name:
          type: string
        role:
          type: string
    Product:
      description: >-
        [API Object Product v5
        documentation](https://clublead.atlassian.net/wiki/x/LQFwFg)
      type: object
      properties:
        productId:
          $ref: '#/components/schemas/CompositeKey'
        name:
          type: string
        price:
          type: string
        ref:
          type: string
        barcodes:
          $ref: '#/components/schemas/Collection'
        type:
          $ref: '#/components/schemas/ProductType'
        productGroups:
          type: array
          items:
            $ref: '#/components/schemas/ProductGroup'
    ProductGroup:
      description: >-
        [API Object ProductGroup v5
        documentation](https://clublead.atlassian.net/wiki/x/gYBsFg)
      type: object
      properties:
        productGroupKey:
          type: integer
          nullable: false
          format: int32
        name:
          type: string
        showInSubscriptionSales:
          type: boolean
        showInShop:
          type: boolean
        color:
          type: string
        description:
          type: string
        rank:
          type: integer
          format: int32
        primary:
          type: boolean
          nullable: false
        externalId:
          type: string
        showOnWeb:
          type: boolean
    ProductKey:
      description: >-
        [API Object ProductKey v5
        documentation](https://clublead.atlassian.net/wiki/x/NQFwFg)
      type: object
      properties:
        externalId:
          type: string
        center:
          type: integer
          nullable: false
          format: int32
        id:
          type: integer
          nullable: false
          format: int32
      required:
        - center
        - id
    ProductPrice:
      description: >-
        [API Object ProductPrice v5
        documentation](https://clublead.atlassian.net/wiki/x/wQBtFg)
      type: object
      properties:
        customerPrice:
          type: string
        sponsorPrice:
          type: string
        normalPrice:
          type: string
    ProductSale:
      type: object
      properties:
        productId:
          $ref: '#/components/schemas/CompositeKey'
        price:
          type: string
        quantity:
          type: integer
          nullable: false
          format: int32
      required:
        - productId
        - quantity
    ProductType:
      type: string
      enum:
        - GOOD
        - SERVICE
        - CLIPCARD
        - SUBSCRIPTION
    PropertyConfiguration:
      type: object
      properties:
        configurationName:
          type: string
        properties:
          type: array
          items:
            $ref: '#/components/schemas/PropertyValue'
    PropertyValue:
      type: object
      properties:
        property:
          type: string
        value:
          type: string
    Question:
      description: >-
        [API Object Question v5
        documentation](https://clublead.atlassian.net/wiki/x/UAFwFg)
      type: object
      properties:
        id:
          type: integer
          nullable: false
          format: int32
        blocked:
          type: boolean
          nullable: false
        text:
          type: string
        type:
          $ref: '#/components/schemas/QuestionType'
        options:
          type: array
          items:
            $ref: '#/components/schemas/Option'
        defaultOption:
          $ref: '#/components/schemas/SelectedOption'
        required:
          type: boolean
        requiredForAnswer:
          $ref: '#/components/schemas/Answer'
      required:
        - id
        - type
    QuestionType:
      type: string
      enum:
        - FreeText
        - SelectSingleOption
        - SelectMultipleOptions
        - ExtendedAttribute
    Questionnaire:
      description: >-
        [API Object Questionnaire v5
        documentation](https://clublead.atlassian.net/wiki/x/E4FtFg)
      type: object
      properties:
        id:
          type: integer
          nullable: false
          format: int32
        templateId:
          type: integer
          nullable: false
          format: int32
        dateInterval:
          $ref: '#/components/schemas/Interval'
        type:
          $ref: '#/components/schemas/QuestionnaireType'
        name:
          type: string
        rank:
          type: integer
          format: int32
        mandatory:
          type: boolean
          nullable: false
    QuestionnaireAnswer:
      description: >-
        [API Object QuestionnaireAnswer v5
        documentation](https://clublead.atlassian.net/wiki/x/ngBuFg)
      type: object
      properties:
        answerId:
          $ref: '#/components/schemas/CompositeSubKey'
        personId:
          $ref: '#/components/schemas/ApiPersonKey'
        questionnaireId:
          type: integer
          nullable: false
          format: int32
        templateId:
          type: integer
          nullable: false
          format: int32
        time:
          type: string
        completed:
          type: boolean
          nullable: false
        journalEntryId:
          type: integer
          format: int32
        expirationDate:
          type: string
        answers:
          type: array
          items:
            $ref: '#/components/schemas/Answer'
      required:
        - answerId
        - personId
        - questionnaireId
        - templateId
        - time
        - completed
        - answers
    QuestionnaireTemplate:
      description: >-
        [API Object QuestionnaireTemplate v5
        documentation](https://clublead.atlassian.net/wiki/x/loBrFg)
      type: object
      properties:
        id:
          type: integer
          nullable: false
          format: int32
        name:
          type: string
        heading:
          type: string
        text:
          type: string
        status:
          $ref: '#/components/schemas/QuestionnaireTemplateStatus'
        questions:
          type: array
          items:
            $ref: '#/components/schemas/Question'
    QuestionnaireTemplateStatus:
      type: string
      enum:
        - New
        - Active
        - Inactive
    QuestionnaireType:
      type: string
      enum:
        - NewPerson
        - NewGuest
        - NewSubscription
        - EndSubscription
        - Survey
        - Health
        - Staff
    QuickChannel:
      type: string
      enum:
        - NONE
        - EMAIL
        - SMS
    RebatedPrice:
      type: object
      properties:
        productId:
          $ref: '#/components/schemas/CompositeKey'
        rebatedPrice:
          type: string
        sponsoredAmount:
          type: string
    RecurringClipcardContractSummary:
      type: object
      properties:
        productKey:
          $ref: '#/components/schemas/ApiProductKey'
        name:
          type: string
        startDate:
          type: string
        bindingPeriodLength:
          type: integer
          format: int32
        bindingEndDate:
          type: string
        creationPrice:
          type: string
        creationSponseredAmount:
          type: string
        creationNormalPrice:
          type: string
        creationPriceSource:
          type: string
        creationPriceText:
          type: string
        initialPeriodStartDate:
          type: string
        initialPeriodEndDate:
          type: string
        initialPeriodNormalPrice:
          type: string
        initialPeriodPrice:
          type: string
        initialPeriodCampaignSource:
          type: string
        periodLength:
          type: integer
          format: int32
        periodUnit:
          type: integer
          format: int32
        normalPeriodPrice:
          type: string
        normalPeriodSponseredAmount:
          type: string
        normalPeriodPriceSource:
          type: string
        normalPeriodPriceText:
          type: string
        product:
          $ref: '#/components/schemas/SubscriptionProduct'
        startupCampaignPrice:
          type: string
        startupCampaignStartDate:
          type: string
        startupCampaignEndDate:
          type: string
        startupCampaignSource:
          type: string
        startupCampaignText:
          type: string
        adminFeePrice:
          type: string
        proRataPrice:
          type: string
        proRataSponsoredAmount:
          type: string
        firstDeductionAmount:
          type: string
        firstDeductionDate:
          type: string
        firstDeductionPeriodStartDate:
          type: string
        firstDeductionPeriodEndDate:
          type: string
        availableAddOnProducts:
          $ref: '#/components/schemas/Collection'
        totalAmount:
          type: string
        periodPriceSourceType:
          $ref: '#/components/schemas/PeriodPriceSourceType'
        periodPriceSourceEndDate:
          type: string
        recurringClipcardClips:
          type: integer
          format: int32
        startupRecurringClipcard:
          $ref: '#/components/schemas/StartupRecurringClipcard'
    RecurringClipcardDetails:
      description: >-
        [API Object RecurringClipcardDetails v5
        documentation](https://clublead.atlassian.net/wiki/x/CAHvGg)
      type: object
      properties:
        availableClipSizes:
          $ref: '#/components/schemas/AvailableClipSizes'
        saleStartupClipcard:
          type: boolean
          nullable: false
    RelatedPerson:
      description: >-
        [API Object RelatedPerson v5
        documentation](https://clublead.atlassian.net/wiki/x/GIFtFg)
      type: object
      properties:
        relationType:
          $ref: '#/components/schemas/RelationType'
        relatedPersonKey:
          $ref: '#/components/schemas/ApiPersonKey'
        relatedCompanyAgreementKey:
          $ref: '#/components/schemas/CompositeSubKey'
        relatedCompanyKey:
          $ref: '#/components/schemas/CompositeKey'
    RelationType:
      type: string
      enum:
        - MY_FRIEND
        - FRIENDS_OF_ME
        - MY_COMPANY
        - MY_COMPANY_AGREEMENT
        - MY_FAMILY
        - FAMILY_TO_ME
        - MY_COUNSELLOR
        - COUNSELLED_BY_ME
        - MY_PAYER
        - MY_REFERRER
        - REFERRED_BY_ME
        - MY_CHILD
        - MY_PARENT
        - MY_BUDDIES
        - PRIMARY_MEMBER
        - SECONDARY_MEMBER
        - CORPORATE_FAMILY
        - LINKED_CORPORATE_FAMILY
        - LINKED_CORPORATE_EMPLOYEE
        - OTHER
        - PAID_FOR_BY_ME
        - MY_FAMILY_RELATIVE
        - FAMILY_RELATIVE_TO_ME
    RemoveBookingRestrictionResponse:
      type: object
    Resource:
      description: >-
        [API Object Resource v5
        documentation](https://clublead.atlassian.net/wiki/x/qIBrFg)
      type: object
      properties:
        key:
          $ref: '#/components/schemas/CompositeKey'
        name:
          type: string
        comment:
          type: string
        externalId:
          type: string
        resourceGroupExternalIds:
          type: array
          items:
            type: string
        seats:
          type: array
          items:
            $ref: '#/components/schemas/Seat'
        instructorRow:
          type: number
          format: float
        instructorPosition:
          type: number
          format: float
    ResourceBookingAvailability:
      description: >-
        [API Object ResourceBookingAvailability v5
        documentation](https://clublead.atlassian.net/wiki/x/9YBwFg)
      type: object
      properties:
        resourceKey:
          $ref: '#/components/schemas/CompositeKey'
        time:
          type: string
        available:
          type: boolean
          nullable: false
    Role:
      description: >-
        [API Object Role v5
        documentation](https://clublead.atlassian.net/wiki/x/BIFuFg)
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        description:
          type: string
        scope:
          $ref: '#/components/schemas/Scope'
        masterRoleId:
          type: integer
          format: int32
        masterRoleName:
          type: string
        blocked:
          type: boolean
        systemRole:
          type: boolean
        customized:
          type: boolean
    SalesList:
      type: object
      properties:
        sales:
          $ref: '#/components/schemas/List'
    SalesTax:
      description: >-
        [API Object SalesTax v5
        documentation](https://clublead.atlassian.net/wiki/x/8wBvFg)
      type: object
      properties:
        name:
          type: string
        amount:
          type: string
        rate:
          type: string
    Schedule:
      description: >-
        [API Object Schedule v5
        documentation](https://clublead.atlassian.net/wiki/x/E4FvFg)
      type: object
      properties:
        name:
          type: string
        dailySchedule:
          $ref: '#/components/schemas/DailySchedule'
        weeklySchedule:
          $ref: '#/components/schemas/WeeklySchedule'
        businessSchedule:
          $ref: '#/components/schemas/BusinessSchedule'
        overrides:
          type: array
          items:
            $ref: '#/components/schemas/ScheduleOverride'
    ScheduleOverride:
      description: >-
        [API Object ScheduleOverride v5
        documentation](https://clublead.atlassian.net/wiki/x/JIFtFg)
      type: object
      properties:
        id:
          type: integer
          format: int32
        date:
          type: string
        duration:
          $ref: '#/components/schemas/Interval'
        openAllDay:
          type: boolean
          nullable: false
        closedAllDay:
          type: boolean
          nullable: false
    Scope:
      description: >-
        [API Object Scope v5
        documentation](https://clublead.atlassian.net/wiki/x/YQFwFg)
      type: object
      properties:
        id:
          type: integer
          nullable: false
          format: int32
        type:
          $ref: '#/components/schemas/ScopeType'
        name:
          type: string
        fullName:
          type: string
        children:
          type: array
          items:
            $ref: '#/components/schemas/Scope'
    ScopeSelection:
      description: >-
        [API Object ScopeSelection v5
        documentation](https://clublead.atlassian.net/wiki/x/SQAoGg)
      type: object
      properties:
        excludeHomeCenter:
          type: boolean
          nullable: false
        scope:
          $ref: '#/components/schemas/Scope'
    ScopeType:
      type: string
      enum:
        - Global
        - Tree
        - Area
        - Center
    Seat:
      description: >-
        [API Object Seat v5
        documentation](https://clublead.atlassian.net/wiki/x/q4BuIQ)
      type: object
      properties:
        name:
          type: string
        row:
          type: number
        position:
          type: number
      required:
        - name
        - row
        - position
    SeatBookingType:
      type: string
      enum:
        - NOT_AVAILABLE
        - MANDATORY
        - OPTIONAL
    SelectedOption:
      type: object
      properties:
        id:
          type: integer
          nullable: false
          format: int32
    SelectedVendingProduct:
      type: object
      properties:
        quantity:
          type: integer
          nullable: false
          format: int32
        productId:
          type: string
        defaultPrice:
          type: number
      required:
        - quantity
        - productId
    SoldGiftCard:
      type: object
      properties:
        invoiceKey:
          $ref: '#/components/schemas/CompositeKey'
        giftCardKey:
          $ref: '#/components/schemas/CompositeKey'
        cardId:
          type: string
        cardType:
          $ref: '#/components/schemas/AccessCardType'
    SponsorshipType:
      type: string
      enum:
        - NONE
        - FULL
        - FIXED
        - PERCENTAGE
        - PAY_INSTALLMENT
    StaffAvailability:
      description: >-
        [API Object StaffAvailability v5
        documentation](https://clublead.atlassian.net/wiki/x/_QIpGg)
      type: object
      properties:
        staffAvailabilityKey:
          $ref: '#/components/schemas/CompositeKey'
        startDate:
          type: string
        startTime:
          type: string
        stopTime:
          type: string
        instructorKey:
          $ref: '#/components/schemas/ApiPersonKey'
        staffAvailabilityActivity:
          $ref: '#/components/schemas/StaffAvailabilityActivity'
    StaffAvailabilityActivity:
      description: >-
        [API Object StaffAvailabilityActivity v5
        documentation](https://clublead.atlassian.net/wiki/x/8QIpGg)
      type: object
      properties:
        key:
          type: integer
          nullable: false
          format: int32
        name:
          type: string
        colorGroup:
          $ref: '#/components/schemas/ColorGroup'
    StaffMember:
      description: >-
        [API Object StaffMember v5
        documentation](https://clublead.atlassian.net/wiki/x/G4FvFg)
      type: object
      properties:
        personId:
          $ref: '#/components/schemas/ApiPersonKey'
        firstName:
          type: string
        lastName:
          type: string
        fullName:
          type: string
    StartupCampaignFreePeriodInfo:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        relativeToBinding:
          type: string
        periodSpan:
          type: string
        extendsBinding:
          type: string
    StartupRecurringClipcard:
      description: >-
        [API Object StartupRecurringClipcard v5
        documentation](https://clublead.atlassian.net/wiki/x/eADSGw)
      type: object
      properties:
        name:
          type: string
        numberOfClips:
          type: integer
          format: int32
        price:
          type: number
        sponsoredAmount:
          type: number
    StopFreezePeriodInfo:
      type: object
      properties:
        nextDeductionPrice:
          type: string
        nextDeductionDate:
          type: string
        endDate:
          type: string
    Subscription:
      description: >-
        [API Object Subscription v5
        documentation](https://clublead.atlassian.net/wiki/x/JoFuFg)
      type: object
      properties:
        subscriptionId:
          $ref: '#/components/schemas/CompositeKey'
        personId:
          $ref: '#/components/schemas/ApiPersonKey'
        product:
          $ref: '#/components/schemas/SubscriptionProduct'
        state:
          $ref: '#/components/schemas/SubscriptionState'
        subState:
          $ref: '#/components/schemas/SubscriptionSubState'
        price:
          type: string
        startDate:
          type: string
        endDate:
          type: string
        bindingEndDate:
          type: string
        billedUntilDate:
          type: string
        freeDays:
          type: integer
          nullable: false
          format: int32
        assignedAddOns:
          type: array
          items:
            $ref: '#/components/schemas/AssignedAddOn'
        windowOfOpportunity:
          type: integer
          format: int32
        paymentAgreementKey:
          $ref: '#/components/schemas/CompositeSubKey'
        changeRestrictionEnabled:
          type: boolean
        nextPeriod:
          $ref: '#/components/schemas/NextPeriod'
    SubscriptionChangeType:
      type: string
      enum:
        - ALL
        - UPGRADE
        - DOWNGRADE
        - CHANGE
    SubscriptionClearingHouseTypeRestriction:
      type: string
      enum:
        - EFT
        - INVOICE
        - CREDIT_CARD
    SubscriptionContractSummary:
      type: object
      properties:
        productKey:
          $ref: '#/components/schemas/ApiProductKey'
        name:
          type: string
        startDate:
          type: string
        bindingPeriodLength:
          type: integer
          format: int32
        bindingEndDate:
          type: string
        creationPrice:
          type: string
        creationSponseredAmount:
          type: string
        creationNormalPrice:
          type: string
        creationPriceSource:
          type: string
        creationPriceText:
          type: string
        initialPeriodStartDate:
          type: string
        initialPeriodEndDate:
          type: string
        initialPeriodNormalPrice:
          type: string
        initialPeriodPrice:
          type: string
        initialPeriodCampaignSource:
          type: string
        periodLength:
          type: integer
          format: int32
        periodUnit:
          type: integer
          format: int32
        normalPeriodPrice:
          type: string
        normalPeriodSponseredAmount:
          type: string
        normalPeriodPriceSource:
          type: string
        normalPeriodPriceText:
          type: string
        product:
          $ref: '#/components/schemas/SubscriptionProduct'
        startupCampaignPrice:
          type: string
        startupCampaignStartDate:
          type: string
        startupCampaignEndDate:
          type: string
        startupCampaignSource:
          type: string
        startupCampaignText:
          type: string
        adminFeePrice:
          type: string
        proRataPrice:
          type: string
        proRataSponsoredAmount:
          type: string
        firstDeductionAmount:
          type: string
        firstDeductionDate:
          type: string
        firstDeductionPeriodStartDate:
          type: string
        firstDeductionPeriodEndDate:
          type: string
        availableAddOnProducts:
          $ref: '#/components/schemas/Collection'
        totalAmount:
          type: string
        periodPriceSourceType:
          $ref: '#/components/schemas/PeriodPriceSourceType'
        periodPriceSourceEndDate:
          type: string
    SubscriptionCreationInformation:
      type: object
      properties:
        prorataPeriod:
          $ref: '#/components/schemas/SubscriptionCreationPeriod'
        initialPeriod:
          $ref: '#/components/schemas/SubscriptionCreationPeriod'
        campaignPeriod:
          $ref: '#/components/schemas/SubscriptionCreationPeriod'
        normalPrice:
          $ref: '#/components/schemas/ProductPrice'
        bindingEndDate:
          type: string
        availableAddOnProducts:
          type: array
          items:
            $ref: '#/components/schemas/AvailableAddOnProduct'
    SubscriptionCreationPeriod:
      description: >-
        [API Object SubscriptionCreationPeriod v5
        documentation](https://clublead.atlassian.net/wiki/x/AwFvFg)
      type: object
      properties:
        startDate:
          type: string
        endDate:
          type: string
        price:
          $ref: '#/components/schemas/ProductPrice'
    SubscriptionFreePeriod:
      type: object
      properties:
        freePeriodKey:
          $ref: '#/components/schemas/CompositeSubKey'
        startDate:
          type: string
        stopDate:
          type: string
        comment:
          type: string
        type:
          type: string
        subscriptionPeriodState:
          type: string
        entryDate:
          type: string
        entryTime:
          type: string
        cancelDate:
          type: string
        cancelTime:
          type: string
    SubscriptionKey:
      type: object
      properties:
        center:
          type: integer
          nullable: false
          format: int32
        id:
          type: integer
          nullable: false
          format: int32
    SubscriptionPriceType:
      type: string
      enum:
        - PRORATA
        - INITIAL
        - CAMPAIGN
        - NORMAL
        - CONVERSION
        - DOCUMENTATION
        - PERSON_TYPE
        - TRANSFER
        - INDIVIDUAL
        - SCHEDULED
        - FAMILY_PERSON_TYPE
        - FAMILY_SUBSCRIPTION
        - MANUAL
    SubscriptionPrivilegePrice:
      type: object
      properties:
        subscriptionProductKey:
          $ref: '#/components/schemas/CompositeKey'
        subscriptionName:
          type: string
        creationPrice:
          $ref: '#/components/schemas/ProductPrice'
        periodPrice:
          $ref: '#/components/schemas/ProductPrice'
        externalId:
          type: string
    SubscriptionProduct:
      description: >-
        [API Object SubscriptionProduct v5
        documentation](https://clublead.atlassian.net/wiki/x/K4FvFg)
      type: object
      properties:
        globalId:
          type: string
        name:
          type: string
        type:
          $ref: '#/components/schemas/SubscriptionType'
        externalId:
          type: string
        periodUnit:
          $ref: '#/components/schemas/TimeUnit'
        periodLength:
          type: integer
          nullable: false
          format: int32
        webname:
          type: string
        description:
          type: string
        rank:
          type: integer
          format: int32
        mostPopular:
          type: boolean
        sellingPoints:
          $ref: '#/components/schemas/List'
    SubscriptionState:
      type: string
      enum:
        - ACTIVE
        - ENDED
        - FROZEN
        - WINDOW
        - CREATED
    SubscriptionStopInfo:
      type: object
      properties:
        lastTrainingDay:
          type: string
        lastPaidDay:
          type: string
    SubscriptionSubState:
      type: string
      enum:
        - NONE
        - AWAITING_ACTIVATION
        - UPGRADED
        - DOWNGRADED
        - EXTENDED
        - TRANSFERRED
        - REGRETTED
        - CANCELLED
        - BLOCKED
        - CHANGED
    SubscriptionType:
      type: string
      enum:
        - CASH
        - EFT
        - RECURRING_CLIPCARD
        - COURSE
    SummaryCourseInfo:
      description: >-
        [API Object SummaryCourseInfo v5
        documentation](https://clublead.atlassian.net/wiki/x/FILeGw)
      type: object
      properties:
        courseName:
          type: string
        courseId:
          type: integer
          format: int32
    TargetGroup:
      type: object
      properties:
        targetGroupId:
          type: integer
          format: int32
        name:
          type: string
        personTypes:
          type: array
          items:
            $ref: '#/components/schemas/PersonType'
    Task:
      description: >-
        [API Object Task v5
        documentation](https://clublead.atlassian.net/wiki/x/LIFuFg)
      type: object
      properties:
        personId:
          $ref: '#/components/schemas/ApiPersonKey'
        assigneePersonId:
          $ref: '#/components/schemas/ApiPersonKey'
        creatorPersonId:
          $ref: '#/components/schemas/ApiPersonKey'
        taskTypeExternalId:
          type: string
        title:
          type: string
        description:
          type: string
        followUpDate:
          type: string
      required:
        - personId
        - creatorPersonId
        - taskTypeExternalId
        - title
    TimeRestriction:
      description: >-
        [API Object TimeRestriction v5
        documentation](https://clublead.atlassian.net/wiki/x/OoFvFg)
      type: object
      properties:
        schedule:
          $ref: '#/components/schemas/Schedule'
    TimeUnit:
      type: string
      enum:
        - YEAR
        - MONTH
        - WEEK
        - DAY
        - HOUR
        - MINUTE
        - SECOND
    ToDo:
      type: object
      properties:
        assignedPersonKey:
          $ref: '#/components/schemas/ApiPersonKey'
        regardingPerson:
          $ref: '#/components/schemas/Person'
        createdByKey:
          $ref: '#/components/schemas/ApiPersonKey'
        subject:
          type: string
        deadline:
          type: string
        creationTime:
          type: integer
          nullable: false
          format: int64
        toDoState:
          type: string
        toDoGroupName:
          type: string
        toDoExternalId:
          type: string
      required:
        - assignedPersonKey
        - createdByKey
        - subject
        - deadline
        - creationTime
        - toDoState
        - toDoGroupName
        - toDoExternalId
    TransferAccountBalanceResponse:
      type: object
      properties:
        transferredAmount:
          type: string
    TransferPersonInfo:
      type: object
      properties:
        person:
          $ref: '#/components/schemas/Person'
        subscriptions:
          type: array
          items:
            $ref: '#/components/schemas/Subscription'
      required:
        - person
    TransferSubscriptionInfo:
      type: object
      properties:
        subscriptionKey:
          $ref: '#/components/schemas/CompositeKey'
        productKey:
          $ref: '#/components/schemas/CompositeKey'
        terminateIfUnavailable:
          type: boolean
          nullable: false
      required:
        - subscriptionKey
        - productKey
    UpdateAgreementReferenceResponse:
      type: object
      properties:
        paymentAgreement:
          $ref: '#/components/schemas/PaymentAgreement'
    UpdateCenterAttributesParams:
      type: object
      properties:
        centerId:
          type: integer
          format: int32
        extendedAttributes:
          type: array
          items:
            $ref: '#/components/schemas/ExtendedAttribute'
    UsageInformation:
      description: >-
        [API Object UsageInformation v5
        documentation](https://clublead.atlassian.net/wiki/x/pwIqIg)
      type: object
      properties:
        usageInformationType:
          type: string
        price:
          type: string
        balance:
          type: string
        clips:
          type: integer
          nullable: false
          format: int32
        clipsLeft:
          type: integer
          nullable: false
          format: int32
        expireDate:
          type: string
    UserInterfaceType:
      type: string
      enum:
        - CLIENT
        - WEB
        - KIOSK
        - MOBILE
        - MOBILE_STAFF
        - OTHER
    VATInfo:
      type: object
      properties:
        amount:
          type: string
        rate:
          type: string
    ValidationProblem:
      description: >-
        [API Object ValidationProblem v5
        documentation](https://clublead.atlassian.net/wiki/x/C4FwFg)
      type: object
      properties:
        propertyNames:
          type: array
          items:
            type: string
        errorCode:
          $ref: '#/components/schemas/ErrorCode'
        message:
          type: string
    VendingAccountInfo:
      type: object
      properties:
        welcomeMessage:
          type: string
        maxPurchaseAmount:
          type: string
        personKey:
          $ref: '#/components/schemas/ApiPersonKey'
    VendingMachineSaleInfo:
      type: object
      properties:
        vendingMachineSaleResult:
          type: string
          enum:
            - SUCCESS
            - COULD_NOT_CREATE_SHOPPING_BASKET
            - COULD_NOT_CREATE_PAYMENT_SESSION
        reference:
          type: string
        amount:
          type: string
    WeekDay:
      type: string
      enum:
        - MONDAY
        - TUESDAY
        - WEDNESDAY
        - THURSDAY
        - FRIDAY
        - SATURDAY
        - SUNDAY
    WeeklySchedule:
      description: >-
        [API Object WeeklySchedule v5
        documentation](https://clublead.atlassian.net/wiki/x/EIFwFg)
      type: object
      properties:
        monday:
          type: array
          items:
            $ref: '#/components/schemas/Interval'
        tuesday:
          type: array
          items:
            $ref: '#/components/schemas/Interval'
        wednesday:
          type: array
          items:
            $ref: '#/components/schemas/Interval'
        thursday:
          type: array
          items:
            $ref: '#/components/schemas/Interval'
        friday:
          type: array
          items:
            $ref: '#/components/schemas/Interval'
        saturday:
          type: array
          items:
            $ref: '#/components/schemas/Interval'
        sunday:
          type: array
          items:
            $ref: '#/components/schemas/Interval'
security:
  - basicAuth: []
